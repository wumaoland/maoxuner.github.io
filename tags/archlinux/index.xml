<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>archlinux on 二次元の技术宅</title>
    <link>https://www.maoxuner.cn/tags/archlinux/</link>
    <description>Recent content in archlinux on 二次元の技术宅</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 23 Sep 2021 00:30:58 +0800</lastBuildDate><atom:link href="https://www.maoxuner.cn/tags/archlinux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>解决Archlinux上Navicat因glib2不兼容报错问题</title>
      <link>https://www.maoxuner.cn/post/2021/09/navicat-with-glib2-70/</link>
      <pubDate>Thu, 23 Sep 2021 00:30:58 +0800</pubDate>
      
      <guid>https://www.maoxuner.cn/post/2021/09/navicat-with-glib2-70/</guid>
      <description>&lt;p&gt;习惯性地更新了Archlinux所有软件包，发现Navicat无法运行了。命令行运行报错如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;symbol lookup error: /usr/lib/libgio-2.0.so.0: undefined symbol: g_module_open_full
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;网上查到&lt;code&gt;libgio-2.0.so.0&lt;/code&gt;是&lt;code&gt;glib2&lt;/code&gt;包的文件，显然是版本不兼容了。考虑到AppImage本质上就是把各依赖库打包起来做成了便携应用，便考虑把老版本的&lt;code&gt;glib2&lt;/code&gt;打包进应用镜像，结果完美解决。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Archlinux添加自签名证书到系统</title>
      <link>https://www.maoxuner.cn/post/2021/05/archlinux-self-signed-cert/</link>
      <pubDate>Fri, 14 May 2021 15:25:17 +0800</pubDate>
      
      <guid>https://www.maoxuner.cn/post/2021/05/archlinux-self-signed-cert/</guid>
      <description>&lt;p&gt;Web本地开发时可能要用到自签名证书来进行https访问。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ArchLinux将屏幕扩展到平板上</title>
      <link>https://www.maoxuner.cn/post/2020/02/archlinux-multihead/</link>
      <pubDate>Thu, 20 Feb 2020 14:03:53 +0800</pubDate>
      
      <guid>https://www.maoxuner.cn/post/2020/02/archlinux-multihead/</guid>
      <description>&lt;p&gt;在有扩展显示器之前，有个奇思妙想：将桌面内容扩展到安卓平板上。Windows和MacOS似乎有现成的解决方案，而Linux则需要折腾一番。我的思路是：在Linux上创建一个虚拟桌面，然后通过VNC连接到这个桌面上。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日常使用ArchLinux</title>
      <link>https://www.maoxuner.cn/post/2018/03/archlinux-as-usual/</link>
      <pubDate>Fri, 23 Mar 2018 14:14:29 +0800</pubDate>
      
      <guid>https://www.maoxuner.cn/post/2018/03/archlinux-as-usual/</guid>
      <description>&lt;p&gt;简单来说，受够了windows，买不起osx，就只能折腾linux。折腾了好几个发行版，这次换了archlinux了。理由很简单：软件版本新、滚动发行、&lt;del&gt;yaourt&lt;/del&gt; yay一切。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;折腾了一阵子MacOS，发现它的软件管理太麻烦了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AppStore（系统更新、部分软件包）&lt;/li&gt;
&lt;li&gt;网络上的软件包&lt;/li&gt;
&lt;li&gt;HomeBrew（GNU、Casks）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大部分Casks不能更换软件源，更新速度极慢，加上Mac机器老旧，新上市的AMD yes等原因，便回到了linux阵营。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>折腾ArchLinux</title>
      <link>https://www.maoxuner.cn/post/2018/03/try-archlinux/</link>
      <pubDate>Tue, 06 Mar 2018 09:25:21 +0800</pubDate>
      
      <guid>https://www.maoxuner.cn/post/2018/03/try-archlinux/</guid>
      <description>&lt;p&gt;日常使用&lt;a href=&#34;https://www.deepin.org&#34; target=&#34;_blank&#34;&gt;deepin&lt;/a&gt;一年多，开箱即用，而且中国特色化做得很好。然而，在用的过程中总觉得缺点啥。于是我又开始了新一轮的尝试。
ArchLinux，简洁、海量包、滚动发行。不过，最让我印象深刻的是它全面的wiki，尽管汉化wiki跟不上进度。最新的软件包，使得我更新和安装软件很便利。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
