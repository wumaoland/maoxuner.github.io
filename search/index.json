[{"content":"习惯性地更新了Archlinux所有软件包，发现Navicat无法运行了。命令行运行报错如下：\nsymbol lookup error: /usr/lib/libgio-2.0.so.0: undefined symbol: g_module_open_full  网上查到libgio-2.0.so.0是glib2包的文件，显然是版本不兼容了。考虑到AppImage本质上就是把各依赖库打包起来做成了便携应用，便考虑把老版本的glib2打包进应用镜像，结果完美解决。\n把glib2 2.68.4打包到应用镜像里 这是我在Archlinux论坛的回复，懒得翻译了，内容如下。\nSolution: Patch glib2 version 2.68.4 into appimage\nSteps:\n  Extract appimage file. All files will be in a directory called squashfs-root\nyour-path/navicat15-premium-en.AppImage --appimage-extract  Tips: When extracting ends in error as follow, you can try to mount appimage file then copy app source to directory squashfs-root.\n ./navicat15-premium-en.AppImage \u0026ndash;appimage-extract qt.qpa.xcb: QXcbConnection: XCB error: 3 (BadWindow), sequence: 471, resource id: 12928710, major code: 40 (TranslateCoords), minor code: 0 /tmp/.mount_whnQrp/AppRun: symbol lookup error: /usr/lib/libgio-2.0.so.0: undefined symbol: g_module_open_full\n # create app source mount point mkdir src # mount appimage file(read only) sudo mount -o loop your-path/navicat15-premium-en.AppImage src # copy all source file(writable) cp -r src squashfs-root # umount appimage file sudo umount src rmdir src    Find your glib2-2.68.4-1-x86_64.pkg.tar.zst package file. If you are lucky enough, there will be one in path /var/cache/pacman/pkg/glib2-2.68.4-1-x86_64.pkg.tar.zst. Or download it from package repository. Or anywhere.\nhttps://archive.archlinux.org/packages/g/glib2/glib2-2.68.4-1-x86_64.pkg.tar.zst    Extract glib2-2.68.4-1-x86_64.pkg.tar.zst to squashfs-root\ntar xvf glib2-2.68.4-1-x86_64.pkg.tar.zst -C squashfs-root    Repack squashfs-root into appimage file\nappimagetool squashfs-root navicat15-premium-en-patched.AppImage    no more steps, just run it\n  把libffi 3.3打包到应用镜像里 最近发现Navicat跟libffi也出现了版本兼容的问题，运行错误如下：\nerror while loading shared libraries: libffi.so.7: cannot open shared object file: No such file or directory  查询发现，近期3.4.2-4版本的libffi去除了包中的libffi.so.7文件，取而代之的是libffi.so.8。看来找到旧版本的libffi打包进去即可，或者安装aur的包libffi7退回旧版本（不知道会不会出现其他兼容性问题）。\n分析了libffi7后，发现libffi.so.7是libffi包3.3版本中的文件。那么可以把libffi-3.3-4-x86_64.pkg.tar.zst打包进应用镜像就好了。具体过程同glib2。\nhttps://archive.archlinux.org/packages/l/libffi/libffi-3.3-4-x86_64.pkg.tar.zst  奇怪的是，原应用镜像里自带了libffi6，不知道为何不能使用。\n参考文章  navicat report error after update system glib2-2.68.4-1-x86_64.pkg.tar.zst HeQuanX/navicat-keygen-tools#how to use libffi7 libffi-3.3-4-x86_64.pkg.tar.zst ","date":"2021-09-23","permalink":"https://www.maoxuner.cn/post/2021/09/navicat-with-glib2-70/","tags":["archlinux","appimage"],"title":"解决Archlinux上Navicat因glib2不兼容报错问题"},{"content":"偶然发现了NES风格的样式库，并打算以此做个主题。目前只设计了主要页面。\nNES.css         项目地址：maoxuner/hugo-theme-nes\n参考文章  NES.css   const h = document.querySelector('head'); ['https://cdn.staticfile.org/nes.css/2.3.0/css/nes.min.css'].forEach(a = { const l = document.createElement('link'); l.href = a; l.rel = 'stylesheet'; h.appendChild(l); })  ","date":"2021-05-14","permalink":"https://www.maoxuner.cn/post/2021/05/hugo-theme-nes/","tags":null,"title":"Hugo主题NES"},{"content":"Web本地开发时可能要用到自签名证书来进行https访问。\n操作方法 trust anchor --store myCA.crt  参考文章  User:Grawity/Adding a trusted CA certificate ","date":"2021-05-14","permalink":"https://www.maoxuner.cn/post/2021/05/archlinux-self-signed-cert/","tags":["archlinux","ssl"],"title":"Archlinux添加自签名证书到系统"},{"content":" Data truncation: Incorrect datetime value: \u0026lsquo;0000-00-00 00:00:00\u0026rsquo; for column.\n 简而言之，就是字段值不能是0000-00-00 00:00:00:00\n问题缘由 sql_mode变量中包含NO_ZERO_DATE或者NO_ZERO_IN_DATE\n查看当前sql_mode\n# 查看当前sql_mode select @@sql_mode; # 查看全局sql_mode select @@global.sql_mode;  修改当前sql_mode\n# 修改全局 set @@global.sql_mode = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'; # 修改当前 set @@sql_mode = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';  参考文章  Data truncation: Incorrect datetime value: \u0026lsquo;0000-00-00 00:00:00\u0026rsquo; for column xxx ","date":"2021-05-14","permalink":"https://www.maoxuner.cn/post/2021/05/datetime-column-default-value/","tags":["mysql"],"title":"Datetime字段类型默认值问题"},{"content":"某些场景下可能需要使用以非root用户来运行docker服务，以保证系统的安全性。\n参考文章  Run the Docker daemon as a non-root user (Rootless mode)  ","date":"2021-05-14","permalink":"https://www.maoxuner.cn/post/2021/05/docker-non-root/","tags":["docker"],"title":"以非root用户运行docker服务"},{"content":"上周遇到了MTU导致的Docker镜像拉取失败，这次又遇到了奇怪的情况导致镜像拉取失败。\nfailed to register layer: Error processing tar file(exit status 1): open /etc/init.d/nginx: permission denied  百度搜了一下，找到了相关的文章，看到了关键字yunsuo，这才想起来公司早期的服务器是安装了这个管理软件的，当时就会引起各种权限问题。果断禁用了，然后一切正常。因为这，我耗费了一整个晚上的时间。累觉不爱，赶紧卸载。\n以下是centos下禁用yunsuo的命令\nsudo /sbin/chkconfig yunsuo off sudo /sbin/chkconfig yunsuo_guard off  参考文章  docker pull报错failed to register layer: Error processing tar file(exit status 1): open permission denied ","date":"2020-03-22","permalink":"https://www.maoxuner.cn/post/2020/03/docker-pull-failure-caused-by-yunsuo/","tags":["docker"],"title":"云锁导致的Docker镜像拉取失败"},{"content":"将CI/CD服务前移到k8s后，当drone的插件drone-docker构建镜像时，总卡在更新软件包的步骤。是网络连接的问题，为了解决这个问题，耗费了我整个周末。\n# apk update fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz  Drone-Runner in K8S 在k8s环境中，drone-runner通过调用k8s的api，创建相应的pod来运行pipeline。此时，一个pipeline对应一个pod。Pod中的各个容器对应pipeline中的各个step。\nDrone-Docker 在docker环境中，drone-docker一般以docker outside of docker(dood)的方式运行。但在k8s环境中，drone-docker以docker in docker(dind)的方式运行，可以理解成“套娃”。\n由于我的集群的cri是containerd，更准确的说，这里是以docker in containerd的方式运行的：\n 执行drone-pipeline的pod运行在k8s的containerd上 构建镜像的docker容器通过pod内容器的docker服务运行  k8s (containerd) └── pod (pipeline) ├── container (step clone) └── container (step drone-docker) └── docker (dind) └── container (docker build)  这种复杂的结构，导致了奇怪的网络现象，结合以上树形图进行说明：\n 容器(step drone-docker)的网络正常 容器(docker build)可以下载基于http协议的小体积文件 容器(docker build)不能下载基于http协议的大文件以及所有基于https的文件  Maximum Transmission Unit(MTU) 起初，我以为区别在于http和https协议，可能是tls握手出现了问题。打算通过http协议，下载安装一些包，进行网络测试，却发现大体积的文件也无法下载。即使能够下载，下载的速度也特别慢。\n看来并不是协议的问题，是响应体大小的问题，更准确的说是传输速度的问题。其实，我有过容器内下载速度慢的经验：在京东云运行docker容器时因为网速慢调整过mtu。于是便在mtu上下功夫了。\n容器(step drone-docker)，主机网卡eth0@if112mtu是1450，docker网桥docker0mtu是1500\n1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 3: eth0@if112: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN\u0026gt; mtu 1450 qdisc noqueue state UP link/ether 76:93:e3:c6:53:fb brd ff:ff:ff:ff:ff:ff inet 10.42.0.108/24 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::7493:e3ff:fec6:53fb/64 scope link tentative dadfailed valid_lft forever preferred_lft forever 4: docker0: \u0026lt;NO-CARRIER,BROADCAST,MULTICAST,UP\u0026gt; mtu 1500 qdisc noqueue state DOWN link/ether 02:42:2a:76:ce:8a brd ff:ff:ff:ff:ff:ff inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0 valid_lft forever preferred_lft forever inet6 fe80::42:2aff:fe76:ce8a/64 scope link valid_lft forever preferred_lft forever  容器(docker build)，主机网卡eth0@if8mtu是1500\n1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever 7: eth0@if8: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN\u0026gt; mtu 1500 qdisc noqueue state UP link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0 valid_lft forever preferred_lft forever  果然，子容器内的mtu跟容器宿主机的mtu是不一致的，且子容器的mtu比容器宿主机的mtu大。这就导致了数据传输时需要分片，进而导致网络速度下降。将子容器的mtu设置成与容器宿主机一样的值就行了。\n在这里，我在drone pipeline内设置相应的mtu值即可。注意：这里的mtu键是plugins/docker插件的一个参数。对于正常的容器而言，应设置与之对应的参数。\nkind: pipeline type: kubernetes name: default steps: - name: php-fpm image: plugins/docker settings: mtu: 1450  关于MTU的理解 将子容器往容器宿主机数据传输过程比作用货车运箱子：子容器mtu值是箱子的大小，容器宿主机的mtu值是货车车厢的容量大小。\n当箱子比车厢大时，需要将箱子切割并分给其他货车运输（数据包的分片），因此箱子的运输效率会降低。\n参考文章  第三方镜像产品制作规范 京东云的 dhcp 分配的 mtu 是 1450 Docker系列之MTU debug ","date":"2020-03-15","permalink":"https://www.maoxuner.cn/post/2020/03/host-container-mtu/","tags":["linux","docker","k8s","drone"],"title":"因MTU导致的容器网络问题"},{"content":"Kubernetes Dashboard的后端必须通过https访问，是自签名的ssl证书。使用Ingress连接时，会出现证书验证的问题，因此要配置Ingress忽略ssl验证。\nIngress Nginx Ingress Nginx是k8s官方社区开发的Ingress控制器，是基于Nginx的。熟悉Nginx的话，配置起来会比较简单。\napiVersion: networking.k8s.io/v1beta1 kind: Ingress metadata: name: kubernetes-dashboard namespace: kubernetes-dashboard annotations: kubernetes.io/ingress.class: nginx nginx.ingress.kubernetes.io/backend-protocol: HTTPS nginx.ingress.kubernetes.io/server-snippet: | proxy_ssl_verify off; spec: tls: - hosts: - dashboard.domain.com secretName: tls-domain-com rules: - host: dashboard.domain.com http: paths: - backend: serviceName: kubernetes-dashboard servicePort: 443  Traefik 切换到k3s后，默认的Ingress控制器是Traefik。Traefik看起来比Nginx更轻量，更强大。Traefik比较智能，会根据端口、服务名称等信息自动判断后端是不是https协议，而不必额外指定后端的协议类型。但是对于自签名ssl证书的验证只能在traefik全局进行配置。\napiVersion: helm.cattle.io/v1 kind: HelmChart metadata: name: traefik namespace: kube-system spec: chart: https://%{KUBERNETES_API}%/static/charts/traefik-1.81.0.tgz set: rbac.enabled: \u0026quot;true\u0026quot; ssl.enabled: \u0026quot;true\u0026quot; ssl.insecureSkipVerify: \u0026quot;true\u0026quot; metrics.prometheus.enabled: \u0026quot;false\u0026quot; kubernetes.ingressEndpoint.useDefaultPublishedService: \u0026quot;true\u0026quot; --- apiVersion: networking.k8s.io/v1beta1 kind: Ingress metadata: name: kubernetes-dashboard namespace: kubernetes-dashboard annotations: traefik.ingress.kubernetes.io/redirect-entry-point: https spec: tls: - hosts: - dashboard.fat4.cn secretName: tls-fat4-cn rules: - host: dashboard.fat4.cn http: paths: - backend: serviceName: kubernetes-dashboard servicePort: 443   Please note that by enabling TLS communication between traefik and your pods, you will have to have trusted certificates that have the proper trust chain and IP subject name. If this is not an option, you may need to skip TLS certificate verification. See the insecureSkipVerify setting for more details.\n 可以说一切答案藏在官方文档中，只是初次接触时很少会完整的将文档看下来。\n参考文章  rook/dashboard-ingress-https.yaml Helm Charts - Traefik Traefik - Configuration Common#Main Section TLS communication between Traefik and backend pods ","date":"2020-03-14","permalink":"https://www.maoxuner.cn/post/2020/03/kubernetes-dashboard-ingress/","tags":["k8s","k3s","ingress","nginx","traefik"],"title":"K8S Dashboard的Ingress配置"},{"content":"去年，我的燃7000出现了一些软硬件故障，便狠下心换了一个二手的15款MBP，从此告别了折腾linux的日子。然而，日常开发时却发现docker的响应速度远不如之前的linux。好在还有优化的空间。\nLinux和MacOS上docker的区别 因为折腾过不少系统，自然而然知道，docker在linux上是直接跑在系统上的。而在Windows和MacOS上，docker需要通过一层虚拟化来运行，性能损失是必然的。\n于是，我优先将docker的CPU和内存配额尽可能的调大了。然而，性能提升并不明显。\n分析主要性能损失 我在做Laravel项目的开发，项目中用到了Laravel-Admin这个包，直观的感受就是打开一个页面需要等好久。\n一个偶然的发现：在请求发起之后的文件改动生效了！这就意味着，从我发起了请求直到我修改这个文件的这段时间内，服务器都没有读取到这个被修改的文件，即文件读写的性能开销很大。\n因为是开发环境，代码是通过Volume的方式挂载到容器内部的，因此性能损失很有可能是Volume造成的。\n优化方法 volume挂载有多个参数可以设置，常见的只读ro和读写rw，还有cached、delegated、consistent。以下引用官方的说明：\n consistent:perfect consistency (host and container have an identical view of the mount at all times) cached:the host’s view is authoritative (permit delays before updates on the host appear in the container) delegated:the container’s view is authoritative (permit delays before updates on the container appear in the host)  consistent从字面上理解是持久的，应该是保证容器内的数据跟volume挂载时宿主机的数据一致，不管容器内外文件有何变动，都不会同步。\ncached是缓存的意思，更新策略是宿主机改动优先更新到容器内，允许容器内的改动延迟更新回宿主机。\ndelegated的机制则与cached相反。\n由于开发环境主要是在宿主机上改动（写）代码，在容器内运行（读）代码，因此cached参数更合适。加上缓存后，原本需要10秒才能打开的页面，现在只要2秒就能打开了，性能提升明显。至少能接受了。\n使用示例 docker run -v /Users/yallop/project:/project:cached alpine command  version: \u0026quot;3\u0026quot; services: php-fpm: image: php:fpm-alpine volumes: - /Users/yallop/project:/var/www/html:cached  参考文章  Speeding up Docker on MacOS Performance tuning for volume mounts (shared filesystems) ","date":"2020-03-12","permalink":"https://www.maoxuner.cn/post/2020/03/macos-docker-volumes-cached/","tags":["docker"],"title":"MacOS Docker Volume性能优化"},{"content":"在有扩展显示器之前，有个奇思妙想：将桌面内容扩展到安卓平板上。Windows和MacOS似乎有现成的解决方案，而Linux则需要折腾一番。我的思路是：在Linux上创建一个虚拟桌面，然后通过VNC连接到这个桌面上。\n大致方法 曾经用到的一些代码贴过来，也不知道能不能用了。总的来说，可以但没必要。有精力研究这个，不如狠心买个显示器。\n 创建虚拟屏幕 #!/bin/bash xrandr --newmode \u0026quot;1440x900_60.00\u0026quot; 106.50 1440 1528 1672 1904 900 903 909 934 -hsync +vsync xrandr --addmode VIRTUAL1 1440x900_60.00 sleep 1 xrandr --output VIRTUAL1 --pos 1440x900-1440+0 --left-of eDP1   启动VNC服务器 #!/bin/bash nohup x0vncserver -display :0 -securitytypes none \u0026gt;\u0026gt; /tmp/vnc.log 2\u0026gt;\u0026amp;1 \u0026amp;   然后安卓上安装个VNCViewer，连上来即可  其他代码，Xdmx应该是个半死不活的方案，各种问题\n#!/bin/bash startx -- /usr/bin/Xdmx :1 +xinerama -display :0.0 -display localhost:10.0 -norender -noglxproxy -ignorebadfontpaths  参考文章  Multihead (简体中文) Xorg Extreme Multihead VNC-Server as a virtual X11 monitor to expand screen Add virtual X11 screen to use via VNC VNC-Server as a virtual X11 monitor to expand screen problem ","date":"2020-02-20","permalink":"https://www.maoxuner.cn/post/2020/02/archlinux-multihead/","tags":["linux","archlinux"],"title":"ArchLinux将屏幕扩展到平板上"},{"content":" 常规文件权限：文件权限继承——设置粘滞位权限 ACL：指定owner以外的用户权限  参考文章  How do I set up a folder so that anything created in it inherits permissions? How to make new file permission inherit from the parent directory? How to set umask for a specific folder ","date":"2020-02-20","permalink":"https://www.maoxuner.cn/post/2020/02/linux-permission/","tags":["linux"],"title":"Linux文件权限笔记"},{"content":"笔记  日期控件双向绑定数据，没什么好办法，都需要特殊处理  iview日期控件，双向绑定日期格式 (原创)iView datepicker无法获取格式化的时间(默认带T和Z)    参考文章  iview日期控件，双向绑定日期格式 (原创)iView datepicker无法获取格式化的时间(默认带T和Z) ","date":"2020-02-20","permalink":"https://www.maoxuner.cn/post/2020/02/iview/","tags":["javascript"],"title":"iView使用总结"},{"content":"用上VPS后，发现树莓派真是太鸡肋了，主要是配置太低了。可能更适合组集群的土豪玩法。\n 无显示器安装（重点就是配置网络、开启ssh服务），参考Setting up a Raspberry Pi headless\n 在启动分区放入wpa_supplicant.conf ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 country=\u0026lt;Insert country code here\u0026gt; network={ ssid=\u0026quot;\u0026lt;Name of your WiFi\u0026gt;\u0026quot; psk=\u0026quot;\u0026lt;Password for your WiFi\u0026gt;\u0026quot; }   在启动分区创建文件ssh   无内存卡，直接从U盘启动，具体看树莓派版本，参考USB mass storage boot\n直接把系统烧录到U盘即可  参考文章  Setting up a Raspberry Pi headless USB mass storage boot ","date":"2020-02-20","permalink":"https://www.maoxuner.cn/post/2020/02/rpi3-initialization/","tags":["rpi","linux"],"title":"树莓派3B+无显示器安装系统"},{"content":"主机多网卡的情况下，可能会涉及容器和网卡的绑定。主要分两个方向：入口流量网卡的绑定、出口流浪网卡的绑定。\n入口流量绑定 入口流量绑定很简单，容器在绑定主机端口时指定主机的网卡或相应网卡的IP（如果主机公网IP与内网IP不同，应绑定内网IP）。\n出口流量绑定 出口流量走Docker网桥。一般情况下，网桥是随机出口流量的。可以通过iptables限制网桥与网卡流量方向。可以创建多个网桥设备，设置不同的导流规则，同时让容器绑定不同的网桥。\niptables -t nat -I POSTROUTING -p all -s 172.17.0.1 -j SNAT --to-source 192.168.1.100  参考文章  IP地址和子网划分学习笔记之《超网合并详解》 探索 Docker bridge 的正确姿势，亲测有效！ 绑定 Dokcer 容器到主机指定网卡 ","date":"2020-02-19","permalink":"https://www.maoxuner.cn/post/2020/02/docker-eth-binding/","tags":["docker"],"title":"Docker绑定网卡"},{"content":"Docker是容器，但容器不是Docker。Docker是containerd的上层应用，Docker的流行带动了容器技术的应用。单机服务编排，docker + docker-compose的组合足以支撑。对于集群管理，还是K8S更合适。K8S可基于docker引擎，也可直接基于containerd的容器引擎。K3S是K8S的精简版，基于containerd。\n折腾笔记  K8S的架构很清晰：\nETCD/SQLite（数据库）+ApiServer（接口）+Controller（控制器）+Kubelet（守护进程）+KubeProxy（网络服务） 可以用kubeadm快速搭建k8s集群，需要将基础镜像替换镜像仓库，参考AKS on Azure China Best Practices kubeadm搭建的集群，控制节点的主机有taint 内网IP和Service的核心是基于KubeProxy控制的iptables规则 kubeadm初始化后，默认没有网络插件。安装网络插件（如Flannel）后DNS才会运行 Pod的流量通过Flannel转发，flannel会进行封包解包，从而实现跨主机，错误排查参考记一次flannel vxlan的debug过程 公网组建K8S集群，可以但没必要（速度慢，不安全）。公网组建集群的核心是要让Flannel封包后发送的地址指向目的主机的公网IP。\n如果主机的公网IP跟内网IP不一致，参考Cloud floating IP persistent，将公网IP绑定到相应网卡上 没有负载均衡器又想暴露主机端口的话，可以使用裸机负载均衡器MetalLB, bare metal load-balancer for Kubernetes K8S官方Dashboard功能较少，且需要以HTTPS访问 Rancher是个功能完善的面板，但安装相对复杂 SSL证书的内容可以存为Secret并挂载到Pod内 自动签发证书可以用Cert-Manager，目前对阿里DNS支持不太好\n可以用acme.sh签发证书，并通过钩子保存成Secret 要求不高的话k3s比kubeadm更好用 单主机“集群”的效率比直接用docker低，耗费的资源更多  参考文章  IP地址和子网划分学习笔记之《超网合并详解》 Debian10 K8s 高可用集群搭建 AKS on Azure China Best Practices How to Set Up an Nginx Ingress with Cert-Manager on DigitalOcean Kubernetes rook/rook ingress-nginx https backend iptables详解 Cloud floating IP persistent 记一次flannel vxlan的debug过程 MetalLB, bare metal load-balancer for Kubernetes Cert-Manager Rancher traefik - Let\u0026rsquo;s Encrypt ","date":"2020-02-19","permalink":"https://www.maoxuner.cn/post/2020/02/k8s/","tags":["k8s","k3s","docker","containerd"],"title":"K8S入坑指南"},{"content":"自建博客，一直想在页面上弄个“人格”，比如“伪春菜”。后来，朋友给我分享了领一只动态卡哇伊的小猫咪到你的网站吧 live2d入门这篇文章。觉得挺合适，一白一黑两只猫模型，刚好LoveIt主题也是黑白。更何况，我还是个铲屎官。\n整合live2DModel 思路 看了全球首家大型线上吸猫网站这个示例后，发现其实很简单：\n 引入live2d的js资源 设置live2d的配置参数，放入live2d模型的路径 调用L2Dwidget的init方法，传入配置参数  整合  将live2DModel资源加入版本库（含live2d以及模型） git submodule add https://gitee.com/tczmh/live2DModel.git static/js/lib/live2DModel   修改layouts/partials/scripts.html模板，引入l2dwidget.min.js\n复制主题内（如themes/LoveIt）的layouts/partials/scripts.html，放到layouts/partials/scripts.html，添加以下代码 {{- /* l2dwidget https://gitee.com/tczmh/live2DModel */ -}} {{- $l2dwidget := \u0026quot;\u0026quot; -}} {{- if eq (getenv \u0026quot;HUGO_ENV\u0026quot;) \u0026quot;production\u0026quot; | and .Site.Params.cdn.l2dwidget_js -}} {{- $l2dwidget = .Site.Params.cdn.l2dwidget_js -}} {{- else -}} {{- $l2dwidget = printf \u0026quot;\u0026lt;script src=\\\u0026quot;%s\\\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\u0026quot; \u0026quot;js/lib/live2DModel/l2dwidget.min.js\u0026quot; | relURL -}} {{- end -}} {{- $l2dwidget | safeHTML -}}   修改assets/js/blog.js，加入模型渲染逻辑。注意配合主题风格切换猫的模型 _Blog.l2dwidget = function() { if (window.L2Dwidget) { let lightPath = 'js/lib/live2DModel/tororo/assets/tororo.model.json'; let darkPath = 'js/lib/live2DModel/hijiki/assets/hijiki.model.json'; let config = { model: { jsonPath: '', // xxx.model.json 的路径 }, display: { superSample: 1, // 超采样等级 width: 150, // canvas的宽度 height: 200, // canvas的高度 position: 'left', // 显示位置：左或右 hOffset: 0, // canvas水平偏移 vOffset: 0, // canvas垂直偏移 }, mobile: { show: true, // 是否在移动设备上显示 scale: 1, // 移动设备上的缩放 motion: true, // 移动设备是否开启重力感应 }, react: { opacityDefault: 1, // 默认透明度 opacityOnHover: 1, // 鼠标移上透明度 }, }; this.show = function() { config.model.jsonPath = isDark ? lightPath : darkPath; L2Dwidget.init(config); } $('.theme-switch').on('click', () =\u0026gt; { this.show(); }); this.show(); } }  然后在$(document).ready()回调的函数体最后加入_Blog.l2dwidget();\n  参考文章  领一只动态卡哇伊的小猫咪到你的网站吧 live2d入门 tczmh/live2DModel ","date":"2020-02-16","permalink":"https://www.maoxuner.cn/post/2020/02/hugo-loveit-with-live2d-cats/","tags":["hugo","html","javascript","go"],"title":"将live2d猫咪整合到Hugo主题LoveIt"},{"content":"最近重新整理了博客，将Hexo搭建的旧站迁移到Hugo搭建的新站了。从14年开始建博客，除去几次迁站删掉了一些，每年都写过几篇文章。唯独2019年，一篇文章都没有。\n老站上，我做了一个“心情”的功能。2018年，我发布的最后一条动态是，我找到新工作了。从这以后，就停止了博客的更新。仅偶尔更新一下友情链接，修复文章中的笔误。\n工作繁忙是我停更的原因之一。换工作之前，由于种种原因，休息了两个多月。我焦急地到处面试，找工作，生怕没人要。终于，面试了一家公司，我以为我遇到了伯乐。算是伯乐吧，人很好，但是公司很坑。从此，程序员的噩梦开始了。几乎每天都要毫无计划的加班，而待遇非常一般，技术几乎没有长进。很小的团队：算上我，少的时候仅2人，多的时候也才4人。整天面对不确定的需求，不确定的方案，不确定的技术支持，不确定的下班时间，上下班通勤要很久，甚至一天有12个小时不属于自己。我处在崩溃的边缘，回到家只剩发呆看室友打游戏的精力了。\n曾经我想着每天早晨准点到，每天中午准点开工，每天矜矜业业地工作，期望着每天晚上能准点下班。然而，准点下班是做不到的。如果一个公司老是无理由的加班，那员工自然也会心安理得地摸鱼，我也不例外。那我为什么没有离开呢，因为我欠一份人情。为了偿还这份人情，即使摸鱼，也会在保证工作的前提下进行。其实，也谈不上摸鱼，只是在解决公司技术的疑难杂症时多看了一些相关技术。于是，我的收藏夹满满的都是链接，等待着哪天可以整理一下。\nHugo的发现让我跃跃欲试。之前对NodeJS很感兴趣，Hexo又是台湾同胞开发的，更显得亲近。于是，我用Hexo重新搭建了静态博客（在之前是动态博客）。那段时间，我对前端技术非常熟悉，甚至定制了自己的Hexo主题，加入了各种各样的功能。然而，NodeJS的模块很麻烦，必须保证安装了这些模块才能正常生成页面，我对此深感嫌弃。另一方面，七牛云不再提供域名给未备案用户使用了。这就导致文章里的所有资源无法加载，整个博客几乎无法查看。我必须整理每篇文章，替换掉每个资源的链接，这非常耗费精力。直到一天，我发现了Hugo这个工具。是Go语言写的啊！我这样感叹。像C语言一样，我对Go语言有着天生的好感。于是，总想着将站点再重构一遍。这是个浩大的工程，我却没有时间。\n肺炎，2020年的阴霾，整个国家因此变得呆滞。我待在家里，漫长又无所事事，于是下定决心迁移博客。整个迁移工作在两三天内完成，包括收藏夹的整理，这就出现了文章高产的2020年2月15日。其实，在这篇文章之前的2020年文章都是2019的故事。2019年并没有消失，只是我太忙太累了。我不确定程序员是否注定如此，但我希望至少要累得有所价值。欠的人情，我仁至义尽了。世界那么大，我想去看看。\n我回来了。\n酱油三三\n2020年2月18日\n","date":"2020-02-16","permalink":"https://www.maoxuner.cn/post/2020/02/2019-404/","tags":["hexo","hugo"],"title":"消失的2019年"},{"content":"如果常用软件有很好的解决方案，我宁愿使用linux系统。各种工具很方便，系统完全在自己的掌控之内。KVM入门后就再也看不上其他虚拟机。\n使用笔记  嵌套虚拟化，如果使用默认的桥接网络。需要修改DHCP网段（不能与宿主虚拟机的网段冲突），否则虚拟机获取不到动态IP。 使用自定义桥接网络，可以把虚拟机暴露到内网中 文件系统穿透：\nMapped模式使用xattr存储文件权限，以libvirt-qemu用户运行kvm\nPassthrough使用真实权限存储，以root用户运行kvm\n9p文件系统挂载示例 /data/share /data/share 9p defaults 0 0 /data/share /data/share 9p trans=virtio,version=9p2000.L 0 0 /data/share /data/share 9p noauto,x-systemd.automount,x-systemd.device-timeout=10,timeo=14,x-systemd.idle-timeout=0,trans=virtio,version=9p2000.L,posixacl,cache=loose 0 0    Web控制台  libvirt - Web applications KVM 虚拟化环境搭建 - ProxmoxVE  ProxmoxVE用着挺方便，但是Debian不是推荐系统，且需要使用定制内核。\n参考文章  Complete Installation of KVM, QEMU and Virt Manager on Arch Linux and Manjaro qemu-kvm introduction BridgeNetworkConnections KVM/Networking No IPv4 address assigned to KVM VM Nested virtualization and the network issue 9p, ubuntu 14 and fstab How to mount 9p drive using /etc/fstab? PCIe Bus Error: severity=Corrected, type=Physical Layer, id=00e5(Receiver ID) Is there any way to shrink qcow2 image without converting it raw? libvirt - Web applications KVM 虚拟化环境搭建 - WebVirtMgr KVM 虚拟化环境搭建 - ProxmoxVE ","date":"2020-02-16","permalink":"https://www.maoxuner.cn/post/2020/02/kvm/","tags":["linux","kvm"],"title":"KVM笔记"},{"content":"S3是亚马逊的对象存储服务，默认的访问路径比较长，且不太好记，如果能使用自定义的域名就好了。与其说是绑定自定义域名，不如说让这个域名能访问到S3的某个存储桶（bucket）。\n配置域名和存储桶 为什么不说是绑定自定义域名呢，因为域名与存储桶的绑定是自动的：域名会自动与该域名同名的存储桶进行绑定。\n假设想要用域名s3.domain.com访问S3上的一个存储桶，那么S3上存储桶的名称就必须是s3.domain.com。假设这个存储桶是us-west-1可用区的，那么S3默认提供的资源访问域名就是s3.domain.com.s3-us-west-1.amazonaws.com。给域名s3.domain.com做CNAME解析到s3.domain.com.s3-us-west-1.amazonaws.com即可。\n当然了，可能还要根据需求设置一下存储桶的访问权限。\n参考文章  How to Set a CNAME for an Amazon S3 Bucket ","date":"2020-02-16","permalink":"https://www.maoxuner.cn/post/2020/02/amazon-s3-domain-cname/","tags":["cloud"],"title":"亚马逊S3存储绑定自定义域名"},{"content":"对于家里以及公司内网的服务器，可能内网IP是相同的，这就会造成经常性的主机秘钥验证不通过的问题。可以禁用这些主机的秘钥验证。\n主机秘钥冲突时的错误提示大概如下\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man-in-the-middle attack)! It is also possible that the RSA host key has just been changed. The fingerprint for the RSA key sent by the remote host is 3f:1b:f4:bd:c5:aa:c1:1f:bf:4e:2e:cf:53:fa:d8:59. Please contact your system administrator.  在客户端添加ssh配置，将相应主机的秘钥验证关闭即可。\ncat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt;~/.ssh/config Host 192.168.*.* StrictHostKeyChecking no UserKnownHostsFile=/dev/null LogLevel QUIET EOF  参考文章  How to disable SSH host key checking ","date":"2020-02-16","permalink":"https://www.maoxuner.cn/post/2020/02/disable-ssh-host-key-checking/","tags":["linux"],"title":"禁止SSH验证主机秘钥"},{"content":"AlpineLinux默认使用uclibc版本的busybox，其动态链接库与gclibc有些区别，会导致某些程序没有办法正常运行。可以将busybox版本切换为gclibc。\nuclibc与gclibc的异同 uclibc与gclibc都是c语言库，总体来说uclibc更加精简。\n切换gclibc版本的buxybox wget http://www.archlinux.org/packages/community/i686/busybox/download/ -O busybox.pkg.tar.xz wget http://www.archlinux.org/packages/core/i686/glibc/download/ -O glibc.pkg.tar.xz mkdir -p ~/chroot/usr/bin/ ~/chroot/{dev,proc,root,etc} for i in *.pkg.tar.xz;do bsdtar xfJ $i -C ~/chroot done cp /etc/resolv.conf ~/chroot/etc/ ln -s /bin/busybox ~/chroot/bin/sh ln -s /bin/busybox ~/chroot/bin/ln sudo chroot ~/chroot/ /bin/sh  for i in $(busybox --list);do ln -s /bin/busybox /usr/bin/$i;done  参考文章  Running glibc programs ","date":"2020-02-16","permalink":"https://www.maoxuner.cn/post/2020/02/alpinelinux-uclibc-to-gclibc/","tags":["linux"],"title":"AlpineLinux使用gclibc"},{"content":"机缘巧合，再次接触到Yii2框架的项目，做了简单的增删查改。涉及到列表项下拉筛选框，自定义表格显示内容。\n以下内容仅摘抄了代码最核心的部分，仅供参考\n 模型 class AdvertRecordSearch extends AdvertRecord { public $start_date; public $end_date; public $platforms = [ 'tencent' =\u0026gt; '腾讯', 'alibaba' =\u0026gt; '阿里', ]; public function rules() { return [ [['start_date', 'end_date'], 'safe'], ['platform', 'in', 'range' =\u0026gt; array_keys($this-\u0026gt;platforms)], ]; } }   控制器 class AdvertRecordController extends Controller { public function actionIndex() { $searchModel = new AdvertRecordSearch(); $dataProvider = $searchModel-\u0026gt;search(Yii::$app-\u0026gt;request-\u0026gt;queryParams); return $this-\u0026gt;render('index', [ 'searchModel' =\u0026gt; $searchModel, 'dataProvider' =\u0026gt; $dataProvider ]); } }   视图 \u0026lt;?= \\yii\\grid\\GridView::widget([ 'dataProvider' =\u0026gt; $dataProvider, 'filterModel' =\u0026gt; $searchModel, 'columns' =\u0026gt; [ 'date', [ 'attribute' =\u0026gt; 'platform', 'filter' =\u0026gt; Html::dropDownList('platform', $searchModel-\u0026gt;platform, $searchModel-\u0026gt;platforms, ['class' =\u0026gt; 'form-control', 'prompt' =\u0026gt; '全部']), 'value' =\u0026gt; function ($model) { return ArrayHelper::getValue($model-\u0026gt;platforms, $model-\u0026gt;platform); } ], 'total', ] ])?\u0026gt;   ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/yii2-grid-view/","tags":["php","yii2"],"title":"Yii2GridView高级用法"},{"content":"Jenkins相关，留存\n参考文章  Jenkins Theme - jenkins-material-theme Template for Jenkins Jobs for PHP Projects  ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/jenkins/","tags":["jenkins"],"title":"Jenkins相关"},{"content":"开发环境中一个个的配置域名和根目录比较麻烦，自动实现域名到目录的绑定会更加便捷。\nNginx配置参考  以完整域名设置主机目录 server { listen 80; listen [::]:80; set $htmldir /var/lib/nginx/html; set $basedir /var/www/html; set $rootdir $htmldir; if (-d $basedir/$host) { set $rootdir $basedir/$host; } root $rootdir; }   以二级域名设置主机目录 server { listen 80; listen [::]:80; server_name ~^(?\u0026lt;domain\u0026gt;.+)\\.develop\\.local$; set $htmldir /usr/share/nginx/html; set $basedir /var/www/html; set $rootdir $htmldir; if (-d $basedir/$domain) { set $rootdir $basedir/$domain; } root $rootdir; }    参考文章  Setup Mass Dynamic Virtual Hosts on Nginx ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/nginx-mass-dynamic-vhost/","tags":["nginx"],"title":"Nginx域名主机批量配置"},{"content":"自建内网服务时会用到ssl，就需要自签名（通用）证书了。\n一个证书主要有两个文件：秘钥文件（公钥、私钥）、证书文件。私钥签发证书，公钥验证证书。可以给自己签名生成自签名证书，也可以给别人签名，生成通用证书。\n专门给别人签名的秘钥一般由证书颁发机构CA保管，如Let's Entrypt。浏览器存有可信证书颁发机构的公钥信息。\n证书生成脚本 需要openssl，执行以下命令即可给指定域名颁发证书。将生成的ca.crt导入浏览器证书颁发机构，将domain.com.key，domain.com.crt用于WEB服务器配置即可。\n./gencert.sh domain.com   证书生成脚本gencert.sh #!/bin/bash # 生成根证书 genCa() { openssl genrsa -out ca.key 4096 openssl req \\ -x509 \\ -new \\ -nodes \\ -subj /CN=LocalCa \\ -sha256 \\ -days 7300 \\ -reqexts SAN \\ -extensions SAN \\ -config \u0026lt;(cat openssl.cnf \\ \u0026lt;(printf \u0026quot;[SAN]\\nsubjectAltName=DNS:localhost\u0026quot;)) \\ -key ca.key \\ -out ca.crt } # 生成域名证书并用根证书签名 # 2019年7月1日以后签发的证书，有效期必须小于等于825天。可以调整系统时间来改变证书签发日期。 # https://support.apple.com/zh-cn/HT210176 genCe() { domain=${1:-localhost} target=${2:-${domain}} openssl genrsa -out ${target}.key 2048 openssl req \\ -new \\ -subj /CN=${domain} \\ -sha256 \\ -reqexts SAN \\ -extensions SAN \\ -config \u0026lt;(cat openssl.cnf \\ \u0026lt;(printf \u0026quot;[SAN]\\nsubjectAltName=DNS:${domain},DNS:*.${domain}\u0026quot;)) \\ -key ${target}.key \\ -out ${target}.csr openssl x509 \\ -req \\ -CA ca.crt \\ -CAkey ca.key \\ -CAcreateserial \\ -sha256 \\ -days 825 \\ -extensions SAN \\ -extfile \u0026lt;(cat openssl.cnf \\ \u0026lt;(printf \u0026quot;[SAN]\\nsubjectAltName=DNS:${domain},DNS:*.${domain}\u0026quot;)) \\ -in ${target}.csr \\ -out ${target}.crt } # 如果根证书不存在，则生成根证书 if [[ ! -f ca.key || ! -f ca.crt ]]; then genCa fi genCe $@   openssl配置openssl.cnf # # OpenSSL example configuration file. # This is mostly being used for generation of certificate requests. # # Note that you can include other files from the main configuration # file using the .include directive. #.include filename # This definition stops the following lines choking if HOME isn't # defined. HOME\t= . # Extra OBJECT IDENTIFIER info: #oid_file\t= $ENV::HOME/.oid oid_section\t= new_oids # To use this configuration file with the \u0026quot;-extfile\u0026quot; option of the # \u0026quot;openssl x509\u0026quot; utility, name here the section containing the # X.509v3 extensions to use: # extensions\t= # (Alternatively, use a configuration file that has only # X.509v3 extensions in its main [= default] section.) [ new_oids ] # We can add new OIDs in here for use by 'ca', 'req' and 'ts'. # Add a simple OID like this: # testoid1=1.2.3.4 # Or use config file substitution like this: # testoid2=${testoid1}.5.6 # Policies used by the TSA examples. tsa_policy1 = 1.2.3.4.1 tsa_policy2 = 1.2.3.4.5.6 tsa_policy3 = 1.2.3.4.5.7 #################################################################### [ ca ] default_ca\t= CA_default\t# The default ca section #################################################################### [ CA_default ] dir\t= /etc/ssl\t# Where everything is kept certs\t= $dir/certs\t# Where the issued certs are kept crl_dir\t= $dir/crl\t# Where the issued crl are kept database\t= $dir/index.txt\t# database index file. #unique_subject\t= no\t# Set to 'no' to allow creation of # several certs with same subject. new_certs_dir\t= $dir/newcerts\t# default place for new certs. certificate\t= $dir/cacert.pem # The CA certificate serial\t= $dir/serial # The current serial number crlnumber\t= $dir/crlnumber\t# the current crl number # must be commented out to leave a V1 CRL crl\t= $dir/crl.pem # The current CRL private_key\t= $dir/private/cakey.pem# The private key x509_extensions\t= usr_cert\t# The extensions to add to the cert # Comment out the following two lines for the \u0026quot;traditional\u0026quot; # (and highly broken) format. name_opt = ca_default\t# Subject Name options cert_opt = ca_default\t# Certificate field options # Extension copying option: use with caution. # copy_extensions = copy # Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs # so this is commented out by default to leave a V1 CRL. # crlnumber must also be commented out to leave a V1 CRL. # crl_extensions\t= crl_ext default_days\t= 365\t# how long to certify for default_crl_days= 30\t# how long before next CRL default_md\t= default\t# use public key default MD preserve\t= no\t# keep passed DN ordering # A few difference way of specifying how similar the request should look # For type CA, the listed attributes must be the same, and the optional # and supplied fields are just that :-) policy\t= policy_match # For the CA policy [ policy_match ] countryName\t= match stateOrProvinceName\t= match organizationName\t= match organizationalUnitName\t= optional commonName\t= supplied emailAddress\t= optional # For the 'anything' policy # At this point in time, you must list all acceptable 'object' # types. [ policy_anything ] countryName\t= optional stateOrProvinceName\t= optional localityName\t= optional organizationName\t= optional organizationalUnitName\t= optional commonName\t= supplied emailAddress\t= optional #################################################################### [ req ] default_bits\t= 2048 default_keyfile = privkey.pem distinguished_name\t= req_distinguished_name attributes\t= req_attributes x509_extensions\t= v3_ca\t# The extensions to add to the self signed cert # Passwords for private keys if not present they will be prompted for # input_password = secret # output_password = secret # This sets a mask for permitted string types. There are several options. # default: PrintableString, T61String, BMPString. # pkix\t: PrintableString, BMPString (PKIX recommendation before 2004) # utf8only: only UTF8Strings (PKIX recommendation after 2004). # nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings). # MASK:XXXX a literal mask value. # WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings. string_mask = utf8only # req_extensions = v3_req # The extensions to add to a certificate request [ req_distinguished_name ] countryName\t= Country Name (2 letter code) countryName_default\t= AU countryName_min\t= 2 countryName_max\t= 2 stateOrProvinceName\t= State or Province Name (full name) stateOrProvinceName_default\t= Some-State localityName\t= Locality Name (eg, city) 0.organizationName\t= Organization Name (eg, company) 0.organizationName_default\t= Internet Widgits Pty Ltd # we can do this but it is not needed normally :-) #1.organizationName\t= Second Organization Name (eg, company) #1.organizationName_default\t= World Wide Web Pty Ltd organizationalUnitName\t= Organizational Unit Name (eg, section) #organizationalUnitName_default\t= commonName\t= Common Name (e.g. server FQDN or YOUR name) commonName_max\t= 64 emailAddress\t= Email Address emailAddress_max\t= 64 # SET-ex3\t= SET extension number 3 [ req_attributes ] challengePassword\t= A challenge password challengePassword_min\t= 4 challengePassword_max\t= 20 unstructuredName\t= An optional company name [ usr_cert ] # These extensions are added when 'ca' signs a request. # This goes against PKIX guidelines but some CAs do it and some software # requires this to avoid interpreting an end user certificate as a CA. basicConstraints=CA:FALSE # Here are some examples of the usage of nsCertType. If it is omitted # the certificate can be used for anything *except* object signing. # This is OK for an SSL server. # nsCertType\t= server # For an object signing certificate this would be used. # nsCertType = objsign # For normal client use this is typical # nsCertType = client, email # and for everything including object signing: # nsCertType = client, email, objsign # This is typical in keyUsage for a client certificate. # keyUsage = nonRepudiation, digitalSignature, keyEncipherment # This will be displayed in Netscape's comment listbox. nsComment\t= \u0026quot;OpenSSL Generated Certificate\u0026quot; # PKIX recommendations harmless if included in all certificates. subjectKeyIdentifier=hash authorityKeyIdentifier=keyid,issuer # This stuff is for subjectAltName and issuerAltname. # Import the email address. # subjectAltName=email:copy # An alternative to produce certificates that aren't # deprecated according to PKIX. # subjectAltName=email:move # Copy subject details # issuerAltName=issuer:copy #nsCaRevocationUrl\t= http://www.domain.dom/ca-crl.pem #nsBaseUrl #nsRevocationUrl #nsRenewalUrl #nsCaPolicyUrl #nsSslServerName # This is required for TSA certificates. # extendedKeyUsage = critical,timeStamping [ v3_req ] # Extensions to add to a certificate request basicConstraints = CA:FALSE keyUsage = nonRepudiation, digitalSignature, keyEncipherment [ v3_ca ] # Extensions for a typical CA # PKIX recommendation. subjectKeyIdentifier=hash authorityKeyIdentifier=keyid:always,issuer basicConstraints = critical,CA:true # Key usage: this is typical for a CA certificate. However since it will # prevent it being used as an test self-signed certificate it is best # left out by default. # keyUsage = cRLSign, keyCertSign # Some might want this also # nsCertType = sslCA, emailCA # Include email address in subject alt name: another PKIX recommendation # subjectAltName=email:copy # Copy issuer details # issuerAltName=issuer:copy # DER hex encoding of an extension: beware experts only! # obj=DER:02:03 # Where 'obj' is a standard or added object # You can even override a supported extension: # basicConstraints= critical, DER:30:03:01:01:FF [ crl_ext ] # CRL extensions. # Only issuerAltName and authorityKeyIdentifier make any sense in a CRL. # issuerAltName=issuer:copy authorityKeyIdentifier=keyid:always [ proxy_cert_ext ] # These extensions should be added when creating a proxy certificate # This goes against PKIX guidelines but some CAs do it and some software # requires this to avoid interpreting an end user certificate as a CA. basicConstraints=CA:FALSE # Here are some examples of the usage of nsCertType. If it is omitted # the certificate can be used for anything *except* object signing. # This is OK for an SSL server. # nsCertType\t= server # For an object signing certificate this would be used. # nsCertType = objsign # For normal client use this is typical # nsCertType = client, email # and for everything including object signing: # nsCertType = client, email, objsign # This is typical in keyUsage for a client certificate. # keyUsage = nonRepudiation, digitalSignature, keyEncipherment # This will be displayed in Netscape's comment listbox. nsComment\t= \u0026quot;OpenSSL Generated Certificate\u0026quot; # PKIX recommendations harmless if included in all certificates. subjectKeyIdentifier=hash authorityKeyIdentifier=keyid,issuer # This stuff is for subjectAltName and issuerAltname. # Import the email address. # subjectAltName=email:copy # An alternative to produce certificates that aren't # deprecated according to PKIX. # subjectAltName=email:move # Copy subject details # issuerAltName=issuer:copy #nsCaRevocationUrl\t= http://www.domain.dom/ca-crl.pem #nsBaseUrl #nsRevocationUrl #nsRenewalUrl #nsCaPolicyUrl #nsSslServerName # This really needs to be in place for it to be a proxy certificate. proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo #################################################################### [ tsa ] default_tsa = tsa_config1\t# the default TSA section [ tsa_config1 ] # These are used by the TSA reply generation only. dir\t= /etc/ssl\t# TSA root directory serial\t= $dir/tsaserial\t# The current serial number (mandatory) crypto_device\t= builtin\t# OpenSSL engine to use for signing signer_cert\t= $dir/tsacert.pem # The TSA signing certificate # (optional) certs\t= $dir/cacert.pem\t# Certificate chain to include in reply # (optional) signer_key\t= $dir/private/tsakey.pem # The TSA private key (optional) signer_digest = sha256\t# Signing digest to use. (Optional) default_policy\t= tsa_policy1\t# Policy if request did not specify it # (optional) other_policies\t= tsa_policy2, tsa_policy3\t# acceptable policies (optional) digests = sha1, sha256, sha384, sha512 # Acceptable message digests (mandatory) accuracy\t= secs:1, millisecs:500, microsecs:100\t# (optional) clock_precision_digits = 0\t# number of digits after dot. (optional) ordering\t= yes\t# Is ordering defined for timestamps? # (optional, default: no) tsa_name\t= yes\t# Must the TSA name be included in the reply? # (optional, default: no) ess_cert_id_chain\t= no\t# Must the ESS cert id chain be included? # (optional, default: no) ess_cert_id_alg\t= sha1\t# algorithm to compute certificate # identifier (optional, default: sha1)    **证书的有效期不能超过825天，否则浏览器会认为证书无效。**参考iOS 13 和 macOS 10.15 中的可信证书应满足的要求\nArchLinux添加自定义根证书  1.Move /usr/local/share/ca-certificates/.crt to /etc/ca-certificates/trust-source/anchors/ 2.Do the same with all manually-added /etc/ssl/certs/.pem files and rename them to *.crt 3.Instead of update-ca-certificates, run trust extract-compat\n 参考文章  openssl 生成SSL证书 如何创建自签名的 SSL 证书 给Nginx配置一个自签名的SSL证书 生成自签名证书 使用 OpenSSL 制作一个包含 SAN（Subject Alternative Name）的证书 key_load_public: invalid format 怎么办？ ubuntu系统上如何添加新的根证书 iOS 13 和 macOS 10.15 中的可信证书应满足的要求 ca-certificates update ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/self-signed-certificate/","tags":["ssl"],"title":"创建自签名证书"},{"content":"网络互访问题、入口脚本问题等\n网络 主机互访 宿主机指运行docker服务的主机，容器指宿主机上运行的各个container。\n注意：localhost和127.0.0.1永远是发起请求的程序所在的系统（命名空间）\n 在宿主机内，localhost和127.0.0.1是宿主机本身 在各个容器内，localhost和127.0.0.1是各个容器本身（同命名空间）  提示：进入容器内执行IP addr可以获取到容器本身的IP，如172.17.0.28。将该IP的最后一段数字改成1，即172.17.0.1是这个容器的网关（宿主机）的IP。\n假设宿主机容器之间已经配置好了网络，且容器绑定宿主机端口时绑定了宿主机的所有网卡（默认）\n 宿主机访问容器  通过localhost或127.0.0.1加上容器绑定的宿主机端口 通过要访问的容器本身的IP加上容器内服务监听的端口   容器访问宿主机\n容器内localhost和127.0.0.1是不能访问到宿主机的  通过宿主机内网、公网等IP加上宿主机端口 通过容器网关的IP加上宿主机端口 其他方案：qoomon/docker-host   容器访问本容器  通过localhost或127.0.0.1加上容器内服务监听的端口 通过宿主机内网、公网等IP加上容器绑定的宿主机端口   容器访问其他容器  通过目标容器的容器IP加上目标容器内服务监听的端口 通过目标容器的主机名、容器名加上目标容器内服务监听的端口 通过宿主机内网、公网等IP加上目标容器绑定的宿主机端口    容器入口 ENTRYPOINT与CMD的异同 表现  如果设置了ENTRYPOINT，容器启动run或者容器执行命令exec时的入口程序。每次都会执行 所有命令都会作为ENTRYPOINT的参数，交由ENTRYPOINT脚本（程序）处理并执行。如果没有设置ENTRYPOINT，所有的命令会直接执行 CMD是容器启动时的默认命令，通常是一个守护进程 ENTRYPOINT和CMD的第一个参数必须是PATH能找到的可执行文件  执行情况     No ENTRYPOINT ENTRYPOINT exec_entry p1_entry ENTRYPOINT [\u0026ldquo;exec_entry\u0026rdquo;, \u0026ldquo;p1_entry\u0026rdquo;]     No CMD error, not allowed /bin/sh -c exec_entry p1_entry exec_entry p1_entry   CMD [\u0026ldquo;exec_cmd\u0026rdquo;, \u0026ldquo;p1_cmd\u0026rdquo;] exec_cmd p1_cmd /bin/sh -c exec_entry p1_entry exec_entry p1_entry exec_cmd p1_cmd   CMD [\u0026ldquo;p1_cmd\u0026rdquo;, \u0026ldquo;p2_cmd\u0026rdquo;] p1_cmd p2_cmd /bin/sh -c exec_entry p1_entry exec_entry p1_entry p1_cmd p2_cmd   CMD exec_cmd p1_cmd /bin/sh -c exec_cmd p1_cmd /bin/sh -c exec_entry p1_entry exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd    终止信号 自定义ENTRYPOINT需要注意终止信号的传递问题（PID 0的进程接受终止信号），否则终止容器时必须等容器终止超时才会停止容器。\n#!/usr/bin/env bash set -e if [ \u0026quot;$1\u0026quot; = 'postgres' ]; then chown -R postgres \u0026quot;$PGDATA\u0026quot; if [ -z \u0026quot;$(ls -A \u0026quot;$PGDATA\u0026quot;)\u0026quot; ]; then gosu postgres initdb fi exec gosu postgres \u0026quot;$@\u0026quot; fi exec \u0026quot;$@\u0026quot;  执行多个命令  自定义ENTRYPOINT或CMD脚本（制作镜像或者通过Volume替换原有的可执行文件） 将多行脚本作为shell参数执行（docker-compose.yaml）示例 version: \u0026quot;3\u0026quot; services: app: image: nginx:alpine command: - sh - \u0026quot;-c\u0026quot; - | cd / ls nginx -s \u0026quot;daemon off;\u0026quot;    参考文章  Support host.docker.internal DNS name to host #264 Docker内如何访问本机(宿主机) Understand how CMD and ENTRYPOINT interact 如何在docker-compose.yml文件中command执行多条命令？ Running multiple commands in entrypoint #52 Docker — 从入门到实践 ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/docker-faqs-for-green-hand/","tags":["docker"],"title":"Docker新手常见问题"},{"content":"经常要给Windows或者Linux系统装机，每次都要制作启动盘，显得有点麻烦。Grub4dos似乎只能用于Legacy模式的启动，因此使用万能的Grub2才是最终解。挖坑待填\n尚未搞清楚Windows镜像如何加载\n参考文章  U盘+GRUB2引导PE或linux镜像 用GRUB启动ISO镜像 GRUB2引导Windows PE等ISO文件的办法 Index of /pub/linux/utils/boot/syslinux/ MEMDISK - Syslinux Wiki 【好东西齐分享】ISO引导神器！简直不要太好！！！ grub2引导ubuntu 14.04 ISO、WindPE ISO、win7安装盘的正确方法，及系统救急U盘的制作方法 Windows 10 ISO in Grub2 Multiboot Powerful USB stick : Grub2 booting Mint, Tails and Hirens + (storages NTFS and ext4 LUKS encrypted) Rufus ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/grub2-bootable-device/","tags":["usb","linux"],"title":"使用Gurb2制作Linux与Windows以及Legacy与UEFI双模式启动盘"},{"content":"Apache服务器通过Rewrite规则绑定域名目录 使用虚拟主机时，由于不能自定义VirtualHost，因此只能通过重写规则来绑定域名和目录。前提是服务器允许使用.htaccess并启用了重写规则。\n配置信息 这是最简单的一个示例，直接将具体域名跟具体目录绑定，也可以通过正则的方式来处理。域名与子目录绑定的核心就是重写规则。注意排除绑定到的目录，否则会导致重定向死循环。\n\u0026lt;IfModule mod_rewrite.c\u0026gt; RewriteEngine On RewriteBase / RewriteCond %{HTTP_HOST} ^www\\.domain\\.com$ [NC] RewriteCond %{REQUEST_URI} !^/ui/ RewriteRule ^(.*)$ ui/$1 [L,QSA] RewriteCond %{HTTP_HOST} ^api\\.domain\\.com$ [NC] RewriteCond %{REQUEST_URI} !^/api/ RewriteRule ^(.*)$ api/$1 [L,QSA] \u0026lt;/IfModule\u0026gt;  参考文章  二级域名绑定二级目录的两种方法 Redirecting subdomains to directories in apache Setup automatic per-folder subdomains on your local linux based computer Dynamic mass virtual hosts with mod_rewrite ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/apache-vhost-domain-subdirectory-bindings/","tags":["apache"],"title":"Apache服务器通过Rewrite规则绑定域名目录"},{"content":"Yii2使用DataFilter查询数据 挖坑待填\npublic function actions() { return [ 'index' =\u0026gt; [ 'class' =\u0026gt; 'yii\\rest\\IndexAction', 'modelClass' =\u0026gt; $this-\u0026gt;modelClass, 'checkAccess' =\u0026gt; [$this, 'checkAccess'], 'dataFilter'=\u0026gt;['class' =\u0026gt; 'yii\\data\\ActiveDataFilter','searchModel'=\u0026gt;['class'=\u0026gt;'common\\models\\TableSearch']], ], 'view' =\u0026gt; [ 'class' =\u0026gt; 'yii\\rest\\ViewAction', 'modelClass' =\u0026gt; $this-\u0026gt;modelClass, 'checkAccess' =\u0026gt; [$this, 'checkAccess'], ], 'create' =\u0026gt; [ 'class' =\u0026gt; 'yii\\rest\\CreateAction', 'modelClass' =\u0026gt; $this-\u0026gt;modelClass, 'checkAccess' =\u0026gt; [$this, 'checkAccess'], 'scenario' =\u0026gt; $this-\u0026gt;createScenario, ], 'update' =\u0026gt; [ 'class' =\u0026gt; 'yii\\rest\\UpdateAction', 'modelClass' =\u0026gt; $this-\u0026gt;modelClass, 'checkAccess' =\u0026gt; [$this, 'checkAccess'], 'scenario' =\u0026gt; $this-\u0026gt;updateScenario, ], 'delete' =\u0026gt; [ 'class' =\u0026gt; 'yii\\rest\\DeleteAction', 'modelClass' =\u0026gt; $this-\u0026gt;modelClass, 'checkAccess' =\u0026gt; [$this, 'checkAccess'], ], 'options' =\u0026gt; [ 'class' =\u0026gt; 'yii\\rest\\OptionsAction', ], ]; }  参考文章  yii2 rest使用DataFilter查询数据 ","date":"2020-02-15","permalink":"https://www.maoxuner.cn/post/2020/02/yii2-datafilter/","tags":["php","yii2"],"title":"Yii2使用DataFilter查询数据"},{"content":"使用IDE如Intellij Idea时，IDE会在项目目录下创建.idea文件夹。在每个项目.gitignore文件中排除.idea/比较麻烦，设置全局排除会更方便些。\nGit全局忽略  在用户主目录下创建文件.gitignore_global，按照.gitignore的格式写排除项 touch ~/.gitignore_global   设置git全局排除选项 git config --global core.excludesfile ~/.gitignore_global    参考文章  Using Git / Ignoring files ","date":"2018-06-19","permalink":"https://www.maoxuner.cn/post/2018/06/gitignore-global/","tags":["git"],"title":"设置Git全局忽略"},{"content":"作为一个程序猿，有一半的时间在跟网络、防火墙做斗争，感觉真是可悲。\ncomposer的加速有两个方面：\n 获取php资源包数据（packagist） 获取bower前端资源数据（github）  安装composer #php -r \u0026quot;copy('https://getcomposer.org/installer', 'composer-setup.php');\u0026quot; php -r \u0026quot;copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\u0026quot; php -r \u0026quot;if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\u0026quot; php composer-setup.php --filename=composer --install-dir=vendor/bin php -r \u0026quot;unlink('composer-setup.php');\u0026quot;  使用Packagist镜像 全局设置\ncomposer config -g repo.packagist composer https://packagist.phpcomposer.com  项目设置\ncomposer config repo.packagist composer https://packagist.phpcomposer.com  限定前端资源包的版本 yii框架使用composer来管理前端资源，然而在require一些非前端资源的包时，也会把前端资源包的依赖关系处理一遍。过程中会不断连接github，请求各个前端资源包各个版本的bower信息。有些资源包版本特别多，会非常费时。限定资源包的版本范围可以减少请求的次数，从而达到加速的效果。因为要使用github接口获取各个项目的信息，而且各个项目都处在开发中，没有办法做镜像。因此只能通过限制版本，减少请求次数实现加速效果。\n 引入资源包时指定版本 composer require bower-asset/jquery 3.3.1   在composer.json里面限定资源包的版本号 { \u0026quot;require\u0026quot;: { \u0026quot;bower-asset/jquery\u0026quot;: \u0026quot;3.3.1\u0026quot; } }    参考文章  请问 composer 更新 或者安装某个项目时 非要加载很多其他内容吗？ Composer进阶使用 —— 常用命令和版本约束 ","date":"2018-06-14","permalink":"https://www.maoxuner.cn/post/2018/06/composer-with-bower-asset/","tags":["php"],"title":"解决Composer使用Bower管理前端资源下载速度慢的问题"},{"content":" 如果不root，买安卓设备作甚？ ——— 我说的，嗯\n 几经折腾，从酷比魔方Freer X9，到昂达X20，直到最终的联想小新平板TB8804F，我终于有了第一个平板。朋友说，达到了我对平板的底线（小新符合我对平板颜值、性能、搞机的最低条件）。\n酷比魔方Freer X9虽然性价比超级高、手感舒适、USB3.0，但是良品率、散热性堪忧，充电慢，系统老。我买到了坏点屏，在玩王者荣耀时，左上角发热特别严重。买来作为电子书倒是个不错的选择，游戏偶尔玩玩也凑合。 昂达X20性价比也挺高、全网通、10寸屏。对我而言，通话对于平板而言完全是个鸡肋功能。超大屏带来的是超大的重量和耗电量，不够优雅。玩QQ飞车时，起点加速时会卡顿。游戏体验极差。\n好了言归正传，开始搞机。建议看完全文后，根据实际情况操作。\n型号 Lenovo TB-8804F\n概念 开发者模式 连续点击关于平板电脑中的版本号，会进入开发者模式（设置里多出开发者选项）。打开USB调试，并永久授权。\nfastboot/bootloader 这里我也不太清楚，似乎fastboot/bootloader说的是一回事。\n进入fastboot模式：按住音量上开机，或者adb reboot bootloader 进入recovery模式：按住音量下开机，或者adb reboot recovery\nOEM锁 OEM锁限值了设备能否加载第三方镜像（比如recovery）。要刷recovery就要解锁OEM了。\n解锁OEM  在开发者选项里启用OEM解锁 这里只是从软件层面允许OEM解锁，实际上还没有解锁 进入fastboot模式，执行命令fastboot oem unlock-go 真正解锁OEM，会双清  使用recovery（TWRP-3.2.1） 必须先解锁OEM，然后在fastboot模式下进行recovery的一次性启动或者刷入操作\n 60b14735c05c7330b952e5b9d07377cc recovery-TWRP-3.2.1-0117-LENOVO_TB8804F-CN-wzsx150.img 40d41a9077580c867acd5b78675d9035 misc.bin\n 直接启动recovery（未测试） 刷入第三方recovery后会影响OTA。实际上可以不刷recovery，直接引导recovery镜像（一次性）。\nfastboot boot recovery-TWRP-3.2.1-0117-LENOVO_TB8804F-CN-wzsx150.img  刷recovery fastboot flash recovery recovery-TWRP-3.2.1-0117-LENOVO_TB8804F-CN-wzsx150.img fastboot flash misc misc.bin  然后就可以重启到recovery进行相关操作了\n 建议立即全量备份整个系统，目前暂未找到线刷包 刷了recovery后必须获取root权限，或者取消强制加密，否则会卡在启动画面。  安装谷歌服务 目前国内的各种谷歌安装器都不能完美安装谷歌服务，即使安装上了，也会各种崩溃。解决办法是通过recovery把所需的所有文件刷入系统。\n 7657c6abfb5b25fefbab3c659f7faee4 open_gapps-arm64-7.1-pico-20180610.zip\n 用上述recovery把open_gapps-arm64-7.1-pico-20180610.zip刷入就可以了。\n使用谷歌服务的小伙伴一定会使用梯子吧，欢迎跟我讨论梯子的技术。注意，是讨论！如果不会搭梯子，勿扰。\n参考文章  [小新平板] 【LR.Team】小新平板TB-8804F专版TWRP-3.2.1-0117中英文修改优化版  [Need Help] Problem getting Google Apps on a Lenovo tablet from China! TWRP and ROOT for Tab 4 8/10 (Plus) (TB-8704X/F/V,TB-X704L/F, TB-8504X/F, TB-X304L/F) OpenGAPPS ","date":"2018-06-12","permalink":"https://www.maoxuner.cn/post/2018/06/%E5%B0%8F%E6%96%B0%E5%B9%B3%E6%9D%BFtb8804f%E8%8E%B7%E5%8F%96root%E4%BB%A5%E5%8F%8A%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8C%E5%B8%82%E5%9C%BA/","tags":["android"],"title":"小新平板TB8804F获取root以及安装谷歌市场"},{"content":"也许IRC即将被淘汰吧，研究的人少，资料更少。为了定制一个简易的多端聊天工具，我研究了一番IRC，并记录于此。\n简介 IRC是开源社区比较流行的纯文本即时聊天方案，支持私聊、群聊（频道）。\n优点是，无需注册。开源项目，各个平台的客户端都有，虽然样式丑了点。根据IRC协议，很容易制作聊天机器人。\n缺点是，只能发纯文本，而且没有远程聊天记录。发送内容有长度限值，不能发送多行文本，单个报文长度为512字节（含IRC命令、用户信息、聊天文本，合计长度）。\n使用昵称作为主要用户识别信息，昵称不能重复。昵称最长9个字符。注册后的昵称，认证以后可以将使用该昵称的人踢下线。\n公共服务器  Freenode 最知名，开源项目基本都在这里有项目频道  客户端  HexChat 界面优美，但是聊天界面排版较差，功能较少 Pidgin 轻量易于扩展，界面巨丑 Empathy 臃肿，比Pidgin好看一些 Webchat 网页模式，开箱即用，丑，功能简单 Irssi 命令行模式，上手难，但是蛮好用 Weechat 命令行模式，功能复杂  以irssi为例\n# 以昵称 maoxuner 登录 freenode irssi -c chat.freenode.net -n maoxuner  连接成功后，如果没有重名，可以注册该昵称。执行以下命令后，去邮箱查看验证信息，按提示操作即可。\n/msg NickServ REGISTER your_password your_email@domain.com  邮箱里收到的内容大概如下，在irssi中执行即可\n/msg NickServ VERIFY REGISTER maoxuner knpnmlyslgpd  注册以后，使用该昵称登录的话，会提示该昵称已被注册，需要认证才行\n/msg NickServ IDENTIFY your_password  加入某个群聊（频道），如#deepin\n/join #deepin  如果这个群聊是自己新建的，那么自己就是群主，此时对该群有管理权限。如下可以增删管理员\n/mode +o others_nick /mode -o others_nick  如下可以给群设置密码\n/mode +k chan_pass  重进刚刚的群，会失去管理员权限。需要在线的管理员赋予自己权限。可以把ChanServ服务设为该群的管理员，然后由ChanServ恢复自己的管理权限\n/msg ChanServ SET #deepin GUARD ON  手动请求ChanServ恢复管理权限\n/msg ChanServ OP #deepin maoxuner  设置自动恢复管理权限\n/msg ChanServ FLAG +O  剩下的用/help命令即可搞定了\n服务器  ngIRCd IRC基础服务器 Xtheme IRC机器人，如NickServ，ChanServ等。由atheme衍生而来  Xtheme使用方式  配置ngIRCd并启动 安装Xtheme  IRC协议 IRC协议逐年完善，其中rfc1459规定了基础的命令。实现该协议基本就能实现一个可用的IRC服务器、客户端了\nPhpIrcClient  pbot 简洁易懂 Hoa/Irc 由PhpStorm等支持的项目 PhpIrcClient 参考了pbot以及hoa/irc造的轮子 ","date":"2018-05-27","permalink":"https://www.maoxuner.cn/post/2018/05/irc/","tags":["chat"],"title":"开源社区聊天工具IRC的正确打开方式"},{"content":"简单来说，受够了windows，买不起osx，就只能折腾linux。折腾了好几个发行版，这次换了archlinux了。理由很简单：软件版本新、滚动发行、yaourt yay一切。\n 折腾了一阵子MacOS，发现它的软件管理太麻烦了：\n AppStore（系统更新、部分软件包） 网络上的软件包 HomeBrew（GNU、Casks）  大部分Casks不能更换软件源，更新速度极慢，加上Mac机器老旧，新上市的AMD yes等原因，便回到了linux阵营。\n系统安装 硬件信息 戴尔Inspiron 灵越 燃7000（Ins 14-7460-D1525S）\n联想小新Pro2020锐龙版（Lenovo Ideapad S540-13ARE）\n安装流程 启动安装镜像 关闭 Security Boot，跟Windows激活有关，但不影响激活使用。\nhttps://mirrors.aliyun.com/archlinux/iso/latest/\nhttps://mirrors.aliyun.com/archlinux/iso/latest/archlinux-2020.06.01-x86_64.iso   从archlinux-2020.07.01-x86_64.iso开始，安装环境移除了netctl包，不再有wifi-menu命令，应使用iwctl来管理无线网连接。\n  使用grub直接引导iso镜像，其中archisolabel建议设置成iso的实际label。（manjaro的参数名称是misolabel） menuentry 'install arch' { loopback loop (hd0,1)/.boot/linux/archlinux-2020.06.01-x86_64.iso set root=(loop) linux /arch/boot/x86_64/vmlinuz archisolabel=ARCH_202006 initrd /arch/boot/x86_64/archiso.img }   启动过程中会遇到问题，停在rootfs界面。 Waiting 30 second for device /dev/disk/by_label/ARCH_201803 Error  手动挂载iso文件所在的分区，假设挂载到/usb，并加载对应的iso文件，然后退出rootfs\nlosetup /dev/loop0 /usb/archlinux-2018.03.01-x86_64.iso    基础安装 分区以及挂载磁盘到/mnt\n# 有线网会自动连接，无线网需要手动连接 # wifi连接，可能要执行 rfkill 命令，解禁无线设备（或者使用键盘快捷键解锁无线设备） #iwctl --passphrase your_wifi_password station wlan0 connect your_wifi_name # 分配ip #dhcpcd # 同步时间 timedatectl set-ntp true # 镜像源 cat \u0026lt;\u0026lt;EOF\u0026gt;/etc/pacman.d/mirrorlist Server = http://mirrors.aliyun.com/archlinux/\\$repo/os/\\$arch EOF # 分区，并挂载到`/mnt`（注意是否是efi启动），EFI分区挂载到`/boot/efi` # base-devel包含yay所需组件 pacstrap /mnt base base-devel linux linux-firmware # 生成分区挂载信息，如果有swapfile，注意修改路径 genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab # chroot arch-chroot /mnt # ****** 以下为chroot环境 ****** # 时区 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime # 好像能避免windows、linux相差8小时的问题 hwclock --systohc # 语言 cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt; /etc/locale.gen en_US.UTF-8 zh_CN.UTF-8 EOF locale-gen cat \u0026lt;\u0026lt;EOF\u0026gt;/etc/locale.conf LANG=en_US.UTF-8 LANGUAGE=en_US EOF # 主机名 echo ideabook \u0026gt; /etc/hostname cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt; /etc/hosts 127.0.0.1 localhost ::1 localhost 127.0.0.1 ideabook ::1 ideabook EOF # LVM支持 pacman -S lvm2 # 添加lvm2钩子，HOOKS=(... block lvm2 filesystems ...)重建内核 vim /etc/mkinitcpio.conf mkinitcpio -P # NTFS分区支持 pacman -S ntfs-3g # intel cpu #pacman -S intel-ucode # amd cpu pacman -S amd-ucode # 安装引导 pacman -S grub efibootmgr # windows双系统检测 pacman -S os-prober # 默认 --target=x86_64 grub-install grub-mkconfig -o /boot/grub/grub.cfg # 休眠支持 # /etc/mkinitcpio.conf # 添加内核钩子resume，紧跟着filesystems HOOKS=(... filesystems resume ...) # HOOKS=(base udev autodetect modconf block lvm2 filesystems resume keyboard fsck) # /etc/default/grub # 添加内核参数（swap分区位置信息） resume=/dev/sda4 # GRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;resume=/dev/vg0/swap loglevel=3 quiet splash\u0026quot; # 网络连接 # 如：networkmanager（wicd已被弃用） # 注意启用相应的网络服务只能启动一个 pacman -S openresolv cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt;/etc/resolvconf.conf #name_servers=172.17.0.1 #name_servers_append=223.5.5.5 EOF # NetworkManager pacman -S networkmanager cat \u0026lt;\u0026lt;EOF\u0026gt;/etc/NetworkManager/conf.d/rc-manager.conf [main] rc-manager=resolvconf EOF # iwd使用 mkdir /etc/iwd cat \u0026lt;\u0026lt;EOF\u0026gt;/etc/iwd/main.conf [General] EnableNetworkConfiguration=true [Network] NameResolvingService=resolvconf EOF # 支持32位、aur源 pacman -S archlinuxcn-keyring cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt; /etc/pacman.conf [multilib] Include = /etc/pacman.d/mirrorlist [archlinuxcn] Server = http://mirrors.aliyun.com/$repo/$arch EOF pacman -Syy pacman -S yay  退出并重启\nexit umount -R /mnt reboot  图形界面 结构 Linux系统 \u0026lt;=\u0026gt; 显卡驱动 \u0026lt;=\u0026gt; 图形服务 \u0026lt;=\u0026gt; 桌面管理器 \u0026lt;=\u0026gt; 桌面环境姑且这么理解吧，之前总搞不懂装个图形界面怎么这么多东西。\n显卡驱动 pacman -S mesa lib32-mesa    intel\npacman -S xf86-video-intel    amdgpu\npacman -S xf86-video-amdgpu  4800U是5代GCN，非Southern Islands或Sea Islands启用内核模块\n/etc/mkinitcpio.conf\nMODULES=(amdgpu)  重建内核\nmkinitcpio -P    nvidia\n# nouveau驱动比较菜鸡，可以考虑安装nvidia包 #pacman -S xf86-video-nouveau pacman -S nvidia lib32-nvidia-utils pacman -S bumblebee lib32-virtualgl systemctl enable bumblebeed usermod -a -G bumblebee nono # 重启 pacman -S primus lib32-primus  测试\npacman -S mesa-demos glxgears -info optirun glxgears -info # 添加vblank_mode=0，primus才能全力运行 vblank_mode=0 primusrun glxgears -info vblank_mode=0 optirun -b primus glxgears -info  optirun默认使用virtualgl桥接，效率比primus低\nprimus好久没人维护了，有些bug\nsteam中游戏启动参数\nvblank_mode=0 primusrun %command%  国服dota启动参数\nvblank_mode=0 primusrun %command% -language schinese -international -perfectworld    图形服务 pacman -S xorg-server  桌面环境  推荐Deepin（V20目前Bug比较多），国人开发，界面美观，工具丰富。 pacman -S deepin deepin-extra   KDE功能强大，配置项灵活。扩展应用包很大，包含了很多不常用的如教育、游戏的软件包。 pacman -S plasma kde-applications # 不想安装mariadb时 #pacman -S plasma kde-applications --assume-installed=mariadb   xfce4精简好用 pacman -S xfce4 xfce4-goodies # 如果是NetworkManager pacman -S nm-connection-editor network-manager-applet # 声音 pacman -S pulseaudio pulseaudio-alsa pulseaudio-bluetooth xfce4-pulseaudio-plugin pavucontrol    通用部分\n# 网络组件（原则同上所述） pacman -S networkmanager systemctl enable NetworkManager # 蓝牙播放设备所需组件，bluez默认已经安装 pacman -S bluez pulseaudio-bluetooth # 蓝牙服务（蓝牙图标） systemctl enable bluetooth  桌面管理器  lightdm作为deepin的依赖会自动安装，也可以给xfce4用\n启用lightdm桌面管理器 pacman -S lightdm-gtk-greeter-settings systemctl enable lightdm   sddm是kde默认的桌面管理器 systemctl enable sddm    输入法 pacman -S wqy-microhei # 中文字体 cjk（中日韩） pacman -S noto-fonts-cjk # yay不能以root运行 yay -S fcitx-sogoupinyin # 用fcitx-configtool而不用kcm-fcitx（kde），会安装kwallte # fcitx-gtk fcitx-qt能让输入法支持各个架构写的程序 pacman -S fcitx-configtool fcitx fcitx-qt5 # 设置环境变量，否则输入法切换不出来 cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt;~/.xprofile export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=@im=fcitx export LANG=zh_CN.UTF-8 export LANGUAGE=zh_CN EOF cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt;~.pam_environment GTK_IM_MODULE DEFAULT=fcitx QT_IM_MODULE DEFAULT=fcitx XMODIFIERS DEFAULT=@im=fcitx EOF  应用软件 # 工具 yay -S zsh git subversion mlocate # 编辑器 yay -S vim sublime-text-imfix code phpstorm # 网络 yay -S uget chromium firefox-i18n-zh-cn # 开发 yay -S npm php mariadb-clients redis yay -S postman-bin dbeaver docker docker-compose #yay -S virtualbox virtualbox-host-modules-arch virtualbox-ext-oracle virtualbox-guest-iso # 把当前用户加入virtualbox用户组，否则virtualbox识别不到usb设备 #usermod -a -G vboxusers ${USER} # 聊天社交 yay -S thunderbird-i18n-zh-cn electronic-wechat qq-linux # 音乐 yay -S netease-cloud-music # wps、pdf yay -S wps-office-cn ttf-wps-fonts foxitreader # 图片处理 yay -S gimp # 游戏 yay -S steam #yay -S steam-native-runtime #yay -S steamcmd # 墙 #yay -S shadowsocks kcptun tsocks yay -S v2ray # 远程协助 #yay -S teamviewer # 内网穿透 yay -S frpc frps # 等宽字体 yay -S ttf-iosevka adobe-source-code-pro-fonts # android安卓工具，adb/fastboot/driver yay -S android-tools android-udev mtpfs gvfs-mtp gvfs-gphoto2 # 其他 yay -S sshpass yay -S man-pages-zh_cn  开机动画 这里指的是，从grub选中以后，到出现登录界面之间的加载过程中的动画。使用KMS组件plymouth。\n安装 yay -S plymouth # 以下为可选操作，plymouth-theme-arch-logo是个比较好看的动画（主题） yay -S plymouth-theme-arch-logo plymouth-set-default-theme arch-logo  配置plymouth参数 /etc/plymouth/plymouthd.conf\n# Distribution defaults. Changes to this file will get overwritten during # upgrades. [Daemon] Theme=arch-logo ShowDelay=0 DeviceTimeout=5  配置KMS 编辑/etc/mkinitcpio.conf，把plymouth添加到HOOKS的base udev之后，示例如下\nHOOKS=(base udev plymouth autodetect modconf block filesystems keyboard fsck)  重建内核 每次修改plymouth参数都需要重建内核\nmkinitcpio -P  如果设置主题时加上-R参数，会自动执行上述操作\nplymouth-set-default-theme -R arch-logo  修改内核参数 如果启动引导器是GRUB，编辑/etc/default/grub，给常量GRUB_CMDLINE_LINUX_DEFAULT添加quiet splash\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;quiet splash\u0026quot;  然后重新生成grub配置文件\ngrub-mkconfig -o /boot/grub/grub.cfg  切换Plymouth版本的桌面管理器 能够使开机动画与登录界面平滑过度\n lightdm systemctl disable lightdm systemctl enable lightdm-plymouth   sddm systemctl disable sddm systemctl enable sddm-plymouth    常见问题/FAQ  yay执行安装命令后提示找不到数据库错误！ 这是翻译的坑，原文是no database errors have been found，意思是没有发现数据库错误，就是没有错误，一切正常。 adb shell提示一下错误信息 error: insufficient permissions for device  archlinux安装android-udev包即可。其他发行版参考在硬件设备上运行应用\n 安装archlinuxcn-keyring秘钥验证失败（出现类似以下错误信息） ==\u0026gt; Locally signing trusted keys in keyring... -\u0026gt; Locally signing key 02E02B85AF209AA00F784A1DD48313B447CD9E46... ==\u0026gt; ERROR: 02E02B85AF209AA00F784A1DD48313B447CD9E46 could not be locally signed.  参考文章GnuPG-2.1 与 pacman 密钥环\n 文件管理器连接samba\n注意安装gvfs-smb  参考文章  Installation guide Bumblebee NVIDIA Arch Linux 下Intel + NVIDIA 双显卡3D 游戏配置（dota2@steam） Plymouth error: insufficient permissions for device（解决adb shell问题） 在硬件设备上运行应用 Media Transfer Protocol#FUSE_filesystems Lenovo IdeaPad S540-13ARE AMDGPU AMD Radeon RX Vega 8 (Ryzen 4000) ","date":"2018-03-23","permalink":"https://www.maoxuner.cn/post/2018/03/archlinux-as-usual/","tags":["linux","archlinux"],"title":"日常使用ArchLinux"},{"content":"应对复杂的装机环境，bios/uefi，windows/linux。\n假设已有一台装好grub(2.02)的linux系统。U盘的设备路径/dev/sdb。\nU盘分区  使用mbr分区表 只有mbr分区表才能同时支持bios和uefi 分两个区 /dev/sdb1大一些，日常存储文件用 /dev/sdb2用作esp分区（需要调整分区类型为ESP文件系统，加上boot标记）  挂载U盘 按照该对应方式挂载\n/dev/sdb1 \u0026gt;\u0026gt;\u0026gt; /tmp/data /dev/sdb2 \u0026gt;\u0026gt;\u0026gt; /tmp/esp  安装grub引导文件 grub-install --target=i386-pc --boot-directory=/tmp/data/.boot /dev/sdb  安装uefi引导文件 grub-install --target=x86_64-efi --boot-directory=/tmp/data/.boot --efi-directory=/tmp/esp --removable  grub.cfg 如果安装成功，在/tmp/data/.boot下应该有grub目录。创建/tmp/data/.boot/grub.cfg即可。\n可通过${grub_platform}变量判断是bios还是uefi，可以用来加载不同的配置文件。\nif [ \u0026quot;${grub_platform}\u0026quot; == \u0026quot;efi\u0026quot; ]; then menuentry \u0026quot;Microsoft Windows Vista/7/8/8.1 UEFI-GPT\u0026quot; { insmod part_gpt insmod fat insmod search_fs_uuid insmod chain search --fs-uuid --set=root $hints_string $fs_uuid chainloader /EFI/Microsoft/Boot/bootmgfw.efi } fi if [ \u0026quot;${grub_platform}\u0026quot; == \u0026quot;pc\u0026quot; ]; then menuentry \u0026quot;Microsoft Windows Vista/7/8/8.1/10 BIOS-MBR\u0026quot; { insmod part_msdos insmod ntfs insmod search_fs_uuid insmod ntldr search --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1 69B235F6749E84CE ntldr /bootmgr } fi  配置文件具体怎么写，我也不会。\n参考文章  基于 GRUB2 制作滋瓷 BIOS/UEFI 双模式启动的 Linux/Windows 安装U盘 GRUB ","date":"2018-03-23","permalink":"https://www.maoxuner.cn/post/2018/03/usb-grub2-bios-uefi/","tags":["usb","linux"],"title":"使用grub2制作bios和uefi双启动u盘"},{"content":"使用docker搭建php开发环境时遇到一个坑，明明gii以及debug模块配置正确，但是却不运行的问题。查看Yii2文档 - 使用 Gii 生成代码，找到了思路。\n配置信息 Yii2配置文件如config/web.php，添加相关配置代码\ngii if(YII_ENV_DEV){ $config['bootstrap'][] = 'gii'; $config['modules']['gii'] = [ 'class' =\u0026gt; 'yii\\gii\\Module', 'allowedIPs' =\u0026gt; ['127.0.0.1', '::1', '192.168.0.*', '192.168.178.20'], // 按需调整这里（非必须） ]; }  debug if(YII_ENV_DEV){ $config['bootstrap'][] = 'debug'; $config['modules']['debug'] = [ 'class' =\u0026gt; 'yii\\debug\\Module', 'allowedIPs' =\u0026gt; ['127.0.0.1', '::1', '192.168.0.*', '192.168.178.20'], // 按需调整这里（非必须） ]; }  开启IP白名单 使用docker时，gii和debug模块都不能运行。看到allowedIPs以后，突然想到框架的安全设置，应该仅允许本机进行调试。服务器运行的“本机”是各个容器，而宿主机算是外部主机了，需要加入白名单才能使用。\n宿主机的ip应该使用docker网络的ip。一般为172.17.0.1，172.18.0.1等，取决于容器所在的docker网络。或者使用ip匹配模式，类似于172.*.*.*。\n使用yii框架的话，把172.*.*.*加入到allowedIPs，就能正常运行了。\n参考文章  Yii2文档 - 使用 Gii 生成代码 ","date":"2018-03-07","permalink":"https://www.maoxuner.cn/post/2018/03/yii2-gii-debug/","tags":["php","yii2"],"title":"Yii2开启gii以及debug"},{"content":"日常使用deepin一年多，开箱即用，而且中国特色化做得很好。然而，在用的过程中总觉得缺点啥。于是我又开始了新一轮的尝试。 ArchLinux，简洁、海量包、滚动发行。不过，最让我印象深刻的是它全面的wiki，尽管汉化wiki跟不上进度。最新的软件包，使得我更新和安装软件很便利。\n系统安装 下载安装镜像 http://mirrors.163.com/archlinux/iso/latest/\n直接引导iso镜像文件 说明：已有一个装好grub4dos的FbinstTool-UD 多用途usb启动盘\n 提取archiso.img和vmlinuz 解压iso镜像，获取/arch/boot/x86_64/路径下的两个文件 分别复制以上两个文件以及整个iso镜像到u盘内，并编辑U盘的grub4dos引导，注意实际路径 title install archlinux kernel /Boot/installer/archlinux/vmlinuz archisolabel=ARCH initrd /Boot/installer/archlinux/archiso.img boot    注意arhcisolabel=ARCH 3. 从u盘启动，并选中install archlinux引导项 此时会出现错误：\nWaiting 30 second for device /dev/disk/by_label/... Error : /dev/disk/by_label/... did not show up after 30 seconds.  手动挂载iso镜像  挂载usb设备（注意实际设备名） mkdir /usb \u0026amp;\u0026amp; mount /dev/sdb1 /usb   挂载iso镜像（注意文件名） losetup /dev/loop0 /usb/archlinux-2018.03.01-x86_64.iso   创建软链（与archisolabel有关） ln -s /dev/disk/by-label/ARCH_201803 /dev/disk/by-label/ARCH   恢复引导（退出rootfs命令行即可） exit      安装过程 预配置  修改镜像源，把以下内容添加到/etc/pacman.d/mirrorlist第一行 Server = http://mirrors.163.com/archlinux/$repo/os/$arch   更新系统时间 timedatectl set-ntp true   磁盘分区fdisk，bios方案  /dev/sda1 /boot 256MB /dev/sda2 / 20GB   挂载分区 mount /dev/sda2 /mnt mkdir /mnt/boot mount /dev/sda1 /mnt/boot   创建swapfile（可选） dd if=/dev/zero of=/mnt/swapfile bs=1M count=1024 chmod 600 /mnt/swapfile mkswap /mnt/swapfile swapon /mnt/swapfile    安装基础系统  安装系统文件 pacstrap /mnt base base-devel   生成磁盘挂载信息 genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab  如果创建了swapfile，需要另外执行下面这个代码\nsed -i 's/\\/mnt//g' /mnt/etc/fstab    基础信息配置  chroot arch-chroot /mnt   时区、时间 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc   语言 cat \u0026lt;\u0026lt; EOF \u0026gt; /etc/locale.gen en_US.UTF-8 UTF-8 zh_CN.UTF-8 UTF-8 EOF locale-gen echo 'LANG=en_US.UTF-8' \u0026gt; /etc/locale.conf   主机名 echo ironbox \u0026gt; /etc/hostname cat \u0026lt;\u0026lt; EOF \u0026gt;\u0026gt; /etc/hosts 127.0.0.1 localhost ::1 localhost 127.0.0.1 ironbox ::1 ironbox EOF   启用基本服务 systemctl enable dhcpcd    启动引导器grub # 如果是intel处理器，需要安装intel-ucode pacman -S intel-ucode # 安装grug pacman -S grub # 主引导 grub-install --target=i386-pc /dev/sda # grub配置 grub-mkconfig -o /boot/grub/grub.cfg  重启之前设置root密码，或者创建管理员账号\n日常使用 常用软件 pacman -S vim git tmux wget pacman -S sudo # 反注释/etc/sudoers中wheel用户组 pacman -S zsh sh -c \u0026quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\u0026quot; pacman -S openssh systemctl enable sshd  创建管理员账号 useradd -m -s /bin/zsh admin passwd admin usermod -a -G wheel admin  multilib 文件/etc/pacman.conf\n[multilib] Server = /etc/pacman.d/mirrorlist  aur源 文件/etc/pacman.conf\n[archlinuxcn] Server = http://mirrrors.163.com/archlinux-cn/$arch  pacman -Syu pacman -S archlinuxcn-keyring pacman -S yaourt  桌面环境 xfce4 deepin 相比之下，还是deepin桌面环境好看，好用。虽然有些卡。\npacman -S deepin deepin-extra  字体 在wiki里发现了noto这款开源字体。常规、等宽、中文都能很好的显示。cjk是中日韩的英文缩写。\npacman -S noto-fonts noto-fonts-cjk  主题 deepin的主题挺好看了，先不管这个了。\n参考文章  Installation guide Using manual formatting ","date":"2018-03-06","permalink":"https://www.maoxuner.cn/post/2018/03/try-archlinux/","tags":["linux","archlinux"],"title":"折腾ArchLinux"},{"content":"《小萝莉的猴神大叔》在美团上被归类为剧情、喜剧。带着这个初印象，看了前几分钟，我怀疑，我是不是走错了影厅。\n这其实是个有关宗教、国家、人性的公路片，初次上映于2015年。影片讲述了一个虔诚的印度教大叔送一个陌生的穆斯林哑女从印度回到巴基斯坦寻亲的故事。\n有好多内容想表达，却不知道怎么写了。可能大概就这么一句话：善良是人的本性，跟其他任何事物无关。\n","date":"2018-03-03","permalink":"https://www.maoxuner.cn/post/2018/03/bajrangi-bhaijaan/","tags":["movie"],"title":"小萝莉的猴神大叔"},{"content":"初四，应邀，穿越半个县城，跟好友相聚，看电影《唐人街探案2》。电影的评分不低，应该不会让我失望。\n情节 好吧，我觉得我是没看的太懂。\n简而言之，就是秦风被唐仁忽悠到了一个侦探大赛。侦探大赛关系到一个命案，而这个命案是一起连环杀人案中的一起。主要任务就是找到连环杀人案的boss了。整个过程充斥着唐仁的尬笑，故意的口音，还有各种烂梗。\n电影开头，两条人命。一个被挖肾，一个被掏心。作为观众而言，已经可以断定，这就是个连环杀人案了。然而，秦风还得论证一番，这是个连环杀人案。然后还得让各部门协调，合并案件。\n连环杀人案有两要素：杀人动机、杀人规律。两个被害人都缺了器官，我猜测杀人动机就是人体器官交易了。杀人规律，这就看作者的心情了。随便编个书，画个图，指出阴阳五行就是杀人规律。反正我也不懂，你说啥就是啥，你说下个人when、where、how，那就是咯。不过，传播中华文化这点还是蛮喜欢的。在我的理解看来，道的核心技术就是炼长生不老药炼出来的火药术了。\n目击凶手作案，追击并被逃脱。证明一个人不是凶手，最好的办法就是让嫌疑人待在侦探身旁，并目击另一个人作案。后面的剧情通常是这两个目击者追击凶手，而且其中一个人会追丢凶手，另一个人会因为凶手拿出凶器而错失捉拿凶手的机会。然后案件变成僵局，破案组遭受滑铁卢。\n滑铁卢过程中，最尬的就是众侦探合力越狱了。Kiko说任何时候都不要说一个黑客没有电脑。然后拆了个表，显示分屏，投影键盘，还非得弄个命令行的界面闪一闪。我也算个技术宅，看到这一幕，尴尬。好像投影不耗电似的，好像那么丁点儿玩意儿运算能力很强大似的，好像侵入保密部门的网络很容易似的。GFW了解一下？\n摩托车队让我想起了福禄小金刚，《十万个冷笑话》里面的救场人物。剧情发展不下去了，就来套个“合理”的buff，然后愉快的玩耍。从遭受陆国富手下追击，到被警察追捕，无一例外的，都是救场。只不过加了些无厘头，背景音乐粉红色的回忆听得我欲生欲死。尬。\n终于要面见boss了，太平间竟然还有暗门，摆设么？打开暗门，一个硕大的手术台？祭坛？出现了。要是我在这里工作，即使不研究那暗门，也会八卦这么大地方里面藏着什么玩意儿。架是要打一场的，奇怪的是boss竟然没有趁胜追击。反而是道出了真相：我已经走投无路啦，耶稣和科学都不可信，那我只能信奉道了。大概就是无药可救，不可救药。然后法克了自己的喉。\n最后就是揭露宋义顺道的事情了，感觉是硬扯上了点关系吧。或许他自己就是Q，查清了整个案件，顺风车杀个人，然后大隐隐于市。\n好吧，这些就是我看完本片的感觉了。剧情老套，可以一笑。over\n彩蛋  第三部预告 我故意这么写的，肯定会给我凑点流量。野田浩仰天长啸，好难啊！打了个电话给唐仁，说是这部电影还有第三部。然而我满脑子里想的都是《速度与激情3：东京漂移》。 撒狗粮 看到朋友圈小伙伴在询问电影的彩蛋，所以我猜测应该是有的吧。耐着性子，看了片尾。然后阿香出境了，丫丫女神。随后陈思成也跟着出境，撒狗粮。且爱且珍惜。 ","date":"2018-02-23","permalink":"https://www.maoxuner.cn/post/2018/02/detective-chinatown-2/","tags":["movie"],"title":"《唐人街探案2》我觉得有点尬"},{"content":"用docker搭建php服务器时，发现yii2核心类Object报错了。此时用的php版本是当前最新版的7.2。\nFatal error: Cannot use 'Object' as class name as it is reserved in /var/www/yii/vendor/yiisoft/yii2/base/Object.php on line 77  出错原因 Object是php7.2中的保留类名，不可以再定义名称为Object的类了。\n The object name was previously soft-reserved in PHP 7.0. This is now hard-reserved, prohibiting it from being used as a class, trait, or interface name.\n 解决方法  php版本降级（缓兵之计） 经过测试，php7.2之前的版本都没有问题。这也与php官方文档的说明一致：从7.0版本开始软性保留，从7.2版本开始硬性保留。 更改Yii2核心类Object为其他名称（权宜之计） 等待Yii修复bug（长久之计） 今天发现新版本v2.0.15.1中已经修复这个bug了。  使用最新版本的yii即可\n参考文章  Backward incompatible changes Fatal error: Cannot use \u0026lsquo;Object\u0026rsquo; as class name as it is reserved in xxx/Object.php on line 77 [PHP7] Consider to deprecate yii\\base\\Object as object might become soft-reserved ","date":"2018-02-04","permalink":"https://www.maoxuner.cn/post/2018/02/php7.2-yii2-object-conflict/","tags":["php","yii2"],"title":"PHP7.2中Yii2核心类Object报错"},{"content":" __________________ \u0026lt; 不解释了，快上船 \u0026gt; ------------------ \\ \\ \\ ## . ## ## ## == ## ## ## ## === /\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;___/ === ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ / ===- ~~~ \\______ o __/ \\ \\ __/ \\____\\______/  安装docker 前人之述备矣，Get Docker CE for Debian\nsudo apt-get update sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \u0026quot;$ID\u0026quot;)/gpg | sudo apt-key add - sudo apt-key fingerprint 0EBFCD88 sudo add-apt-repository \\ \u0026quot;deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \u0026quot;$ID\u0026quot;) \\ $(lsb_release -cs) \\ stable\u0026quot; sudo apt-get update sudo apt-get install docker-ce docker-compose  使用 普通用户直接使用docker命令 把用户添加到docker用户组，并重启服务\nsudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker  镜像加速 编辑文件/etc/docker/daemon.json\n{ \u0026quot;registry-mirrors\u0026quot;: [\u0026quot;https://docker.mirrors.ustc.edu.cn\u0026quot;] }   中科大 https://docker.mirrors.ustc.edu.cn 阿里云 Docker 镜像加速器，注册并获取对应的加速地址  京东云上 容器中不能下载文件 问题详情 能ping通外网主机，但是不能下载文件。云主机的MTU和Docker的MTU不一致，京东云默认1450，docker默认1500。\n2: eth0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1450 qdisc pfifo_fast state UP group default qlen 1000 link/ether ga:16:3e:7a:99:a5 brd ff:ff:ff:ff:ff:ff inet 192.168.0.3/20 brd 192.168.15.255 scope global eth0 valid_lft forever preferred_lft forever inet6 ge80::f816:3eff:fe7a:99a5/64 scope link valid_lft forever preferred_lft forever 3: docker0: \u0026lt;NO-CARRIER,BROADCAST,MULTICAST,UP\u0026gt; mtu 1500 qdisc noqueue state DOWN group default link/ether 02:42:5b:42:44:04 brd ff:ff:ff:ff:ff:ff inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0 valid_lft forever preferred_lft forever  解决方法 针对docker自带的bridge网络 有以下几种方法\n 编辑文件/etc/docker/daemon.json  { \u0026quot;registry-mirrors\u0026quot;: [\u0026quot;https://docker.mirrors.ustc.edu.cn\u0026quot;], \u0026quot;mtu\u0026quot;: 1450 }  也可以通过添加启动参数来设置mtu，编辑文件/etc/default/docker  DOCKER_OPTS=\u0026quot;--mtu=1450\u0026quot;  直接修改网络设备docker0（没测试过，宿主机重启会失效）  sudo ifconfig docker0 mtu 1450  按照以上任意方法设置以后，重启docker服务。\n除第三个方法以外，docker0的mtu没有变化。但是使用命令查看bridge网络，会发现已有相应的mtu设置。\ndocker network inspect bridge  显示结果如下\n[ { \u0026quot;Name\u0026quot;: \u0026quot;bridge\u0026quot;, \u0026quot;Id\u0026quot;: \u0026quot;bc44c8f821dfa752ea8bc02f00bfde2694656f14da5cbed6c8ee2623e1a92cf5\u0026quot;, \u0026quot;Created\u0026quot;: \u0026quot;2018-02-04T02:59:42.646771801+08:00\u0026quot;, \u0026quot;Scope\u0026quot;: \u0026quot;local\u0026quot;, \u0026quot;Driver\u0026quot;: \u0026quot;bridge\u0026quot;, \u0026quot;EnableIPv6\u0026quot;: false, \u0026quot;IPAM\u0026quot;: { \u0026quot;Driver\u0026quot;: \u0026quot;default\u0026quot;, \u0026quot;Options\u0026quot;: null, \u0026quot;Config\u0026quot;: [ { \u0026quot;Subnet\u0026quot;: \u0026quot;172.17.0.0/16\u0026quot;, \u0026quot;Gateway\u0026quot;: \u0026quot;172.17.0.1\u0026quot; } ] }, \u0026quot;Internal\u0026quot;: false, \u0026quot;Attachable\u0026quot;: false, \u0026quot;Ingress\u0026quot;: false, \u0026quot;ConfigFrom\u0026quot;: { \u0026quot;Network\u0026quot;: \u0026quot;\u0026quot; }, \u0026quot;ConfigOnly\u0026quot;: false, \u0026quot;Containers\u0026quot;: {}, \u0026quot;Options\u0026quot;: { \u0026quot;com.docker.network.bridge.default_bridge\u0026quot;: \u0026quot;true\u0026quot;, \u0026quot;com.docker.network.bridge.enable_icc\u0026quot;: \u0026quot;true\u0026quot;, \u0026quot;com.docker.network.bridge.enable_ip_masquerade\u0026quot;: \u0026quot;true\u0026quot;, \u0026quot;com.docker.network.bridge.host_binding_ipv4\u0026quot;: \u0026quot;0.0.0.0\u0026quot;, \u0026quot;com.docker.network.bridge.name\u0026quot;: \u0026quot;docker0\u0026quot;, \u0026quot;com.docker.network.driver.mtu\u0026quot;: \u0026quot;1450\u0026quot; }, \u0026quot;Labels\u0026quot;: {} } ]  针对docker-compose创建的网络 docker-composer会另外创建网络，而不使用默认的bridge网络，因此也要设置一下mtu，截取docker-compose.yml部分内容如下\nnetworks: default: driver_opts: com.docker.network.driver.mtu: 1450  参考文章  解决非root用户使用docker的办法 Docker 镜像使用帮助 Docker 镜像加速器 云主机修改Docker默认MTU值 openstack虚拟机上docker容器无法上网解决方案 Openstack虚拟机内安装docker，容器无法联网问题 ","date":"2018-02-03","permalink":"https://www.maoxuner.cn/post/2018/02/use-docker/","tags":["docker"],"title":"docker的安装和使用"},{"content":"多容器 apache+php+mariadb+redis\n主要配置 构建php镜像 基于官方php镜像进行定制，增加所需的php扩展，修改php配置，以及创建虚拟主机。\nDockerfile 文件php/Dockerfile\nFROM php:apache # php configure COPY php.ini /usr/local/etc/php/php.ini # php extension COPY sources.list /etc/apt/sources.list RUN apt-get update \\ \u0026amp;\u0026amp; apt-get install -y --no-install-recommends \\ libbz2-dev \\ libfreetype6-dev libjpeg62-turbo-dev libpng-dev \\ \u0026amp;\u0026amp; rm -r /var/lib/apt/lists/* \\ \u0026amp;\u0026amp; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\ \u0026amp;\u0026amp; docker-php-ext-install -j$(nproc) zip bz2 gd mysqli pdo_mysql sockets \\ \u0026amp;\u0026amp; pecl install redis \\ \u0026amp;\u0026amp; docker-php-ext-enable redis # php composer RUN php -r \u0026quot;copy('https://getcomposer.org/installer', 'composer-setup.php');\u0026quot; \\ \u0026amp;\u0026amp; php -r \u0026quot;if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\u0026quot; \\ \u0026amp;\u0026amp; php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\ \u0026amp;\u0026amp; php -r \u0026quot;unlink('composer-setup.php');\u0026quot; # apache configure RUN a2enmod rewrite.load # apache vhosts COPY vhosts/* /etc/apache2/sites-available/ RUN a2ensite demo.conf  说明  FROM php:apache未指定php版本号，默认使用最新的版本，当前7.2 docker-php-ext-install可以安装的组件如下，curl组件默认已经安装  bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl json ldap mbstring mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap sockets sodium spl standard sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zend_test zip\n  必要时需要安装一些依赖，并用docker-php-ext-configure配置编译参数 pecl可以安装pecl支持的组件，如redis  遇到的问题 直到我看到这个Installation of curl fails - easy.h should be in /include/curl/ #467，才发现curl组件默认已经安装。不过，又发现了编译curl组件的另连环坑：\n Installation of curl fails - easy.h should be in /include/curl/\n 缺少依赖，而且依赖的路径不正确，解决方法\napt-get install -y libcurl4-openssl-dev debMultiarch=\u0026quot;$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\u0026quot; if [ ! -d /usr/include/curl ]; then ln -sT \u0026quot;/usr/include/$debMultiarch/curl\u0026quot; /usr/local/include/curl fi  docker-compose mariadb和redis基本不需要定制，可以直接使用官方的镜像。我这里稍微做了一点定制。\ndocker-compose.yml 文件docker-compose.yml\nversion: '2' services: mariadb: build: ./mariadb container_name: wx-mariadb hostname: wx-mariadb restart: always environment: MYSQL_ROOT_PASSWORD: cm9vdA== ports: - 3306:3306 volumes: - db:/var/lib/mysql redis: build: ./redis container_name: wx-redis hostname: wx-redis restart: always ports: - 6379:6379 php: build: ./php container_name: wx-php hostname: wx-php restart: always ports: - 80:80 volumes: - ./html:/var/www/html depends_on: - mariadb - redis volumes: db:  说明  ports暴露端口 80:80前一个是宿主机端口，后一个是容器端口 volumes分区映射 ./html:/var/www/html前者是宿主机的路径，后者是容器内的路径（不存在时会自动创建），可以理解为挂载。前者不能包含软连接，因为软连接只能在容器内部连接，因而找不到宿主机内的文件 db:/var/lib/mysql前者是创建的分区文件，后者是容器内的路径，可以理解为虚拟磁盘 分区映射是在镜像构建以后的操作。因此在镜像构建过程中，无法使用docker-compose.yml中定义的volumes  容器间的连接 localhost和127.0.0.1  容器内的localhost和127.0.0.1永远是指当前容器 同一个docker-compose.yml创建的容器在同一个网络下 同一个网络下的容器可以直接通过容器的ip或者名称？连接，Connect containers（写文章时找文档可找了好久）  You can connect an existing container to one or more networks. A container can connect to networks which use different network drivers. Once connected, the containers can communicate using another container’s IP address or name.\n  link/links参数不再推荐使用（自动在/etc/hosts里添加各主机的ip主机名的记录） 宿主机通过暴露的端口连接容器，尽量用127.0.0.1  注意\n 在宿主机内，用mysql的web客户端（如adminer.php）连接数据库时，主机地址填service中的主键名mariadb（容器名wx-mariadb不能用来连接，可能是我的理解有问题，详细参考文档）。不能填写localhost或者127.0.0.1。 同理，连接redis要用主机名redis进行连接。 进行连接时，发送请求的主机是wx-php。 利用宿主机内的mysql客户端连接服务器的话，主机地址填写127.0.0.1。使用localhost连接mysql时，会使用sock进行连接，因而出错。  ERROR 2002 (HY000): Can\u0026rsquo;t connect to local MySQL server through socket \u0026lsquo;/var/run/mysqld/mysqld.sock\u0026rsquo; (2 \u0026ldquo;No such file or directory\u0026rdquo;)\n   开发调试 IP白名单 Web框架往往只能在本机上（localhost或者127.0.0.1）进行开发调试。根据上述说明，此时的“本机”是指容器本身。因此，需要在框架的设置中，将宿主机在docker网络中的ip设置到白名单里。\n参考文章  工具集/docker/webserver（本文案例） naga3/docker-lamp Installation of curl fails - easy.h should be in /include/curl/ #467 Bug #74125\tPHP 7.1.2 compilation and libcurl error Legacy container links Connect containers ","date":"2018-01-28","permalink":"https://www.maoxuner.cn/post/2018/01/docker-php-server/","tags":["docker","php"],"title":"使用docker搭建php开发环境"},{"content":"适用于kvm架构的vps。openvz不支持。\n用了搬瓦工的vps，使用composer创建项目时遇到内存不足的问题。查看kiwi控制台，发现物理内存（512M）还有剩余，swap（128M）用光了。可以通过增加swap来解决问题。\n创建并开启swap sudo dd if=/dev/zero of=/swapfile bs=1M count=512 sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile  查看是否生效  在kiwi控制台查看swap是否增加 通过命令查看 sudo swapon -s    卸载swap sudo swapoff /swapfile  自动加载swap  卸载掉系统原有swap文件，并重新创建一个更大容量的swap文件将之替换 编辑/etc/fstab把另外新建的swap文件添加到自动挂载项  参考文章  Linux 创建和删除swap file Linux SWAP 配置概要说明 ","date":"2018-01-03","permalink":"https://www.maoxuner.cn/post/2018/01/kvm-vps-swap-file/","tags":["linux","vps"],"title":"为vps添加swap"},{"content":"Apache服务器配置使用https（ssl）。需求：vps管理权限。\n创建虚拟主机 给各个域名创建虚拟主机，80端口。保证http可正常访问。\n安装证书自动设置工具certbot 需要配置backports仓库，参考Debian Backports ›› Instructions\nsudo apt-get install python-certbot-apache -t stretch-backports  给各个域名颁发证书 sudo certbot certonly --webroot \\ -w /var/www/html/www/ -d domain.com -d www.domain.com \\ -w /var/www/html/api/ -d api.domain.com  参数-w后面接web根目录，-d后接域名。\n成功时显示的信息\nSaving debug log to /var/log/letsencrypt/letsencrypt.log Plugins selected: Authenticator webroot, Installer None Obtaining a new certificate Performing the following challenges: http-01 challenge for domain.com http-01 challenge for www.domain.com http-01 challenge for api.domain.com Using the webroot path /var/www/html/webdata/test for all unmatched domains. Waiting for verification... Cleaning up challenges IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/domain.com/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/domain.com/privkey.pem Your cert will expire on 2018-03-29. To obtain a new or tweaked version of this certificate in the future, simply run certbot again. To non-interactively renew *all* of your certificates, run \u0026quot;certbot renew\u0026quot; - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le  公钥/etc/letsencrypt/live/domain.com/fullchain.pem\n私钥/etc/letsencrypt/live/domain.com/privkey.pem\n创建ssl虚拟主机并将http转发到https 需要开启alias模块\n\u0026lt;VirtualHost *:80\u0026gt; ServerName domain.com RedirectMatch 301 ^(.*)$ https://domain.com$1 \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:443\u0026gt; ServerName domain.com RedirectMatch 301 ^(.*)$ http://www.domain.com$1 SSLEngine on SSLCertificateFile /etc/letsencrypt/live/domain.com/fullchain.pem SSLCertificateKeyFile /etc/letsencrypt/live/domain.com/privkey.pem \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:80\u0026gt; ServerName www.domain.com RedirectMatch 301 ^(.*)$ https://www.domain.com$1 \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:443\u0026gt; DocumentRoot /var/www/html/www ServerName www.domain.com SSLEngine on SSLCertificateFile /etc/letsencrypt/live/domain.com/fullchain.pem SSLCertificateKeyFile /etc/letsencrypt/live/domain.com/privkey.pem \u0026lt;/VirtualHost\u0026gt;  其他ACME客户端 Certbot是Let\u0026rsquo;s Enrypt官方推荐的ACME客户端，按照上述方式使用，采用http验证域名的所有权。但是，我发现了更强大更好用的社区维护的ACME客户端acme.sh。它利用api，支持dns自动验证。acme.sh文档很详细了acme.sh 说明。\n参考文章  Getting Started - Let\u0026rsquo;s Enrypt Certbot User Guide - Certbot SSL/TLS Strong Encryption: How-To Redirect Request to SSL Apache Module mod_alias acme.sh acme.sh 说明 ","date":"2017-12-29","permalink":"https://www.maoxuner.cn/post/2017/12/letsencrypt/","tags":["apache","ssl"],"title":"使用Let'sEncrypt证书"},{"content":"放弃使用Next主题后，一直在尝试自己制作一个主题。尤其是实现项目展示以及心情展示的功能。奋斗了两个月左右，这款主题HexOne终于诞生了！\nHexOne 简约的Hexo主题HexOne（仿Trapecho）\n安装 依赖  css预处理器less rss订阅生成 json内容生成  npm install hexo-renderer-less --save npm install hexo-generator-feed --save npm install hexo-generator-json-content --save  注意\n hexo-renderer-less涉及到样式文件的生成，必须安装 hexo-generator-feed与rss订阅相关，不安装不能生成atom.xml文件 hexo-generator-json-content与文章搜索功能相关，不安装不能搜索文章  文件 复制source/_pages以及source/_data整个目录到文章源码目录source/下（该目录下有_posts），并把_pages改名为pages，否则该目录下的文章将不会被渲染。\n注意\n 如果这几个页面的permalink与已有页面重复，需要修改对应的permalink以及菜单内容 如果不执行该操作，将无法使用项目展示、心情等功能  特色 导航条置顶 滚动页面后导航条置顶\n文章搜索 站内搜索\n站内搜索使用了hexo-generator-json-content插件来生成文章内容的json文件。相比于搜索引擎搜索，这个方案能够搜索到站内的所有文章和单页，但是会消耗一定的带宽。生成文章时，该插件会一定程度上增加处理的时间，目前看来影响并不大。\n开源项目展示 只支持码云开源项目的展示。如果要支持Github等，可修改source/js/main.js文件中的相关代码。\n心情 有时候只是想三言两语说说自己的心情，不想每次都创建一篇文章，但是又想有个好的展示效果。于是便有了这个功能——心情，类似于说说/微博的功能。修改对应的数据（source/_data/moods.yml），按照yaml格式添加即可。\n备注 该主题仅仅是为了满足我自己的需求，会及时修复漏洞、进行优化，但是不会做更多功能的开发。该项目不再维护！！！\n","date":"2017-12-24","permalink":"https://www.maoxuner.cn/post/2017/12/hexo-theme-hexone/","tags":["hexo"],"title":"仿Trapecho制作的Hexo主题HexOne"},{"content":"利用git webhook请求php脚本，触发deployer自动部署实现的核心流程：PC/Client(git push) =\u0026gt; GitHub/Git Repository(webhook/http request) =\u0026gt; Server/WebHost(php hook/shell_exec) =\u0026gt; Server/WeHost(deploy commands)\n设置部署公钥 部署脚本执行的用户www-data,把www-data的公钥添加到仓库的部署公钥里以便ssh访问git更新代码。\nDeployer部署配置 安装deployer 参考Deployer文档 - 安装\n配置deployer 生成配置文件\ndep init  详细参考Deployer文档 - 配置\n\u0026lt;?php namespace Deployer; require 'recipe/laravel.php'; // Configuration set('ssh_type', 'native'); set('ssh_multiplexing', true); set('repository', 'git@git.oschina.net:maoxuner/pandora.git'); set('branch', 'geeka'); add('shared_files', []); add('shared_dirs', []); add('writable_dirs', []); // Servers localServer('sunny', 'localhost') -\u0026gt;set('deploy_path', '/var/www/geeka') -\u0026gt;pty(true); // Tasks desc('Set Environment'); task('setEnv', function () { run(\u0026quot;cp {{deploy_path}}/release/.env.testing {{deploy_path}}/release/.env\u0026quot;); run(\u0026quot;php {{deploy_path}}/release/artisan key:generate\u0026quot;); }); after('deploy:vendors', 'setEnv'); // [Optional] if deploy fails automatically unlock. after('deploy:failed', 'deploy:unlock'); // Migrate database before symlink new release. before('deploy:symlink', 'artisan:migrate');  WebHooks 不同Git仓库，webhook发送的数据不同，这里以Git@OSC为例。\nphp脚本 www-data对目录应具有写入权限，否则得注释日志记录的相关代码。建议把该文件放在根目录以外的目录，并配置别名，这样自动部署的时候不会影响到该文件。\n\u0026lt;?php $password = 'hook password'; // 钩子密码，用来防止恶意访问 $branch = 'master'; // 部署分支，用来过滤其他分支的推送消息 $postStr = file_get_contents(\u0026quot;php://input\u0026quot;); $fh = fopen('deploy.log', 'a'); fwrite($fh, $postStr.\u0026quot;\\n\u0026quot;); $data = json_decode($postStr); if($data \u0026amp;\u0026amp; property_exists($data, 'password')){ if($data-\u0026gt;password == $password \u0026amp;\u0026amp; $data-\u0026gt;ref == 'refs/heads/'.$branch){ $result = shell_exec('dep deploy'); fwrite($fh, $result.\u0026quot;\\n\u0026quot;); } } fwrite($fh, date('Y-m-d H:i:s').\u0026quot;\\n-------- 分 -- 割 -- 线 --------\\n\\n\u0026quot;); fclose($fh);  Git仓库设置 添加一个webhook，URL地址为以上php脚本的地址，并设置好密码。\n利用git hook自动部署 目测是以WebHost作为git仓库，并通过仓库本身来执行shell脚本，实现自动部署。参考使用 Git Hook 实现网站的自动部署\n参考文章  Apache运行时的系统环境变量设置 Git@OSC WebHook Deployment Tool for PHP 使用 Git Hook 实现网站的自动部署 ","date":"2017-05-04","permalink":"https://www.maoxuner.cn/post/2017/05/php-deployer/","tags":["php","deployer","git"],"title":"使用php部署工具deployer实现自动部署"},{"content":"Ubuntu/Debian上默认没有安装flash插件，需要手动安装并调用插件。flash早晚会成为历史的尘埃，建议不要再折腾了\n安装并配置flash插件 安装flash插件 参考文件readme.txt中的Installation instructions\n 下载flash插件 从官方网站Adobe Flash Player全版本通用安装下载合适的版本。推荐通用版本，FP for Linux PPAPI，即文件flash_player_ppapi_linux.x86_64.tar.gz（64位）。 解压插件到特定目录 解压该插件，并复制全部内容到目录/usr/lib/adobe-flashplugin/，确保/usr/lib/adobe-flashplugin/libpepflashplayer.so是存在的。  chromium设置启动参数  在文件manifest.json中查看flash版本 修改配置文件/etc/chromium/default中的启动参数 启动参数CHROMIUM_FLAGS添加--ppapi-flash-path=/usr/lib/adobe-flashplugin/libpepflashplayer.so --ppapi-flash-version=25.0.0.148  参考文章  (转)chromium flash-plugins 解决方案 ","date":"2017-04-30","permalink":"https://www.maoxuner.cn/post/2017/04/ubuntu%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BD%BF%E7%94%A8flash%E6%8F%92%E4%BB%B6/","tags":["chromium","flash"],"title":"ubuntu谷歌浏览器使用flash插件"},{"content":"学习laravel遇到的一些坑，备忘。\n   项目 版本     system debian8   apache 2.4.10   php 5.6.30-0   mariadb 10.0.30   laravel 5.4.19    坑 不能使用.env文件的配置项 已配置好.env中的数据库，然而执行数据库迁移命令时，依然采用默认数据库配置。\n在项目根目录执行命令，生成秘钥\nphp artisan key:generate  缺少mcrypt组件 There is no suitable CSPRNG installed on your system  安装mcrypt组件即可\nsudo apt-get install php5-mcrypt sudo service apache2 restart  多主键Model 参考Laravel Model with Two Primary Keys update [duplicate]\n给路由分组设置默认Guard 修改Api\\Controller\npublic function __construct() { // We set the guard api as default driver auth()-\u0026gt;setDefaultDriver('api'); }  参考Setting the default guard on a route group\n参考文章  Laravel Model with Two Primary Keys update [duplicate] Setting the default guard on a route group ","date":"2017-04-27","permalink":"https://www.maoxuner.cn/post/2017/04/laravel-learning/","tags":["php","laravel"],"title":"折腾laravel总结"},{"content":"最近在研究git的webhook，想以此实现代码的自动部署。其核心内容就是一个php函数shell_exec()。我找到了一个厉害的php部署工具，叫做Deployer。尽管如此，还是遇到了一个很大的坑。\n首先说明一下，这里所说的环境变量，是linux服务器上执行env命令得到的环境变量，为了与apache服务器本身的环境变量区分开来，这里将前者称为系统环境变量。\napache系统环境变量 默认情况下，apache以用户www-data运行服务，系统环境变量就是宿主用户www-data的环境变量。然而，rapache在配置文件中对宿主的环境变量进行了修改。\n查看系统环境变量 通过以下php代码，可以查看系统环境变量的内容（前提是关闭php安全模式），可以发现环境变量中是没有HOME的。\n\u0026lt;?php var_dump(shell_exec('env'));  设置系统环境变量 参考文件/etc/apache2/envvars中的一段配置：\n# this won't be correct after changing uid unset HOME # 省略了一部分配置内容 export APACHE_RUN_USER=www-data  这段配置删除了环境变量HOME，同时配置了APACHE_RUN_USER这一项。有需要修改或者添加环境变量即可按照该格式操作。 如何找到配置文件/etc/apache2/envvars，执行命令find /etc/apache2 -type f|xargs grep APACHE_RUN_USER\n解决的问题 使用deployer部署项目，配置文件没有问题。在命令行下部署成功。通过php执行部署命令时，到deploy:vendors这一步失败。开启调试模式，发现composer报错，要求设置HOME或者COMPOSER_HOME环境变量。\n[RuntimeException] The HOME or COMPOSER_HOME environment variable must be set for composer to run correctly  同时以下代码执行的结果为NULL\n\u0026lt;?php var_dump(shell_exec('composer'));  按照上一点设置系统环境变量后，deployer成功部署，php脚本也能正常输出内容。\napache环境变量 简单说明一下\n设置变量 \u0026lt;VirtualHost *:80/\u0026gt; DocumentRoot /var/www/html ServerName www.domain.com SetEnv ENV production \u0026lt;/VirtualHost\u0026gt;  获取变量 \u0026lt;?php echo $_SERVER['ENV'];  好像在配置文件中也能使用该环境变量，具体方法待查。\n参考文章  使用Apache定义程序环境变量 Deployer — Deployment Tool for PHP ","date":"2017-04-26","permalink":"https://www.maoxuner.cn/post/2017/04/apache-system-environment-variables/","tags":["apache"],"title":"Apache运行时的系统环境变量设置"},{"content":"知乎上的一篇文字，51CTO整理的。觉得蛮有意思，就转过来了。\n终有一天我手中的编译器将成为我灵魂的一部分，这世界在我的眼中将被代码重构，我将看到山川无尽银河无垠都汇成二进制的数字河流，过往英雄都在我脑海眼前一一浮现，而我听到无数码农跪倒在我的程序面前呼喊。\n他们叫我代码之神。\n到那个时候，我想我一定可以找回你。\n一 这是一个属于代码的修真世界。\n这世界里的每一个人，每一个东西，包括高山大海，刀剑风云，其本质都是一串数字流。\n打个比方，如果你知道一块石头的内部数据结构，并且参透其中玄妙，你就能用程序改变它的一切。如果能参透自身这一个复杂的操作系统，就能重新编码自己，获得更大的能力。\n所以你的程序水平的高低，决定了你的牛逼程度。\n我们这些修真者，都叫程序员。\n有人的地方，就有江湖。有江湖的地方，就有代码。\n刚入门的时候，师傅跟我说，我们程序员修的，是一份境界。短短几句的代码里，要有最完美的逻辑，跟最精妙的算法。这本《算法导论》，你暂且拿去研修。\n我们程序员，外修语言，内修算法。以数据为根，算天算地算自己。\n听起来真的好酷。\n但这个江湖，并不平静。几大门派，上有微软谷歌，下至百度阿里，每个门派风格迥异，暗地里都有无数摩擦。\n师傅说，我们知乎派，理论见长。三大软狗、哦不，三大软神坐镇，还有无数默默搬砖的程序员，如今也算在乱世立稳了脚跟。\n师傅还说，江湖虽乱，但我们修真之人，说到底还是要修自身，恩恩怨怨都是过眼云烟，自身境界才是万源之本。\n我点了点头。\n师傅又拍了拍我的小脑瓜，慈祥一笑。他说，如果下次天涯派那群人还过来闹事，我们一定要秉承我们的自身理念来处理他们。\n我知道了，我回师傅道，我跟刘看山一定会好言相劝，么么他们个哒哒。\n不。师傅转身过来，鹰眼之中精光毕露，胡须颤动的嘴唇之中，一个字一个字地吐出来。\n灰飞烟灭，一个不留。\n二 自我开始修真起，我练的便是C++的功夫。\n虽然大师兄跟我说过，不管你学的事什么语言，都是殊途同归。我们修真之人，都不要在乎这些差别，要参透的是程序的本质。\n然后他又说，不过，用Java的都是傻逼。\n大师兄跟我一样，C++的功底深厚，面向对象的各种技能用的精通，只是可惜，他还没有对象。\n我永远忘不了那一天，我们知乎派的山门被一众凶恶之徒所踏破，山石飞舞，浮尘弥漫，门派服务器都暂停运行。\n大师兄坐在大殿房顶之上，喝一壶陈年的竹叶青。姿势潇洒，闷骚至极。\n是他们，谁都知道，天涯派不止一次来闹事。\n我从来没见过大师兄出过手。\n天涯派的来人，在烟尘之中现出数个魁梧身影，还夹带了一声大笑和开场白：\n哈哈哈哈哈哈哈，知乎派，hello world！\n大师兄的眼皮都没有眨一下。\n他的右手之上字符串环流浮现，左手抬起酒壶一饮而尽，右手对着虚空就是一指，那一串字符都消散在空气之中。\n刹那间风云突变，一阵狂风似有形一般，沿着大师兄所指方向似一条狂龙横冲了过去，一个照面便将几个大汉吹得撞出山门之外，摔了个七荤八素。\n那一霎我屏住呼吸。\n大师兄整了整风中凌乱的发型，说，这就叫快速傅里叶变换，将风压重新编码，所到之处，寸草不生。你们都还在解码自己，我已经开始操纵世界——天涯跟知乎，就是在这里的差距，懂？\n都他妈的给老子滚。\n从那一刻开始，我才知道，有些人已经可以编码这个世界本身。\n这才是叫修真。\n三 在知乎里修行了十年，师傅说我可以下山了。\n我已经熟知C++的基本技能，但师傅告诫我千万不要说自己精通C++。他说，这世界上，没有人可以说，他已经精通C++，所以即算你装逼的时候，也要装得像个样子。比如，你可以说你精通java。\n我点头称是。\n这十年来，我每日苦读《算法导论》和《C++ primer》，精通数据库原理跟操作系统，同龄人之中无人是我敌手，自认为天下哪里都可去得。\n是为年轻气盛，是为势不可挡。\n我下山之后，连连在江湖之中，将一些有一点点小名气的程序员斩于马下。\n他们之中，有些是根基不稳，有些是反应迟钝，有些是冥顽不灵，有些是莽撞愚蠢。\n当然，我现在说起来是云淡风轻，那是因为我在装逼。其实也经过了一番苦战，有过一些辛酸。终于有一天，我将天下程序员排行榜第一千位的马特给击败，成功登上天下程序员排行榜。\n马特这个程序员，有一些狡猾。他占据第一千位，已经很久没有变过。他精通计算机图形学，经常使用一些幻境击败对手。他比他上面几位更加难缠，所以通常没有人会去挑战他。因为你赢了他，也只能到第一千位，还不如去挑战他上面的更划算一些。\n可惜他遇到了我，因为我比他，更精通计算机图形学。\n于是这也成为一个不大不小的消息，在江湖里传播，从此我有了一个外号，他们叫我杀马特。\n俗话说树大招风，人不能太出名。\n有一天看到一个酒馆，我走进去，一个风情万种的女人转过来，她问我，客官，你要喝点什么嘛？\n我说，三两竹叶青。\n正当我在喝酒的时候，来了一群穿着黑衣的程序员。\n这群人，个个怪异，但水平很高。\n江湖之中，穿黑衣的程序员，都叫黑客。\n来者不善。\n他们将我围起来，为首的一人说，他们是做安全的。\n我心中陡然一惊。因为我看到了他们衣服里藏着的，三百六十度的环形刀刃。\n一百年前，有一个叫奇虎的门派。他们每个人，都有一把神秘的三百六十度的环形刀刃，所以也叫奇虎三六零。他们声称他们的存在，是为了防止世界被破坏，为了保护世界的和平，是为了贯彻爱与真实的勇敢，他们是穿梭在江湖中的三六零。但他们却暗中做了无数秘密勾当，后来江湖人人称之魔教，BAT三大派跟一些其他门派联手围上光明顶，将其灭门。\n当然，我们知乎派，也在之中出了不少的力量。\n我皱眉喝酒，问他们所为何事。\n那为首一人，拿过我的酒壶，仰头一灌。最后一滴酒在壶中滴落之时，无数环形刀刃在我身边出现，他的手中也倏地出现一把，朝我迎面砍来。 竟是偷袭。\n刀刃之上闪过的代码我毕生未见，锋利无比，威力惊人。\n我虽鼓动全身能量，瞬间编译，但也感觉凶多吉少。\n这电光火石一瞬间，只听得铛地一声，数把环形刀刃通通弹落一边，那些黑衣怪人通通倒地。\n我靠，我有这么强？\n只听得酒馆二楼悠悠传来一个女声。要打去别的地方打吧，进来酒钱都没付，还要打我的客人，这是何理？\n原来是酒馆的女老板。\n她从二楼飘飘而落，将我身边灰尘一扫而空，朱唇轻启，哎呀，吓到小哥你了，真是对不起。\n我以前听师傅说，对于程序员，只有两种东西是天敌。一种是御姐，一种是萝莉。我说我不信。\n我现在信了。\n四 女老板说，可以叫她结衣。\n她问我叫什么，我嘟哝了半天，我说我叫杀马特。\n结衣说哈哈哈哈哈哈哈你真可爱。\n我说结衣，你怎么会这么强。\n她说你不懂，我一个弱女子，不懂点编程之术，在这江湖里怎么开酒馆嘛。\n我说结衣，你怎么这么好看。\n结衣不说话了。\n结衣说，你这个小流氓。\n我说结衣，师傅说，我们程序员只有两种天敌，一叫御姐，二是萝莉，你是哪一种？\n结衣说，我都不是。\n我说，哦。其实我心里想着的，是你都是。\n结衣，你跟我一起闯荡江湖去好不好？\n不好，你还没我强。\n哦。那等我比你强了，我们一起去闯荡江湖好不好？\n结衣笑了一下说，不好。\n于是我就住在了酒馆里。\n因为我可能，爱上了这个女人。\n我杀马特曾经以为，我这一辈子就只能爱上一个女人。后来我才知道，这世间有万千代码，万物都可编译，但你编译不了的，是自己的心。\n结衣是一个看上去很好强，八面玲珑的女人。她的编程水平，比那些排行榜上五百位之后的怂蛋，不知道高到哪里去了，但是她却在这里经营一个小酒馆。\n我曾经问过为什么，但是结衣不说。\n她只说她在等人。\n我想问她是不是在等她的意中人，但是又不好意思开口。我怕是的，那我可能要伤心。师傅说修真的程序员，不能伤心。伤心的程序员，写不出好的代码。\n所以我也只能等。\n终于等到有一天，那天酒馆外面都是黑漆漆的云，空气里都是紧张的、像墨水混合了砂子一样的味道。可能有沙尘暴。\n结衣一脸严肃。\n我说结衣，咱们把门关上避一避。\n结衣一言不发，站在门口，看向远方。\n过了一阵，远处黑云之中，竟然出现一个人影。霎时间，雷光闪动，暴雨如注。\n结衣看了我一眼，转身腾空就飞了出去。朝着远处的黑云人影，鼓动着浑身能量，就这么飞了出去。\n我大喊一声结衣，然后也跑了出去。雨越下越大，我只能隐隐看见远处电闪雷鸣，我在混乱之中大喊结衣。\n他们在交战。\n远处代码一行行在云端飞舞盘旋，命令与字节化为巨大的力量，我没有想到结衣竟然强到这个地步。\n举手投足，山河变色。\n我想起大师兄所说的，有人还在解码自身，有人已经操纵世界。\n是一场恶战。\n我只能站在下面看，我甚至都不知道他们交战的具体情况。\n我心急如焚。\n在一个天际的惊雷响彻之后，一道正弦函数冲击波将所有黑云弹射开来，而我只看到结衣在空中坠落的身影。\n拨云见日，阳光普照。\n在很多年之后，当我再回想起这个情形，还是觉得，即算是临死之时的结衣，在空中的身影，也那么美好。\n我抱着结衣，泣不成声。\n她看着我，怔怔的看着我。\n她说你别哭，真的，这是注定的一天。\n她说我们家以前侵入国防系统，被朝廷发现灭门，我侥幸逃脱。但是不管我在哪里，总有一天他们会找上来。\n她说你是男孩子，要坚强一点。不坚强一点，你怎么成为最好的程序员。\n结衣在那几分钟里，好像想把她一生没讲完的话，都给讲完。\n她说的最后一句话是，杀马特，你一定不要忘了我。\n然后她就再也没有说话了。\n我甚至都没有问过她说，你有心上人吗？\n我甚至都没有跟她说过，我是真的很喜欢你。\n我甚至都没有吻过她，没有牵过她的手，我们只是这样匆匆遇到，然后匆匆告别。\n她的身体将化成一串数字流，失去结构，流向无尽的原野、河流跟大地，化为三月的春风、杨柳跟雨滴。\n有些东西，是命。\n我的整个程序员修真生涯，在这一天，被分割开来。\n对，我杀马特，在这一天之后，是一个一定要成为天下第一的程序员。\n为了结衣。\n五 并非是单单想给结衣报仇。\n我们程序员的修真之路，内修自己，外修天地。\n当代码可以操控天地这个最为复杂的系统之时，就一定会涉及到世界的本源之处。若这个世界的代码在我眼前一览无遗，或许我可以控制时间。\n或许我可以从时间的bug里，找回结衣。\n这是我这么多年来的，唯一念想。\n毕竟我们程序员，生来就要逆天改命。\n之后的时间里，我从程序员排行榜上一路飙升，五年之后跻身前十，成为世界上最优秀的程序员之一。\n我树敌无数，也击败无数敌人。他们之中，甚至有自创一门语言的奇才，有号称已然精通C++的装逼犯，有对各类操作系统跟编译原理都熟悉无比的怪才，但是，不管谁，都无法阻挡我杀马特的脚步。\n无人可挡。生来彷徨。\n但，即算是到了我这样的水准，我也依旧无法知道，如何寻找这个世界里时间的bug，甚至都没有一丝头绪。\n每逢debug的夜晚，我都会想起结衣，明媚如歌的笑容，和她从天而落，如佛光普照般的美丽。\n但这又时时提醒了我，我可能真的已经离她远去了，而我无能为力。\n这世间我认识的高手，都无法为我解答这个问题。\n直到有一天，我在山间遇到一个红衣人。\n他是个高手，从看到他码出第一行代码的时候，我就知道，这是个绝顶高手。\n山野相逢，抛却了身份。我跟他把酒言欢，知无不谈，倒也痛快。\n直到我跟他说起关于这世界里，时间的bug。\n他说，这世界极有可能是在一个环形循环之中。说罢他从怀里掏出一把刀，却正是奇虎派的那把三百六十度环形刀刃。\n他说你看这把刀，我派毕生所愿，即是参透这世界的圆之循环，重新编码，到时候天下唾手可得。\n我说，我不想要什么天下，我只要一个女人。\n红衣人哈哈大笑，说，那你加入我们，来我奇虎参透这世界运行之时最底层的命令，参透这循环，说不定你就能重新遇到那个女人。\n对，我没有犹豫，我答应了。\n他说，他叫周红衣。\n六 我就这么加入了奇虎三六零。\n彼时奇虎正在重整旗鼓，周红衣想要东山再起，他不能少了我这个助力。\n从此我手里多了一把，三百六十度的，环形刀刃。\n萧萧狼烟，江湖恩怨再起。\n人在江湖，真的身不由己。\n我一边参悟奇虎派祖传的代码跟算法，一边帮奇虎派征战天下。\n我是知乎派出身，根正苗红，师傅知我落入魔教之手，吐出一口老血。孽徒，孽徒啊。他们也曾劝降，但我不为所动。\n我心中，有我自己的编程之道。\n所以我很清楚自己在干什么。我很清楚，男孩子，要坚强。\n奇虎的势力扩张得很快，但正邪势不两立，BAT三大派见天下形势如此，便要集结程序员部队，重新再上一次光明顶。\n他们说，一百年前能灭的，现在也能灭。\n光明顶，是我奇虎派的大本营。\n而他们带队之人，正是当今天下排行第一的程序员，出身知乎、神龙见首不见尾的大师兄。\n大师兄，真的好久不见。\n说实话，虽从一开始，我便知道自己背负的是什么，但我也并未想过，有一天要跟大师兄动手。也许在成为男人的路上，杀死偶像，都是不可避免的一环。\n大师兄还是酒壶一把，桀骜不驯。他说傻小子，你现在过来，还真的来得及。\n我说大师兄，皇皇天下，哪有什么正邪分家。无非是你来我往，你抢我杀。咱们做程序员的都知道，手底下见真章。\n大师兄喝酒，哈哈大笑，他说你有长进，然后把酒壶朝天一扔。\nTalk is cheap，show me the code。\n七 与大师兄交战之前，我正参悟到这个世界代码的一些关键之处。\n如今一战，倒是针尖对麦芒。大师兄的编程能力，已然步入化境。代码不在手上，已在心中。物质都是数据，规则都是代码，一时间天地轰隆，流云沐风皆能当锋利兵器，重力气压都能做任意改变，我跟大师兄从天到地，战了个平分秋色。\n大师兄说，没想到你小子这么难缠。\n大师兄说，对不起，我必须解决掉你。\n为了正义。\n我从没见他说过对不起，这正如他一定会放一个前所未见的大招一样可怕。\n大师兄操纵无数代码，打入大地之中，蓦地瞬间，我感觉脚底重力似乎加大了无数倍。\n好沉。\n好一个无限重力流。\n我们这边的程序员，要么被强大重力挤压变形，最舒服的也寸步不能动弹。\n大师兄竟然还没有结束，他接着操纵无数代码，打入遥远天空之中，竟从无垠星海之中召来巨大陨石。\n陨石当空，重力无限。\n这两者相结合，他竟凭他一人之力，要横扫整个奇虎。\n不愧是天下第一的旷世奇才。我承认，面对这样的攻势，我并没有什么好的办法。\n但我也不后悔。\n既然踏上这条路，我就没有打算过回头。\n陨石从我头上落下之时，生死交错的瞬间，我仿佛又看到结衣的脸，像电影一般飞驰而过的场面。\n我突然领悟到些什么。\n我在那一瞬也打出无数代码，我打出的代码，跟大师兄的，一模一样。\n复制代码，通常比较容易。\n我脚下重力瞬间又加大无数倍，其他的程序员早已不堪重负，化为一摊数据流。而那个陨石速度越来越快，擦出巨大的热浪火花，空间都变形扭曲，周围一切化为粉末，消散无形。\n我以为那个瞬间我已经死了。\n而我在那一个瞬间，看到了在弯曲变形的前方，有一个时空的奇点。\n时间是一个圆。\n我靠近它，向死而生。\n前方白光一片。\n八 我睁开眼。\n眼前是那个熟悉的酒馆。\n我走进去，一个风情万种的女人转过来。\n她问我，客官，你要喝点什么嘛？\n完。\n","date":"2017-04-08","permalink":"https://www.maoxuner.cn/post/2017/04/programer-novel/","tags":null,"title":"程序员修真小说"},{"content":"主要针对 Apache2+PHP7.0+MariaDB\n安装 sudo apt-get install apache2 mariadb-server php7.0 php7.0-mysql libapache2-mod-php7.0 sudo apt-get install php7.0-curl php7.0-mbstring php7.0-xml php7.0-bz2 php7.0-zip     组件名称 作用     php7.0-curl curl操作   php7.0-mbstring 字符操作？   php7.0-xml dom操作   php7.0-bz2 bzip2解压   php7.0-zip zip解压    常见问题 综合问题  Apache2 忽略路径大小写 解决方法\n 启用模块speling sudo a2enmod speling   在配置文件中加入 CheckSpelling on   重启服务器 sudo service apache2 restart    参考文章\n linux apache支持路径不区分大小写 CentOS系统apache路径不区分大小写解决办法   PHP PHP运行报错   PHP Warning: PHP Startup: Unable to load dynamic library \u0026lsquo;/usr/lib/php5/20121212/pdo_mysql.so\u0026rsquo; PHP7也会出现相同的问题，解决方法也类似，更换包名即可。\nPHP Warning: PHP Startup: Unable to load dynamic library '/usr/lib/php5/20121212/pdo_mysql.so' - /usr/lib/php5/20121212/pdo_mysql.so: undefined symbol: pdo_parse_params in Unknown on line 0  解决方法\n 卸载php5-common包，然后重新安装需要的php组件。卸载时注意卸载掉了哪些包。 sudo apt-get purge php5-common   重新安装php组件 sudo apt-get install php5 php5-curl php5-mysql libapache2-mod-php5    参考文章\n pdo_mysql.so: undefined symbol: pdo_parse_params in Unknown on line 0 Debian: pdo_mysql.so: undefined symbol: pdo_parse_params in Unknown on line 0     MySQL/MariaDB root空密码登录 控制台中能登录，phpmyadmin，adminer中提示空密码\n解决方法 控制台登录mysql，并修改root用户的认证方式。\n 登录mysql sudo mysql -uroot MariaDB [(none)]\u0026gt; SELECT user,host,plugin FROM mysql.user; +------+-----------+-----------------------+ | user | host | plugin | +------+-----------+-----------------------+ | root | localhost | unix_socket | | admin | localhost | | | user | localhost | mysql_native_password | +------+-----------+-----------------------+ 3 rows in set (0.00 sec)   把plugin的值修改成mysql_native_password。 UPDATE mysql.user SET plugin='mysql_native_password' WHERE user='root'; FLUSH PRIVILEGES;   重启服务器 sudo service mysql restart   创建用户并授予权限 CREATE USER 'admin'@'localhost' IDENTIFIED BY '123456'; REVOKE ALL PRIVILEGES ON *.* FROM 'admin'@'localhost'; GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' REQUIRE NONE WITH GRANT OPTION MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;    参考文章\n MySQL ERROR 1698 (28000) 错误  创建用户并给予权限 创建一个用户，并给与之同名或者以其名称作为前缀的数据库的所有权限。\nCREATE USER 'user'@'localhost' IDENTIFIED WITH mysql_native_password; GRANT USAGE ON *.* TO 'user'@'localhost' REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0; SET PASSWORD FOR 'user'@'localhost' = '***'; CREATE DATABASE IF NOT EXISTS `user`; GRANT ALL PRIVILEGES ON `user`.* TO 'user'@'localhost'; GRANT ALL PRIVILEGES ON `user\\_%`.* TO 'user'@'localhost'; ","date":"2017-04-06","permalink":"https://www.maoxuner.cn/post/2017/04/lnmpa/","tags":["apache","nginx","php","mysql","mariadb"],"title":"LNMPA专题"},{"content":"搜集了几个有趣（逗比）的注释，写出这些注释的程序猿一定是大神（二逼）。\n神兽护体 ━━━━━━神兽出没━━━━━━ ┏┓ ┏┓ ┏━━┛┻━━━━━┛┻━━┓ ┃ ┃ ┃ ━ ┃ ┃ ┳┛ ┗┳ ┃ ┃ ┃ ┃ ┻ ┃ ┃ ┃ ┗━━┓ ┏━━┛ ┃ ┃ 神兽保佑 ┃ ┃ 代码无BUG！ ┃ ┗━━━━━━┓ ┃ ┣┓ ┃ ┏┛ ┗━━┓┓┏━━━━┳┓┏━━┛ ┃┫┫ ┃┫┫ ┗┻┛ ┗┻┛ ━━━━━━感觉萌萌哒━━━━━━ ┏┓ ┏┓ ┏━━┛┻━━━━━━━┛┻━━┓ ┃ ┃ ┃ ━ ┃ ┃ ＞ ＜ ┃ ┃ ┃ ┃ ... ⌒ ... ┃ ┃ ┃ ┗━━━┓ ┏━━━┛ ┃ ┃ Code is far away from bug with the animal protecting ┃ ┃ 神兽保佑,代码无bug ┃ ┃ ┃ ┃ ┃ ┃ ┃ ┃ ┃ ┗━━━━━━┓ ┃ ┣┓ ┃ ┏┛ ┗━━┓┓┏━━━━┳┓┏━━┛ ┃┫┫ ┃┫┫ ┗┻┛ ┗┻┛ ━━━━━━扮库耍帅━━━━━━ ┏┓ ┏┓ ┏━━┛┻━━━━━━━┛┻━━┓ ┃ ┃ ┃ ━ ┃ ████━████ ┃ ┃ ┃ ┃ ┻ ┃ ┃ ┃ ┗━━━┓ ┏━━━┛ ┃ ┃ Code is far away from bug with the animal protecting ┃ ┃ 神兽保佑,代码无bug ┃ ┃ ┃ ┃ ┃ ┃ ┃ ┃ ┃ ┗━━━━━━┓ ┃ ┣┓ ┃ ┏┛ ┗━━┓┓┏━━━━┳┓┏━━┛ ┃┫┫ ┃┫┫ ┗┻┛ ┗┻┛  老鼠  .--, .--, ( ( \\.---./ ) ) '.__/o o\\__.' {= ^ =} \u0026gt; - \u0026lt; / \\ // \\\\ //| . |\\\\ \u0026quot;'\\ /'\u0026quot;_.-~^`'-. \\ _ /--' ` ___)( )(___ (((__) (__))) 高山仰止，景行行止。虽不能至，心向往之。  狗  :: :;J7, :, ::;7: ,ivYi, , ;LLLFS: :iv7Yi :7ri;j5PL ,:ivYLvr ,ivrrirrY2X, :;r@Wwz.7r: :ivu@kexianli. :iL7::,:::iiirii:ii;::::,,irvF7rvvLujL7ur ri::,:,::i:iiiiiii:i:irrv177JX7rYXqZEkvv17 ;i:, , ::::iirrririi:i:::iiir2XXvii;L8OGJr71i :,, ,,: ,::ir@mingyi.irii:i:::j1jri7ZBOS7ivv, ,::, ::rv77iiiriii:iii:i::,rvLq@huhao.Li ,, ,, ,:ir7ir::,:::i;ir:::i:i::rSGGYri712: ::: ,v7r:: ::rrv77:, ,, ,:i7rrii:::::, ir7ri7Lri , 2OBBOi,iiir;r:: ,irriiii::,, ,iv7Luur: ,, i78MBBi,:,:::,:, :7FSL: ,iriii:::i::,,:rLqXv:: : iuMMP: :,:::,:ii;2GY7OBB0viiii:i:iii:i:::iJqL;:: , ::::i ,,,,, ::LuBBu BBBBBErii:i:i:i:i:i:i:r77ii , : , ,,:::rruBZ1MBBqi, :,,,:::,::::::iiriri: , ,,,,::::i: @arqiao. ,:,, ,:::ii;i7: :, rjujLYLi ,,:::::,:::::::::,, ,:i,:,,,,,::i:iii :: BBBBBBBBB0, ,,::: , ,:::::: , ,,,, ,,::::::: i, , ,8BMMBBBBBBi ,,:,, ,,, , , , , , :,::ii::i:: : iZMOMOMBBM2::::::::::,,,, ,,,,,,:,,,::::i:irr:i:::, i ,,:;u0MBMOG1L:::i:::::: ,,,::, ,,, ::::::i:i:iirii:i:i: : ,iuUuuXUkFu7i:iii:i:::, :,:,: ::::::::i:i:::::iirr7iiri:: : :rk@Yizero.i:::::, ,:ii:::::::i:::::i::,::::iirrriiiri::, : 5BMBBBBBBSr:,::rv2kuii:::iii::,:i:,, , ,,:,:i@petermu., , :r50EZ8MBBBBGOBBBZP7::::i::,:::::,: :,:,::i;rrririiii:: :jujYY7LS0ujJL7r::,::i::,::::::::::::::iirirrrrrrr:ii: ,: :@kevensun.:,:,,,::::i:i:::::,,::::::iir;ii;7v77;ii;i, ,,, ,,:,::::::i:iiiii:i::::,, ::::iiiir@xingjief.r;7:i, , , ,,,:,,::::::::iiiiiiiiii:,:,:::::::::iiir;ri7vL77rrirri:: :,, , ::::::::i:::i:::i:i::,,,,,:,::i:i:::iir;@Secbone.ii:::  驴 __ (__`\\ (__`\\ \\\\`\\ `\\\\`\\ \\\\ \\ `\\\\`\\ \\\\ \\ `\\\\`\\#\\\\ \\# \\_ ##\\_ |## (___)(___)## (0) (0)`\\## |~ ~ , \\## | | \\## | /\\ \\## __..---'''''-.._.._ | | \\ `\\## _.--' _ `. Y | \\ `##' \\`\\ \\ / | \\ | `\\ \\ /_...___| \\ | `\\\\ / `. | / ## | | | / #### | | | / #### | () () | \\ | | _.-' ## `. .' `._. |______..| |-'| `------' | | | | | || | | | | | | || | | | | | | || | | | | | | || | Joan Stark _____ | | | |____| || | / `` |-`/ ` |` | \\________\\__\\_______\\__\\ \u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot; \u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;'\u0026quot;\u0026quot;\u0026quot;  骷髅 .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-. | ______ | | .-\u0026quot; \u0026quot;-. | | / \\ | | _ | | _ | | ( \\ |, .-. .-. ,| / ) | | \u0026gt; \u0026quot;=._ | )(__/ \\__)( | _.=\u0026quot; \u0026lt; | | (_/\u0026quot;=._\u0026quot;=._ |/ /\\ \\| _.=\u0026quot;_.=\u0026quot;\\_) | | \u0026quot;=._\u0026quot;(_ ^^ _)\u0026quot;_.=\u0026quot; | | \u0026quot;=\\__|IIIIII|__/=\u0026quot; | | _.=\u0026quot;| \\IIIIII/ |\u0026quot;=._ | | _ _.=\u0026quot;_.=\u0026quot;\\ /\u0026quot;=._\u0026quot;=._ _ | | ( \\_.=\u0026quot;_.=\u0026quot; `--------` \u0026quot;=._\u0026quot;=._/ ) | | \u0026gt; _.=\u0026quot; \u0026quot;=._ \u0026lt; | | (_/ \\_) | | | '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=' LASCIATE OGNI SPERANZA, VOI CH'ENTRATE  键盘 ┌───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐ │Esc│ │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│ ┌┐ ┌┐ ┌┐ └───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘ └┘ └┘ └┘ ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐ │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│\u0026amp; 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │ ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤ │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \\ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │ │ ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │ │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│\u0026quot; '│ Enter │ │ 4 │ 5 │ 6 │ │ ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤ ┌───┐ ├───┼───┼───┼───┤ │ Shift │ Z │ X │ C │ V │ B │ N │ M │\u0026lt; ,│\u0026gt; .│? /│ Shift │ │ ↑ │ │ 1 │ 2 │ 3 │ │ ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││ │ Ctrl│ │Alt │ Space │ Alt│ │ │Ctrl│ │ ← │ ↓ │ → │ │ 0 │ . │←─┘│ └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘  佛祖保佑  _ooOoo_ o8888888o 88\u0026quot; . \u0026quot;88 (| -_- |) O\\ = /O ____/`---'\\____ .' \\\\| |// `. / \\\\||| : |||// \\ / _||||| -:- |||||- \\ | | \\\\\\ - /// | | | \\_| ''\\---/'' |_/ | \\ .-\\__ `-` ___/-. / ___`. .' /--.--\\ `. .'___ .\u0026quot;\u0026quot; '\u0026lt; `.___\\_\u0026lt;|\u0026gt;_/___.' \u0026gt;' \u0026quot;\u0026quot;. | | : `- \\`.;`\\ _ /`;.`/ - ` : | | \\ \\ `-. \\_ __\\ /__ _/ .-` / / ======`-.____`-.___\\_____/___.-`____.-'====== `=---=' ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 佛祖保佑 永无BUG 佛曰: 写字楼里写字间，写字间里程序员； 程序人员写程序，又拿程序换酒钱。 酒醒只在网上坐，酒醉还来网下眠； 酒醉酒醒日复日，网上网下年复年。 但愿老死电脑间，不愿鞠躬老板前； 奔驰宝马贵者趣，公交自行程序员。 别人笑我忒疯癫，我笑自己命太贱； 不见满街漂亮妹，哪个归得程序员？  程序员之歌  江城子 · 程序员之歌 十年生死两茫茫，写程序，到天亮。 千行代码，Bug何处藏。 纵使上线又怎样，朝令改，夕断肠。 领导每天新想法，天天改，日日忙。 相顾无言，惟有泪千行。 每晚灯火阑珊处，夜难寐，加班狂。 ","date":"2017-04-04","permalink":"https://www.maoxuner.cn/post/2017/04/funny-comments/","tags":null,"title":"有趣的注释"},{"content":"在写一个通用的通知类时，遇到了问题，特此查看一下抽象类跟接口的异同点。\n示例 interface a { function run(); } interface b { const HELLO = \u0026quot;b: Hello, World!\\n\u0026quot;; static function hello(); } interface c extends a,b { public function info($str); } abstract class d implements c { public $hello = \u0026quot;d: hello, world!\\n\u0026quot;; public function run(){ echo \u0026quot;d: run()\\n\u0026quot;; self::hello(); } static function hello(){ echo \u0026quot;d: hello()\\n\u0026quot;; echo self::HELLO; } abstract function info($str); } abstract class e extends d { protected $info = \u0026quot;e: info\\n\u0026quot;; private $msg; private function setMsg($msg){ echo \u0026quot;e: setMsg()\\n\u0026quot;; $this-\u0026gt;msg = $msg; } protected function getMsg(){ echo \u0026quot;e: getMsg()\\n\u0026quot;; if(is_null($this-\u0026gt;msg)) $this-\u0026gt;setMsg(\u0026quot;e: msg\\n\u0026quot;); return $this-\u0026gt;msg; } public function dumpMsg(){ echo \u0026quot;e: dumpMsg()\\n\u0026quot;; return $this-\u0026gt;getMsg(); } public function info($str){ echo \u0026quot;e: info\\n\u0026quot;; echo $this-\u0026gt;getMsg(), $this-\u0026gt;msg($str); } abstract function msg($str); } class m extends e { public $msg = \u0026quot;m: msg\\n\u0026quot;; public function msg($str){ echo \u0026quot;m: msg()\\n\u0026quot;; echo $this-\u0026gt;msg; return str_replace(\u0026quot;\\n\u0026quot;, ', ', $this-\u0026gt;info . $this-\u0026gt;getMsg() . $str) . \u0026quot;\\n\u0026quot;; } } class n extends m { public function run(){ echo \u0026quot;n: run()\\n\u0026quot;; parent::run(); echo $this-\u0026gt;hello; } public function show(){ echo \u0026quot;n: show()\\n\u0026quot;; $this-\u0026gt;info('maoxuner'); $this-\u0026gt;msg('nono'); echo $this-\u0026gt;msg; echo $this-\u0026gt;dumpMsg(); } } $obj = new n(); $obj-\u0026gt;run(); echo \u0026quot;\\n\u0026quot;; $obj-\u0026gt;show();  异同 只要有一个方法为抽象方法，则这个类就是抽象类，抽象类是介于接口和类之间的特殊存在，是个“半成品”，不能实例化。\n同\n 接口中的方法和抽象类中的抽象方法都要重写 重写的方法可访问权限不能变  异\n 接口  没有函数体 没有成员变量 所有方法都必须可访问 可继承多个接口   抽象类  抽象方法没有函数体 有成员变量 可以有受保护或者私有的属性和方法 可实现多个接口或者继承一个类    参考文章  PHP的抽象类和接口 php抽象类和接口 ","date":"2017-03-31","permalink":"https://www.maoxuner.cn/post/2017/03/php-abstract-interface/","tags":["php"],"title":"php抽象类和接口"},{"content":"Yii2使用SwiftMailer（作为组件）\n把SwiftMailer添加到yii的组件中去（配置文件中的components）。然后就按照SwiftMailer各种方法就能使用了。\n组件配置 部分配置内容如下\nreturn [ 'components' =\u0026gt; [ 'mailer' =\u0026gt; [ 'class' =\u0026gt; 'yii\\swiftmailer\\Mailer', 'viewPath' =\u0026gt; '@common/mail', 'useFileTransport' =\u0026gt; false, //这里一定要改成false，不然邮件不会发送 'transport' =\u0026gt; [ 'class' =\u0026gt; 'Swift_SmtpTransport', 'host' =\u0026gt; $mailer_config['host'], 'username' =\u0026gt; 'user@domain.com', 'password' =\u0026gt; 'password', 'port' =\u0026gt; '25', // 'encryption' =\u0026gt; 'tls', ], 'messageConfig' =\u0026gt; [ 'charset' =\u0026gt; 'UTF-8', 'from' =\u0026gt; 'user@domain.com', ], ], ], ];  使用示例 $mail = Yii::$app-\u0026gt;mailer-\u0026gt;compose(); // 设置邮件参数 $mail-\u0026gt;setTo('receiver@domain.com') // -\u0026gt;setFrom('user@domain.com', '发件人名称') -\u0026gt;setSubject('邮件主题') // -\u0026gt;setTextBody('纯文本') // 发布纯文字文本 -\u0026gt;setHtmlBody('\u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;'); //发布可以带html标签的文本 -\u0026gt;send(); // 发送  参考文章  yii2 邮件发送 [ 2.0 版本 ] YII2 邮件发送 YII2邮件配置，网上方法不凑效！ yii2利用swiftmailer发送邮件 ","date":"2017-03-31","permalink":"https://www.maoxuner.cn/post/2017/03/yii2-mail/","tags":["yii2","php"],"title":"yii2使用邮件组件"},{"content":"CodeIgniter3中是没有使用命名空间的，但是不代表它就不能使用命名空间。根本上讲，命名空间是php的一项功能，从php5.3.0开始就支持了这一功能。CodeIgniter只是没有实现根据命名空间来实现类库的自动加载，但是可以通过第三方类库如composer来实现其他类库的自动加载。\n安装composer 这里只简单介绍一下windows下通过composer安装程序安装。也许以后会写一篇文章来总结composer的安装和使用 下载Composer-Setup.exe，然后按照提示一步步的安装就行了。可参考Download Composer 检测composer是否已经安装成功：新建一个命令行窗口，然后执行命令composer -V，如果能正确输出composer的版本，那就说明安装成功了。\n在CodeIgniter中启用composer自动加载器 CodeIgniter安装配置是按照CI官方文档的安装说明配置的，且没有进行个性化设置，即没有设置$system_path、 $application_folder和$view_folder。\n用composer安装依赖 在命令行中切换到CI的根目录，即composer.json所在的目录，执行命令composer install。执行完成后，会出现vendor目录，vendor目录下有文件autoload.php。\n修改composer配置文件 修改文件application/config/config.php中的配置项$config['composer_autoload']。修改它的值为上述autoload.php的路径（相对于index.php的路径），例如：\n$config['composer_autoload'] = 'vendor/autoload.php';  测试composer自动加载器  在CI根目录执行命令composer require smarty/smarty。Smarty是个php的模板引擎，这里仅用作测试。 修改文件application/controllers/Welcome.php，修改index方法如下：  public function index(){ $smarty = new Smarty(); var_dump($smarty); }  如果没有提示找不到类Smarty，并且能正常输出$smarty的值（不是NULL）时，说明自动加载器已经正确启用了。\n自定义带有命名空间的类 创建Base类 在application/controllers目录中创建文件Base.php。这是个自定义类，用来扩展CI_Controllers的类。顶级命名空间为app\\，它对应的目录为application/。于是命名空间app\\controlles\\对应目录application/controllers/。（这应该是符合PSR-4的吧）内容如下\n\u0026lt;?php namespace app\\controllers; use CI_Controller; defined('BASEPATH') OR exit('No direct script access allowed'); class Base extends CI_Controller{ public function index(){ echo 'This is a msg from class Base.'; } }  创建Demo类 在application/controllers目录中创建文件Demo.php。这个类用来作为CI中的控制器，要在浏览器中访问，因此不能给它设置命名空间，即不不能包含namaspace语句。其内容如下\n\u0026lt;?php use app\\controllers\\Base; class Demo extends Base{ }  在composer配置文件中加入命名空间的配置 修改CI根目录中的composer.json。\n 为方便对比，防止改错，假设修改前的文件内容为  { \u0026quot;description\u0026quot;: \u0026quot;The CodeIgniter framework\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;codeigniter/framework\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;project\u0026quot;, \u0026quot;homepage\u0026quot;: \u0026quot;https://codeigniter.com\u0026quot;, \u0026quot;license\u0026quot;: \u0026quot;MIT\u0026quot;, \u0026quot;support\u0026quot;: { \u0026quot;forum\u0026quot;: \u0026quot;http://forum.codeigniter.com/\u0026quot;, \u0026quot;wiki\u0026quot;: \u0026quot;https://github.com/bcit-ci/CodeIgniter/wiki\u0026quot;, \u0026quot;irc\u0026quot;: \u0026quot;irc://irc.freenode.net/codeigniter\u0026quot;, \u0026quot;source\u0026quot;: \u0026quot;https://github.com/bcit-ci/CodeIgniter\u0026quot; }, \u0026quot;require\u0026quot;: { \u0026quot;php\u0026quot;: \u0026quot;\u0026gt;=5.2.4\u0026quot;, \u0026quot;smarty/smarty\u0026quot;: \u0026quot;^3.1\u0026quot; }, \u0026quot;suggest\u0026quot;: { \u0026quot;paragonie/random_compat\u0026quot;: \u0026quot;Provides better randomness in PHP 5.x\u0026quot; }, \u0026quot;require-dev\u0026quot;: { \u0026quot;mikey179/vfsStream\u0026quot;: \u0026quot;1.1.*\u0026quot;, \u0026quot;phpunit/phpunit\u0026quot;: \u0026quot;4.* || 5.*\u0026quot; } }  修改后的文件内容（注意在前一项末尾加个英文逗号）  { \u0026quot;description\u0026quot;: \u0026quot;The CodeIgniter framework\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;codeigniter/framework\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;project\u0026quot;, \u0026quot;homepage\u0026quot;: \u0026quot;https://codeigniter.com\u0026quot;, \u0026quot;license\u0026quot;: \u0026quot;MIT\u0026quot;, \u0026quot;support\u0026quot;: { \u0026quot;forum\u0026quot;: \u0026quot;http://forum.codeigniter.com/\u0026quot;, \u0026quot;wiki\u0026quot;: \u0026quot;https://github.com/bcit-ci/CodeIgniter/wiki\u0026quot;, \u0026quot;irc\u0026quot;: \u0026quot;irc://irc.freenode.net/codeigniter\u0026quot;, \u0026quot;source\u0026quot;: \u0026quot;https://github.com/bcit-ci/CodeIgniter\u0026quot; }, \u0026quot;require\u0026quot;: { \u0026quot;php\u0026quot;: \u0026quot;\u0026gt;=5.2.4\u0026quot;, \u0026quot;smarty/smarty\u0026quot;: \u0026quot;^3.1\u0026quot; }, \u0026quot;suggest\u0026quot;: { \u0026quot;paragonie/random_compat\u0026quot;: \u0026quot;Provides better randomness in PHP 5.x\u0026quot; }, \u0026quot;require-dev\u0026quot;: { \u0026quot;mikey179/vfsStream\u0026quot;: \u0026quot;1.1.*\u0026quot;, \u0026quot;phpunit/phpunit\u0026quot;: \u0026quot;4.* || 5.*\u0026quot; }, \u0026quot;autoload\u0026quot;: { \u0026quot;psr-4\u0026quot;: { \u0026quot;app\\\\\u0026quot;: \u0026quot;application/\u0026quot; } } }  解释配置项autoload  \u0026quot;autoload\u0026quot;: { \u0026quot;psr-4\u0026quot;: { \u0026quot;app\\\\\u0026quot;: \u0026quot;application/\u0026quot; } }   键名为顶级命名空间app\\。这里使用app\\\\，第一个\\是转义符 键值为命名空间对应的目录application/  更新composer 在CI根目录执行命令composer update\n测试 浏览器访问index.php/demo，如果正常显示This is a msg from class Base.则说明配置成功。\n参考文章  自动加载资源 CodeIgniter可以使用命名空间么 命名空间概述 ","date":"2017-03-24","permalink":"https://www.maoxuner.cn/post/2017/03/ci3-composer/","tags":["php","codeigniter","composer"],"title":"CodeIgniter3利用composer实现命名空间类的自动加载"},{"content":"昨天给一台新电脑，联想H3060安装win7系统。安装完成后，在语言设置界面usb键盘鼠标都失去反应了，更换其他usb口也不能识别。这直接原因就是没有usb驱动。此时，电脑已经算作是完全失控的状态。此时，只有三个解决方案：\n 使用PS/2接口的键盘鼠标 重新安装额外添加了usb驱动的系统 在BIOS中开启USB Virtual KBC Support  根本原因 经过一番研究，总算找到了根本原因。装机的这台电脑，CPU为i5-6400，是Skylake架构，2015年9月推出。英特尔Skylake这代芯片组（100系列）把EHCI主控替换成了XHCI主控。win8和win10自带XHCI主控的驱动，而较老的win7（最后一个中文系统镜像2011年释出）就没有这个驱动了。\n解决方案 使用PS/2接口的键盘鼠标 这是个最简单，但是最不靠谱的解决方案。PS/2接口的键鼠已经很少了，即使有这样的键鼠，主机上也不一定有这个接口了。或许有些人都没有见过这个接口的，圆形的：鼠标常常是绿色的接口，键盘是紫色的接口。（这里从淘宝上盗了两张图来说明接口的样式）\n如果刚好符合这样的条件，那就可以装完USB驱动，再把键鼠换回来就好了。\n安装添加了XHCI驱动的系统 这是个最根本最直接的解决方案。但是这个太麻烦了点，添加驱动有难度，安装系统也有难度。可参考文末的链接。我这是刚好第三个解决方案可以使用。\n开启USB Virtual KBC Support 本来已经打算使用上一个方案来解决问题了，无奈是远程教同事安装系统，难度太大了。百度了一下，看到这个页面联想h3060装完win7系统usb认不到，虽然没有解决我的问题，但至少有了点启发。 在BIOS \u0026gt;\u0026gt; Devices \u0026gt;\u0026gt; USB配置项中找了找，似乎没发现啥相关设置。保险起见，把USB Virtual KBC Support配置项百度了一下，结果喜出望外。 USB Virtual KBC Support全称大概是“支持USB虚拟PS2”，而且找到几篇关于这个配置项解决win7不能识别usb的文章。于是把USB Virtual KBC Support这一项设置成了Enabled，重启电脑，完美解决问题。\n题外话\n这个方法在我看来是最简单的解决方案了，然而局限性也很明显。USB Virtual KBC Support是BIOS中的一个选项，其他主板的BIOS中也许并没有这一项。据说，该选项存在于大多数商用台式机中。另，联想H3060进入BIOS的方法：开机按F12，然后选择Enter Setup。按照台式机的通常设置，恰当时间按Del键应该也能有效的。Good Luck!\n参考文章  解决Skylake平台装Win7无法识别USB接口的问题 Skylake平台电脑装Win7系统后usb接口无法使用的解决方法  其他可参考文章\n Y700安装纯净版系统后不认USB设备的解决方法 安装win7鼠标键盘不能用 失灵原因解析和解决方法 ","date":"2017-03-14","permalink":"https://www.maoxuner.cn/post/2017/03/win7-vs-skylake/","tags":["windows","usb"],"title":"原版win7安装后不识别usb导致键鼠没有反应的问题"},{"content":"搜索引擎确认网站所有权时往往会提供一个html文件来进行验证，要是这个文件被渲染了，验证自然就会失败了。或者，有时候会写一些简单的html示例页面，这也是不希望Hexo渲染的。因此有必要针对某个文件或者目录进行排除。Hexo的配置文件中提供了配置项skip_render，但总不清楚到底该怎么用。\n注意 只有source目录下的文件才会发布到public（能够在网络上访问到），因此Hexo只渲染source目录下的文件。skip_render参数设置的路径是相对于source目录的路径。\n设置排除项 假设source目录下的文件如以下目录树所示\n├─ demo | ├─ js-view-size | | ├─ 1.html | | └┈ 2.html | ├─ other | | ├─ 3.html | | ├─ 4.html | | └┈ 5.md | ├─ 6.html | └┈ 7.md ├─ baidu.html └┈ google.html  排除单个文件  排除baidu.html skip_render: 'baidu.html'   排除3.html skip_render: 'demo/other/3.html'    排除多个文件  排除baidu.html和google.html skip_render: - 'baidu.html' - 'google.html'  或者\nskip_render: '*.html'  后者会排除source目录下所有后缀为html的文件，但是不会排除子目录如demo及其子目录中的html文件。\n 排除baidu.html和google.html以及3.html skip_render: - 'baidu.html' - 'google.html' - 'demo/other/3.html'  或者\nskip_render: - '*.html' - 'demo/other/3.html'   排除source/demo/other目录中的所有html文件 skip_render: 'demo/other/*.html'  这不会排除5.md文件\n 排除source/demo/other目录中的所有文件 skip_render: 'demo/other/**'   排除baidu.html和google.html以及整个source/demo目录 skip_render: - '*.html' - 'demo/**'  排除所有特定后缀的文件，暂且不知道如何设置。\n  参考文章  Hexo技巧收集 - 不定期更新 ","date":"2017-03-10","permalink":"https://www.maoxuner.cn/post/2017/03/hexo-skip-render/","tags":["hexo"],"title":"Hexo渲染时排除部分文件或目录"},{"content":"有时候并不能简单的使用CSS来控制页面元素的大小，结合js来控制元素的大小会更方便一些，因此有时就需要用js获取浏览器窗口的尺寸。\n方法 纯js var data = { \u0026quot;网页可见区域宽(body)\u0026quot; : document.body.clientWidth, \u0026quot;网页可见区域高(body)\u0026quot; : document.body.clientHeight, \u0026quot;网页可见区域宽(body)，包括border、margin等\u0026quot; : document.body.offsetWidth, \u0026quot;网页可见区域高(body)，包括border、margin等\u0026quot; : document.body.offsetHeight, \u0026quot;网页正文全文宽，包括有滚动条时的未见区域\u0026quot; : document.body.scrollWidth, \u0026quot;网页正文全文高，包括有滚动条时的未见区域\u0026quot; : document.body.scrollHeight, \u0026quot;网页被卷去的Top(滚动条) FF\u0026quot; : document.body.scrollTop, \u0026quot;网页被卷去的Left(滚动条)FF\u0026quot; : document.body.scrollLeft, \u0026quot;网页被卷去的Top(滚动条) IE\u0026quot; : document.documentElement.scrollTop, \u0026quot;网页被卷去的Left(滚动条)IE\u0026quot; : document.documentElement.scrollLeft, \u0026quot;浏览器距离Top\u0026quot; : window.screenTop, \u0026quot;浏览器距离Left\u0026quot; : window.screenLeft, \u0026quot;屏幕分辨率的宽\u0026quot; : window.screen.width, \u0026quot;屏幕分辨率的高\u0026quot; : window.screen.height, \u0026quot;屏幕可用工作区的宽\u0026quot; : window.screen.availWidth, \u0026quot;屏幕可用工作区的高\u0026quot; : window.screen.availHeight, \u0026quot;屏幕颜色位数(位)\u0026quot; : window.screen.colorDepth, \u0026quot;屏幕像素密度(像素/英寸)IE\u0026quot; : window.screen.deviceXDPI }  运行测试\n使用jquery var data = { \u0026quot;浏览器当前窗口可视区域宽度\u0026quot; : $(window).width(), \u0026quot;浏览器当前窗口可视区域高度\u0026quot; : $(window).height(), \u0026quot;浏览器当前窗口文档对象宽度\u0026quot; : $(document).width(), \u0026quot;浏览器当前窗口文档对象高度\u0026quot; : $(document).height(), \u0026quot;浏览器当前窗口文档body的宽度\u0026quot; : $(document.body).width(), \u0026quot;浏览器当前窗口文档body的高度\u0026quot; : $(document.body).height(), \u0026quot;浏览器当前窗口文档body的总宽度 包括border padding margin\u0026quot; : $(document.body).outerWidth(true), \u0026quot;浏览器当前窗口文档body的总高度 包括border padding margin\u0026quot; : $(document.body).outerHeight(true) }  运行测试\n应用 需求 页面结构大体如下：\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt;\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\u0026lt;title\u0026gt;Test\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026quot;banner\u0026quot;\u0026gt;条幅\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;content\u0026quot;\u0026gt;内容\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;footer\u0026quot;\u0026gt;页脚\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  其中条幅定高100px，需要固定在页面顶部；页脚定高80px，需要固定在页面底部。中间的内容高度随具体内容自适应。\n当内容部分的文字不够多时示例1，希望页脚能够停靠在浏览器底部示例2。当内容部分的文字足够多时，希望页脚能够处于页面底部，能够随内容滚动示例3。因此，并不能简单的给页脚部分设置bottom值为0。\n实现 var clientHeight = $(window).height(); var bannerHeight = 100; var footerHeight = 80; var contentHeight = clientHeight - bannerHeight - footerHeight; $(\u0026quot;.content\u0026quot;).css(\u0026quot;min-height\u0026quot;, contentHeight);  参考文章  JQuery获取浏览器窗口的高度和宽度 Javascript、Jquery获取浏览器和屏幕各种高度宽度 JS获取当前对象大小以及屏幕分辨率等   var jsDemo = document.getElementById(\"js\"); jsDemo.onclick = function(){ var data = { \"网页可见区域宽(body)\" : document.body.clientWidth, \"网页可见区域高(body)\" : document.body.clientHeight, \"网页可见区域宽(body)，包括border、margin等\" : document.body.offsetWidth, \"网页可见区域高(body)，包括border、margin等\" : document.body.offsetHeight, \"网页正文全文宽，包括有滚动条时的未见区域\" : document.body.scrollWidth, \"网页正文全文高，包括有滚动条时的未见区域\" : document.body.scrollHeight, \"网页被卷去的Top(滚动条) FF\" : document.body.scrollTop, \"网页被卷去的Left(滚动条)FF\" : document.body.scrollLeft, \"网页被卷去的Top(滚动条) IE\" : document.documentElement.scrollTop, \"网页被卷去的Left(滚动条)IE\" : document.documentElement.scrollLeft, \"浏览器距离Top\" : window.screenTop, \"浏览器距离Left\" : window.screenLeft, \"屏幕分辨率的宽\" : window.screen.width, \"屏幕分辨率的高\" : window.screen.height, \"屏幕可用工作区的宽\" : window.screen.availWidth, \"屏幕可用工作区的高\" : window.screen.availHeight, \"屏幕颜色位数(位)\" : window.screen.colorDepth, \"屏幕像素密度(像素/英寸)IE\" : window.screen.deviceXDPI } var str = \"\"; for(var i in data){ str += i + \":\" + data[i] + \"\\n\"; } alert(str); } $(\"#jq\").click(function(){ var data = { \"浏览器当前窗口可视区域宽度\" : $(window).width(), \"浏览器当前窗口可视区域高度\" : $(window).height(), \"浏览器当前窗口文档对象宽度\" : $(document).width(), \"浏览器当前窗口文档对象高度\" : $(document).height(), \"浏览器当前窗口文档body的宽度\" : $(document.body).width(), \"浏览器当前窗口文档body的高度\" : $(document.body).height(), \"浏览器当前窗口文档body的总宽度 包括border padding margin\" : $(document.body).outerWidth(true), \"浏览器当前窗口文档body的总高度 包括border padding margin\" : $(document.body).outerHeight(true) } var str = \"\"; $.each(data, function(k, v){ str += k + \":\" + v + \"\\n\"; }); alert(str); }); ","date":"2017-03-10","permalink":"https://www.maoxuner.cn/post/2017/03/js-get-view-size/","tags":["javascript","jquery","css"],"title":"js获取浏览器窗口的宽高度"},{"content":"《Go语言半小时速成教程》其实就是Go官方入门文档《A tour of Go》的中文翻译版本。谷歌被墙可以理解，The Go Programming也被墙了就觉得很不可思议了。由于同源策略，好几个《Go语言半小时速成教程》中的代码并不能查看运行结果。折腾了好久，自己在本地搭建了该教程。\n正准备兴致勃勃的写篇文章分享一下搭建的过程，却意外发现了另一个网站的翻译版本《Go指南》，而且代码运行的结果也能查看了。看到这个站点的域名go-zh.org，猜测Go 编程语言应该是有人做的中文镜像站吧。那么所有问题都不再是个问题了。\n不过也没关系，想写的内容继续写着。作为笔记也好。不过得提醒一下，虽说教程的名称为“半小时速成”，然而实际上半小时哪够看完所有教程内容。\nGo环境的搭建 Go语言是啥我就不说了，我还挺看好他的，除了那诡异的语法格式规定，比如左侧{不能换行。\n下载Go 针对windows而言，可以从官网下载二进制安装包。这里使用的是zip解压包。Releases · golang/go 下载并解压这个压缩包到合适的目录，假设解压后的目录为D:\\App\\go，也就是LICENSE文件所在的目录。\n添加环境变量 一般来说，Go的使用需要添加两个环境变量：GOROOT和GOPATH。\nGOROOT是go组件的根目录。设置该环境变量的值为上一步解压后的目录，如D:\\App\\go。\nGOPATH是go项目的目录，是存储go程序源码以及程序的目录，也就是工作目录。可自定义设置，比如D:\\Coding\\go。本文后面暂用GOPATH代指D:\\Coding\\go目录。\n然后再在Path环境变量中加入%GOROOT%/bin;%GOPATH%/bin，以方便在命令行中使用go。注意需要用;将以上内容与原有的内容分隔。\n然后新建一个CMD窗口，执行go命令，如果正常输出，则表示安装成功。\n本地搭建Go指南 简单方法 执行以下命令，稍作等候即可安装。\ngo get github.com/Go-zh/tour/gotour  然后执行gotour命令即可打开教程，中文的。\n进阶方法（繁琐方法） 这里介绍的是安装go-tour-zh，该项目已经两年没更新了，不推荐。当时我只是没有找到上面这个简便的方法。\n下载go-tour-zh 该项目的地址mikespook/go-tour-zh，似乎要翻墙才行\n点击左侧“Downloads”标签，然后点击“Download repository”，下载该项目的归档文件。\n在GOPATH的目录中，按照路径src/bitbucket.org/mikespook创建目录。并把以上压缩包的内容解压到该目录，并把解压后的目录改名为go-tour-zh。\n下载依赖包 由于golang.org被墙了，从github上下载依赖包。需要使用git。\n在GOPATH中执行以下命令\ngit clone https://github.com/golang/net.git src/golang.org/x/net git clone https://github.com/golang/tools.git src/golang.org/x/tools  编译go-tour-zh 完成上述几步操作后，此时的GOPATH目录下的目录树应为这样：\n├─ bin ├─ pkg └┈ src ├─ bitbucket.org | └┈ mikespook | └┈ go-tour-zh └┈ golang.org └┈ x ├─ net └┈ tools  此时bin和pkg目录可能不存在，可以不用管。\n在src/bitbucket.org/mikespook/go-tour-zh/gotour目录中执行go install命令。如果没有报错，应该就是成功了。GOPATH目录下会生成bin目录，同时bin目录下会生成编译好的程序文件gotour.exe。\n执行gotour命令即可打开Go指南了。\n参考文章  Go语言半小时速成教程 Go指南 go-tour-zh离线安装 ","date":"2017-03-09","permalink":"https://www.maoxuner.cn/post/2017/03/go-tour/","tags":["go"],"title":"离线使用Go指南（Go语言半小时速成教程）"},{"content":"最近写了好多js，对专门运行js的Node.js产生了兴趣。阿里的虚拟主机快要到期了，就打算把pages服务用起来，简简单单搭建个站点。早就想直接用markdown写写文章，然后用轻巧的工具生成页面了。我用过一个叫做PMBlog的系统，不过这个需要服务器php的支持。后来看到Jekyll，觉得这个工具真的是为懒人而生的。然而Jekyll官方文档都注明，不建议在windows平台安装Jekyll。Jekyll的文档界面不够优美，对Ruby也没有很大的兴趣。Hexo跟Jekyll可以说是完全一样的工具，但它是基于Node.js的。另外，Hexo是宝岛台湾的程序员开发的，原生态支持中文。Node.js、Hexo，一个因为js而产生兴趣，一个因为是同胞的作品而倍感亲切。这自然是个挺好的选择。\n注意\n首先说明一下，Node.js、Git、Hexo的使用都是命令行中的命令，本文介绍的配置方法也主要是命令。当然，Git有图形界面，但是我觉得命令行更高效一些。\n安装Node.js 下载安装包 Node.js官网本身是提供windows下的安装包的。但是我不喜欢安装程序给我创建快捷方式，添加乱七八糟的环境变量以及注册表信息。我喜欢让这一切都变得可控，因此我安装软件大多都是安装“绿色”版本的。\n从下载|Node.js下载最新的zip包，并解压到相应的程序目录。建议路径中不要包含空格或者其他特殊字符，防止出现莫名其妙的错误。\n配置环境变量 假设解压后的文件路径为D:\\App\\node，也就是node.exe所在的目录。在用户环境变量Path中加入D:\\App\\node这个路径。注意用英文;将该路径与原有的路径分隔开来。\nwin10设置环境变量的方法，右键桌面上的此电脑，选择属性。在属性窗口中，点击左侧的高级系统设置。然后点击系统属性高级标签下侧的环境变量按钮。然后选中用户环境变量中的Path，点击编辑按钮。win7，win8设置方法类似。\n打开一个新的CMD窗口，执行npm命令，如果没有提示找不到命令，则说明Node.js已经安装成功了。\n配置国内镜像 国内镜像推荐淘宝NPM镜像，运行以下命令安装淘宝NPM镜像工具，并用该工具替代npm。\nnpm install -g cnpm --registry=https://registry.npm.taobao.org  然后执行cnpm命令，以确认cnpm是否已经安装好。\n以后使用到的npm命令，只要把npm替换成cnpm即可，命令的其他参数保持一致即可。\n安装Git 本来没有计划写这一部分，但是后来看到Hexo有这个依赖，就在这里简单说明一下吧。实际上也不复杂，跟Node.js的安装差不多。\n下载安装包 windows下安装Git SCM，也就是git for windows，即可使用git的相关功能。同样的，官方也提供安装包，但我还是手动安装的。从Releases · git-for-windows/git下载最新的绿色包，文件名以PortableGit开头的自解压文件。\n配置环境变量 假设解压后的文件路径为D:\\App\\PortableGit，也就是git-bash.exe所在的目录。在用户环境变量Path中加入D:\\App\\PortableGit\\usr\\bin这个路径。可能添加D:\\App\\PortableGit\\cmd这个路径更妥当一些，但是前者可以一并使用git环境组件中的ssh等命令。而且，我在使用前者的时候，也尚未发现什么问题。\n安装Hexo Hexo的两大依赖Node.js以及Git安装好了，接下来就可以很方便的安装Hexo了。文档|Hexo已经够详细了，而且全中文，用起来毫无压力。简单来说，执行以下命令即可安装了。\nnpm install -g hexo-cli  既然已经下载了淘宝NPM镜像的工具，把以上命令替换成这一句，使用国内的镜像安装Hexo。\ncnpm install -g hexo-cli  然后执行hexo命令，以确认Hexo是否已经安装好。\n使用Hexo生成站点 Hexo的建站原理 为了让大家更好的理解建站的一些操作，简单介绍一下Hexo建站的原理。 整套系统分为三个部分：\n    说明     文章数据 文章内容，主要表现为后缀名为md的文件。位于source及其子目录中   建站配置 配合数据生成静态页面的规则，包括系统配置，模板，主题   静态文件 生成的静态网页    如果把网站比作一道菜：文章数据就相当于食材，是构成这道菜的原料；建站配置相当于菜谱，规定了做成网站这道菜的做法。当然这个比喻不够恰当，建站的话，文章的数据是最最重要的，换个建站配置依然能建站。而菜肴的话，菜谱可能是最终要的，因为往往稀缺的并不是食材吧。\n既然根据文章数据以及建站配置就能生成静态文件了，因此我们只要管理好这两部分就行了，剩余的都交给Hexo处理。实际上Hexo的核心功能就是根据前两者来生成静态文件的。只不过，随着功能的完善，Hexo可以实现一键部署。以Git的pages为例，Hexo生成静态文件后，会自动给这些文件纳入一个git仓库，并它们提交到开启了pages服务的分支中去，从而完成站点的部署。\n开启pages服务 或许是GitHub上聚集了世界各地的开发者吧，因此很多人都在使用github的pages服务建站。但是我还是推荐使用国内的码云或者Coding以获得更好的访问速度。我比较喜欢开源中国社区，因此对码云也分外有好感。但是码云的pages服务不支持绑定自己的域名（CNAME），而Coding是支持的。首先要创建一个项目，才能开启pages服务。开启pages服务后，都会给你提供一个以你的id开头的二级域名用来访问pages页面。以我的码云pages为例，该域名为maoxuner.gitee.io。如果想以根目录的形式访问你的网站，一般都是创建一个跟你的ID同名的项目。然后在项目中开启pages服务。开启pages服务的方法不详细介绍了，可参码云pages。码云项目的界面最近做了更新，与文档中略有不同。Pages的入口在项目主页，“服务”标签中的“Pages”。其他代码托管平台的开启方法大同小异。\n创建站点 找一个方便的目录，执行以下命令，生成博客的基本文件（测试文章数据以及基础的建站配置）。其中blog可以替换成任何你想要的目录名称，但是这个目录一定是个不存在的目录。\nhexo init blog  然后切换到blog目录，执行以下命令即可生成静态文件。（已有演示用的文章数据以及默认的建站配置）\nhexo generate  此时，blog目录中会多出一个public目录，其中就是网站的静态文件。可以选择手动把这些静态文件纳入git仓库并推送到开启pages服务的分支、或者发布到Web服务器。当然，更推荐使用Hexo来自动化部署。\n自动化部署页面 Hexo自动git部署需要安装组件hexo-deployer-git，执行以下命令：\ncnpm install hexo-deployer-git --save  然后修改系统配置文件_config.yml（不是themes子目录下的主题配置文件）。修改deploy这一项的值，按照以下格式配置。如果没有这一项，直接在文件末尾添加即可。*注意缩进，*yml中使用缩进表示从属关系，用-表示一个序列（可以同时部署到多个仓库）。这里减号后有一个空格。以我的项目为例，配置内容如下：\ndeploy: - type: git repo: git@gitee.com:maoxuner/maoxuner.git branch: gitee-pages  type值不用修改，因为这里使用的是git的pages服务，类型就是git。 repo为仓库地址，为了方便部署（免输账号密码），使用的是ssh协议的仓库地址。这需要配置ssh秘钥，具体参考生成并部署SSH key。 branch为开启pages服务的分支名称。一般的，码云为gitee-pages，Coding为coding-pages，GitHub为gh-pages。 配置好部署信息后，即可用Hexo把静态页面部署到git上了。\nhexo deploy  部署完成后，通过域名如maoxuner.gitee.io，应该就能访问到这些页面了。\n管理文章数据以及建站配置 既然上面已经说到，整个系统最重要的是文章数据以及建站配置，因此可以用git管理这些文件，并推送到网络上的仓库中去。网络仓库以我的仓库git@git.gitee.com:maoxuner/maoxuner.git为例。\n在blog目录中执行以下命令：\ngit init git add * git commit -m \u0026quot;站点初始化\u0026quot; git remote add origin git@git.gitee.com:maoxuner/maoxuner.git git push --set-upstream origin master  至此，已经能够把网站的文章数据、站点配置同步到仓库的master分支，把静态文件发布到osc-pages分支了。初步建站的过程已经完成了。\n添加新的文章 站点已经建成，剩下的就是添砖加瓦写文章了。执行以下命令：\nhexo n 文章标题  以上命令即可在source/_posts/目录中生成一个文件名为文章标题，后缀名为md的文件。文件的头信息已经填好，剩下的就是用markdown语法写文章就好了。markdown语法参见Markdown 语法说明 (简体中文版)\n然后执行以下命令即可生成新的页面，部署到git。\nhexo g -d  同样的，把新添加的文件纳入git仓库，并推送到网上的仓库。\ngit add * git commit -m \u0026quot;新的文章\u0026quot; git push  至此，该系统已经能很好的运行了。更多的使用以及设置方法参考文档|Hexo即可。\n参考文章  淘宝NPM镜像 文档|Hexo Hexo+NexT主题配置备忘（强烈推荐这篇文章，总结很全面） ","date":"2017-03-08","permalink":"https://www.maoxuner.cn/post/2017/03/install-hexo/","tags":["nodejs","hexo"],"title":"安装nodejs并用hexo部署博客"},{"content":"设置字体是CSS样式中的一个小方面，实际上也就是自定义CSS样式了。CSS倒不难写，主要是得搞清楚在哪个文件里写才有效果。\n这里讲的是Hexo的主题Next的CSS样式自定义，Next版本为5.1.0。其他版本不一定有对应的文件，未经测试。\n样式文件 假设Next主题的目录名称为next，如果要自定义CSS样式，只要在themes/next/source/css/_custom/custom.styl文件中写入相应的CSS代码就行了。\n注意\n 文件后缀为styl，猜测可能是使用stylus语法的样式文件。但是我试过了，直接写CSS代码是可行的。 涉及到文件引用的地方要注意路径。如果使用相对路径，默认当前目录为themes/next/source/css/。 注意要执行hexo clean命令，清除已经生成的文件。然后再执行hexo generate重新生成文件。否则样式可能不会生效。 如果页面刷新后，新的样式没有生效，建议检查public/css/main.css中有没有加入新的CSS代码。  自定义字体 字体文件 当前我只能确定支持ttf以及eot格式的字体文件。定义一个字体，首先要确定字体文件的路径。我把字体文件iosevka-regular.ttf放在source/fonts/路径下，hexo生成页面时会把fonts目录复制到public/中。我的网站是建在根目录下的，字体文件引入的路径为/fonts/iosevka-regular.ttf。\n在themes/next/source/css/_custom/custom.styl文件中加入以下代码，其中font-family的值是你定义的字体的名称，也就是你后面使用字体时的名称。\n@font-face{ font-family: Iosevka; src: url('/fonts/iosevka-regular.ttf'); }  然后要在命令行中执行以下代码\nhexo clean hexo generate  这样，该样式就能在主题中生效了。如果页面刷新后没有改变，可能是缓存的问题。查看public/css/main.css文件，看看文件末尾有没有新加入的CSS代码。\n代码块使用字体 既然字体（CSS样式）已经生效了，那就可以在主题中使用该字体了。\n修改主题配置文件themes/next/_config.yml中codes的配置内容即可。主题会优先使用该字体，当该字体不存在时，会使用其他预设的字体。另外建议把host这一项改为国内的反代理服务器，如//fonts.css.network，以提升访问速度。默认是谷歌的服务器，国内连不上。\nfont: enable: true # Uri of fonts host. E.g. //fonts.googleapis.com (Default) host: //fonts.css.network # Global font settings used on \u0026lt;body\u0026gt; element. global: # external: true will load this font family from host. external: true family: Lato # Font settings for Headlines (h1, h2, h3, h4, h5, h6) # Fallback to `global` font settings. headings: external: true family: # Font settings for posts # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo # Fallback to `global` font settings. # The `size` option use `px` as unit logo: external: true family: size: # Font settings for \u0026lt;code\u0026gt; and code blocks. codes: external: true family: Iosevka size: 12  然后再执行hexo clean \u0026amp;\u0026amp; hexo generate命令清除并重新生成文件，应该就可以了。\n参考文章  Hexo博客主题NexT使用自定义的CSS样式 CSS3 字体 ","date":"2017-03-08","permalink":"https://www.maoxuner.cn/post/2017/03/hexo-next-custom-style/","tags":["hexo","css"],"title":"Next主题自定义CSS样式（字体）"},{"content":"毕业设计中有大量计算，需要写程序来完成。而我们拥有的只有一个流传了N年的老旧的vb代码。为了完善该程序的功能，采用新的技术以便传播，我便用python重写了一个稳定分析的程序。 由于我学业不精，对稳定这部分的理解不足，程序逻辑上也许会有一些问题。因此严正申明： 本程序仅供学习使用，不能用于专业设计。\n坝坡稳定分析 本程序采用的算法为折线滑动面法（滑楔法），目测适用于采用滑楔法的各种土石心墙坝的坝坡稳定分析。可考虑地震荷载的影响。最终求得Kc的最小值。\n版本 VB改写版本/vb 此版本是由学长处获得的VB代码改写成Python语法而得，几乎完全相同。可同时算出一般情况下的安全系数，以及考虑地震荷载时的安全系数。同时会返回折点处D点的坐标。（以坝趾为坐标原点）\n该脚本没有考虑心墙的位置，而是把心墙当做坝壳材料计算的。（也就是说该版本应该适用于均质土石坝的坝坡稳定分析）\nPro版本/pro 该版本直接用Python语法编写，各个计算过程均独立成函数，方便维护调试。同时，也考虑了心墙位置的影响，计算滑坡时，心墙不一起滑动。最终会输出计算数据与成果到 out.txt 文本中。\n可以考虑水位骤降的影响，具体为折点位置始终与当前水位（下降的瞬间水位）齐平。因此计算各块体的重量的公式没有改变。\n不会同时输出一般情况以及地震荷载时的安全系数。当地震等级为7,8,9时会输出考虑地震荷载时的安全系数，否则输出一般情况下的安全系数。\nstability_analysis.py 是主程序，必须配套数据文件 data.py 一起使用，否则程序无法正常运行！\n测试工具/tools 这个目录下的是测试工具，用来测试 pro 中的主程序。\n更新日志 2016-05-15\n更新了脚本，可以考虑水位骤降的影响。由于水位骤降的情况，暂时不对程序作更新，只进行bug修复。\nPro版本可以在数据文件 data.py 丢失时提出解决方法，Lite版本删除。\n修改了文件操作语句，提高了稳定性。\nPython教程参考 不得不说廖雪峰的Python教程是蛮好的，结构清晰，方便查阅。然而后面的内容太跳跃了，我还搞不懂。不过学了前面几个章节的内容就足够我写出这里的代码了。\n另外，鱼C零基础入门 Python中文视频教程也是蛮好的，小甲鱼幽默风趣，以游戏为例子深入浅出的讲解Python3。而且，鱼C论坛上的Python内容也是很齐全。\n 廖雪峰Python3教程 鱼C零基础入门 Python中文视频教程  ","date":"2016-05-15","permalink":"https://www.maoxuner.cn/post/2016/05/stability-analysis/","tags":["python"],"title":"土石坝坝坡稳定分析程序"},{"content":"故事发生在二战时期的一个美国沿海小镇，八岁小男孩Pepper（雅各布·萨尔瓦提 Jakob Salvati 饰）天生矮小瘦弱，为此没少受同龄人欺负，还被取绰号为“小男孩”（little boy）。他最好的朋友兼搭档，就是自己高大魁梧的父亲詹姆斯（迈克尔·拉帕波特 Michael Rapaport 饰）。在父亲的教导陪伴下，Pepper渡过了一段美好的时光。直到父亲应召入伍，投入到第二次世界大战的战场中去。\n就在Pepper期待父亲回家时，噩耗传来，他的父亲在菲律宾被日军虏为战俘，生死未卜。而此同时，Pepper和他哥哥London（大卫·亨瑞 David Henrie 饰）将战争仇恨发泄在镇上的一个日本人桥本身上，为此兄弟俩都接受了相应的惩罚。神父为了教育Pepper，将一个“古老的清单”交给他，只要他把清单上的任务都完成，他就能拥有可以移动大山的信念和力量，从而就能把他的父亲从二战战场中带回来。这个清单的其中一项，就是和日本人桥本成为朋友……\n果然我是不适合写影评啥的，随便瞎诌吧。\n众所周知，二战中在日本广岛投下的一颗原子弹就叫小男孩。原子弹的使用，加速了日本投降的进程，给战争的结束带来了曙光。电影起名“小男孩”，估计也有期盼和平的寓意在吧。\n首先呢，老套路。战争开始了，山姆大叔的一句\u0026quot;I want you!\u0026quot;，这个家庭里面的爸比，便无可奈何的应了征，留下妻儿牵肠挂肚。\n不同的地方来了，这部电影讲的点很多，不仅仅是战争。侏儒的小儿子被欺负，讲的是成长。神父善意的谎言，讲的是信念。桥本与Pepper之间的关系，讲的是种族和友谊。\n电影最让我感动的是Pepper与桥本之间的关系。起初Pepper也是怨恨作为发起战争的民族的一员的桥本的，再后来神父让他跟桥本做朋友，让他尝试着去了解桥本。随着Pepper的了解，我们也认识到桥本其实也是一个非常善良的人，曾经有着美满的家庭，却漂泊到他乡。桥本也是战争的受害者。Pepper对桥本的态度也从厌恶逐渐转变为朋友了。\n清单上有一条是“埋葬死者”。桥本如果去世了，Pepper就能实现这一条了，爸爸就能回来了。然而Pepper却犹豫了，他实在不忍心朋友离开，朋友和爸爸都重要，谁也不能放弃。于是，他给桥本暗中祈祷，希望他尽快康复。\n说说结局吧，结局可谓是一个转折。总之爸爸回来了。我的玻璃心终究没碎掉。\n","date":"2016-03-20","permalink":"https://www.maoxuner.cn/post/2016/03/little-boy/","tags":["movie"],"title":"《小男孩》 一部从小男孩的视角讲述二战祈盼和平的电影"},{"content":"ud+mbr以及uefi的特点，做成了MBR+UEFI的双模式引导的隐藏分区启动盘。\n 很久没有使用过云爱PE工具箱，现其官网似乎已经更换，是否是同一团队维护也未可知。\n 简便方法 一开始我也没怎么接触过UEFI的启动盘制作，所以也无从下手，只能求助于网上现有的工具。所幸，搜到了神器“云爱Pe工具箱”。 其网站上的介绍如下：\n 这是一款自我革命的产品\n本产品承诺永久免费。虽然市面上已经有好些Pe工具，但无论是国内的其它Pe工具，都是设置强制设置主页，带恶意软件，强制安装推广软件等。虽然有些Pe工具有选择取消强制设置，但是选择按钮都是隐藏或要输入密码才能取消，这些都是我们无法接受的，同时也有些网站在自己的Pe中加入了更多的广告伤害了用户，影响了用户体验，这是我们不想看到的。我们的这款产品，只要还有用户需要，我们会一直维护下去。我们的口号，坚决做纯净WinPe，让我们用上干净好看WinPe工具箱。\n云爱WinPe工具箱是极适合于网管、装机人员使用的多功能WinPE系统维护工具箱，它基于Windows PE制作，支持USB2.0/3.0/SCSI/Netcard等设备，操作简便，界面清爽。您可使用它进行磁盘分区、格式化、磁盘克隆、修改密码、数据恢复、系统安装等系列日常应急维护工作。相比同性质的DOS系统维护工具，PE工具箱更容易操作、更容易上手。那么今天给您带来一款轻量级的纯Win8PE微型维护系统，由云爱基于Windows PE精简美化，用来制作U盘启动盘等，或许是不错的选择！\n\u0026ndash; 云爱Pe工具箱全体成员 2015年03月01日\n 软件界面\n初始化检测，可能会有部分组件被杀毒软件报毒，但是我觉得是误报吧。如果不放心，可以在看懂原理后手动制作MBR+UEFI双模式引导的隐藏分区启动盘。可以参照下一大节DIY启动盘的内容。\n主界面，点击高级选项会出现如下图这样的高级选项。建议备份好u盘原来的文件，保留软件默认参数，选则好正确的u盘，然后点击“全新制作”。\n**注意：***储存分区的文件系统格式默认设置是NTFS，会折腾的童鞋也许会在启动选项中加入linux的发行版。很多linux的发行版默认没有集成NTFS驱动，所以这里最好是改成Fat32。当然，改成Fat32也会有问题随之而来，即不支持单个大小超过4GB的文件。\n当然，一开始格成了NTFS的文件系统也没关系，后期重新格式化成Fat32也可以，但是注意不要调整磁盘容量——启动文件在储存分区以外的磁盘空间。因此这种方式制作的启动盘是能够防病毒的。*\n纯净，美观，傻瓜式操作。目测是个非常好的软件，然而却很毒舌，(\u0026gt;_\u0026lt;)\n 操作完成 电脑修得好，备胎当到老。\n 点击“模拟测试U盘”下面的选项，就可以测试启动盘啦。\nDIY启动盘 在Diskgenius中查看已经用“云爱WinPe工具箱”制作了启动盘的U盘，会发现其分区状态如下：\n 第一部分是容量为512M的UD分区，MBR模式，可以用Fbinsttool编辑这一分区。 第二部分是容量为27.8G的储存分区，日常存储用的。 第三部分是容量为512M的UEFI启动分区，卷标EFI。\n 又在Diskgenius中查看了EFI分区中的文件，发现这些文件就是PE UEFI版本的启动镜像解压出来的文件。\n经过网上查询，UEFI模式应该是从磁盘上Fat文件系统，且卷标为EFI的磁盘数据引导的。也就是说UEFI的引导数据都放在这个分区。UEFI引导我还不是很清楚，这句总结也许不对。高手且一笑而过，菜鸟也大可不放在心上，照着下面的步骤来就行了。\n至此，大概是有了思路了。但是还不敢确定，直到我在百度上搜到纯手工制作UEFI/Legacy BIOS双启动U盘这篇教程。它验证了我的想法，于是我大体按照它的步骤，果然成功了。当然，这个教程用到了一个叫做“青菜U盘启动盘制作工具”的软件，结果只是做了一个ud+mbr的启动项。与其下载这个青菜U盘，倒不如直接下载云爱的这个工具算了，一步到位。\n 制作legacy bios模式的启动分区 实际上ud+mbr的这部分可以直接用Fbinsttool一个工具就能搞定了 调整存储分区的空间，创建UEFI模式引导分区  打开Diskgenius，右击U盘存储分区，点击“调整分区大小”，在U盘末尾空出512M左右的空闲空间。 **注意：**分区前部的空间这一项不能调整，因为这里面储存的是UD分区的内容。可以直接拖动分区那个图形的末位，留出一部分空闲空间。也就是把分区后部的空间调整成合适的大小，推荐512M。具体以你的PE UEFI模式的镜像文件大小为准，不能小于这个大小。多了太多也并没有什么卵用。 保存分区表，在末尾空闲的空间新建分区，主磁盘分区，格式化成Fat32文件系统，分区卷标设置成EFI，并把这个分区设置成隐藏。 不用给这个分区分配盘符，因为Windows只能加载u盘上的第一个分区。这也是把UEFI模式的启动分区放在U盘末尾，而不是紧跟着UD隐藏分区的原因。不然，u盘的存储空间就不能好好利用了，UEFI模式的启动分区的内容也达不到隐藏的效果。（与之不同的是，linux系统下可以挂载存储空间以及EFI卷标的这两个分区，但也同样不能识别UD隐藏分区）   打开Fbinsttool，修复MBR。 在完成上面的操作后，打开Fbinsttool，会提醒“fbinst MBR已被破坏，是否尝试修复？”。点击是，修复即可。 复制PE UEFI版本的文件到EFI分区 在Diskgenius中浏览EFI分区的文件，此时应该什么都没有。解压PE UEFI版本的启动镜像，然后把解压出来的全部文件直接拖入Diskgenius浏览EFI分区的窗口中。 注意：是拖入！这样才能保证目录结构与原来镜像中的相同。也就是说，EFI分区中的文件，目录结构要跟PE UEFI版本的启动镜像用UltruaISO打开查看到的完全一样。效果跟我在这一大节最前面的两张图片相同。  这样的话，MBR+UEFI双模式的启动盘就做好了。如果下载了云爱的工具，不妨测试一下是否能正常启动。当然也可以用实体机试试。\n推荐总结 实际上我还是推荐使用“云爱PE工具箱”来制作的，用过确实感觉不错，傻瓜操作，使用方便。PE系统界面美观，功能齐全，菜单整齐。如果动手能力强的话，完全可以在这个基础上加入个性化的定制。比如我利用grub的功能，检索u盘储存分区的配置菜单，然后在存储分区放入了更强大的PE镜像，以及微型linux的发行版。如此一来，又大大增强了启动盘的扩展性。\n另外推荐两个mbr版本的PE启动盘，作者是小林子。这两个启动盘同样有着精美的界面，整齐的菜单，而且连丝毫个人信息都没有，更不会随意添加恶意代码什么的。按照他/她自己在论坛上说明的：\n 曾经用过不少 WinPE 系统，都不是很满意，普遍存在篡改主页、添加广告链接至收藏夹、未经允许安装推广软件等流氓行为，还集成了诸多不常用的工具，令人头疼不已。那么今天给您带来一款轻量级的纯 Win8PE 微型维护系统，剔除启动菜单、MaxDOS 、众多不常用工具，不含任何个人信息，用来制作 U 盘启动盘等，或许是不错的选择\n 经过使用测试，小林子PE的Win8PEUSB3.0.iso这个镜像有点小bug，imdisk虚拟光驱工具不能使用。\n参考文章  云爱Pe工具箱 - 最好用的WinPE装机维护工具 无广告，无捆绑，加载快 纯手工制作UEFI/Legacy BIOS双启动U盘 win8PE2015版不支持UEFI启动(出处: AM电脑吧) Win8PE带USB3.0驱动（小林子作品）(出处: AM电脑吧) ","date":"2015-12-06","permalink":"https://www.maoxuner.cn/post/2015/12/ud-mbr-uefi-boot/","tags":null,"title":"MBR+UEFI双模式引导的隐藏分区启动盘"},{"content":"香蕉派/BPI刷了bananian系统，也就是debian arm了，我是把它作为服务器用的，所以一直没有在意浏览器以及flash视频播放的问题。当然，我也早就发现了flash插件的问题。就拖沓着，一直没解决，直到我在debian的维基上看到了“Use Pepper Flash with Iceweasel using Freshplayerplugin”这句话，我才有了新的思路。\n缘由 我利用apt-get并没能成功安装chromium。感觉是官方源里面并没有完整的chromium组件。到树莓派源中下载了chromium相关的包过来安装，却因为其他软件的依赖问题又失败了。于是，只能选择安装其他浏览器。\n尝试 火狐firefox是个不错的选择，但是debian中不叫这个名字，而是冰鼬iceweasel。安装好后，打开视频网站。不出所料的，提示没有安装flash插件，也没有html5播放的选项。点击浏览器的安装插件按钮，却找不到下载项。这样就只能手动下载安装了。\n首先想到的是到adobe官方碰碰运气，看能不能找到arm平台的flash插件。然并卵，官方只有linux i386的插件。而且是闭源，没有源代码可以编译。\n我又灵光一闪，安卓不也是arm平台么，而且有flash插件！于是，我下载了安卓的flash插件，并提取出当中的所有后缀为.so的文件，并放入/usr/lib/mozilla/plugins中，设置好相关权限，启动浏览器，然而还是找不到插件。\n另外还有一种可行性就是pepperflashplayer了。维基上说，这个插件只能用在chromium上。我偏不信这个邪，于是下载了arm版本的pepperflashplayer，并把对应的文件放入/usr/lib/mozilla/plugins中。重新启动iceweasel，好吧，我信了，pepperflashplayer不能直接用作iceweasel插件。\n解决思路 直到昨天，我异想天开的搜索关键词iceweasel pepperflash，结果找到了debian上关于pepperflashplayer的维基内容。这个页面，我实际上也看过几次，但都忽略了最后一行Use Pepper Flash with Iceweasel using Freshplayerplugin。我找到了救命药草。大概看了一下freshplayerplugin的维基内容，发现它是开源的项目，也就是可以直接编译安装。另外，arm版本的pepperflashplayer也已经下载了。因此，这个方案还是可行的。试了一下，果真解决了问题。\n详细步骤 维基中是直接运行包管理器安装browser-plugin-freshplayer-pepperflash。然而arm的软件仓库中并没有这个包，于是我只能直接下载源码编译了。\n  首先要配置好软件源，安装好编译组件（这个在github上有详细的说明ubuntu/fedora）\nsudo apt-get install cmake gcc g++ pkg-config ragel libasound2-dev \\ libssl-dev libglib2.0-dev libpango1.0-dev libgl1-mesa-dev \\ libevent-dev libgtk2.0-dev libxrandr-dev libxrender-dev \\ libxcursor-dev libv4l-dev libgles2-mesa-dev libavcodec-dev \\ libva-dev libvdpau-dev libdrm-dev  我是参照debian wiki上的内容来编译的，比这上面多两个包libpulse-dev和libconfig-dev。要是直接按照上面的包来编译，不能通过，或者不能加载插件，可以试试加上这两个包。\n  下载源码并编译\ncd git clone https://github.com/i-rinat/freshplayerplugin.git cd freshplayerplugin mkdir build cd build cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo .. make  这里要注意这个语句cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ..后面有两个点，一开始我误以为是省略号，是作者让我们自己添加编译参数的。实际上..是指上级目录，也就是源码的根目录。所以这里要特别注意，编译命令要在新建的build目录内执行。\n  安装freshplayer 不出意外的话应该能编译成功了，把build目录下的libfreshwrapper-pepperflash.so复制到~/.mozilla/plugins目录\ncp libfreshwrapper-pepperflash.so ~/.mozilla/plugins  当然也可以把libfreshwrapper-pepperflash.so复制到/usr/lib/mozilla/plugins/目录，手动复制需要注意设置好权限。\nsudo cp libfreshwrapper-pepperflash.so /usr/lib/mozilla/plugins/  或者执行\nsudo make install    安装pepperflashplayer 解压chromium-pepper-flash-12-12.0.0.77-1-armv7h.pkg.tar.xz，并把PepperFlash目录复制到/usr/lib/下，并设置好权限。\nxz -d chromium-pepper-flash-12-12.0.0.77-1-armv7h.pkg.tar.xz tar -xf chromium-pepper-flash-12-12.0.0.77-1-armv7h.pkg.tar sudo cp usr/lib/PepperFlash /usr/lib/ -R sudo chown root:root /usr/lib/PepperFlash -R sudo chmod +x /usr/lib/PepperFlash/*  至此，应该能使用iceweasel愉快的观看优酷等网站咯。\n  文件下载  chromium-pepper-flash-12-12.0.0.77-1-armv7h.pkg.tar.xz  参考文章  PepperFlashPlayer Freshplayerplugin i-rinat/freshplayerplugin 树莓派2B运行Flash ","date":"2015-11-27","permalink":"https://www.maoxuner.cn/post/2015/11/flash-on-bpi/","tags":["bpi","linux"],"title":"香蕉派bananian的flash插件方案Iceweasel+Freshplayerplugin+PepperFlashPlayer"},{"content":"零零碎碎的时间，折腾了好久，看了不知道多少帖子，教程，终于在香蕉派成功编译并加载了小度Wifi的驱动。其实也就是360Wifi，小米Wifi，腾讯Wifi等的驱动。因为它们基本都是mt7601u的芯片。好了，废话不多说，进入主题。\n环境 硬件：香蕉派M1/BPI-M1 系统：bananian-1508 网卡：小度Wifi2（mt7601u芯片）\n软件  编译环境 make等编译环境自然需要准备好。我之前安装了lnmp一键安装包，编译环境都自动给我装好了，所以具体我也不知道需要哪些组件。 内核头文件 首先在终端执行uname -a，看一下现在系统的内核版本。 nono@pibox ~ % uname -a Linux pibox 3.4.108-bananian #2 SMP PREEMPT Thu Aug 13 06:08:25 UTC 2015 armv7l GNU/Linux  然后用apt-get命令安装对应版本的内核头文件\nsudo apt-get install linux-headers-3.4.108-bananian   驱动源码 官方的驱动源码下载链接已经失效了，在网上循着文件名DPO_MT7601U_LinuxSTA_3.0.0.4_20130913.tar.bz2，找到了一个包，看样子未做太多修改。（这个包应该是新浪微盘下载的） 解压源码包 tar -jxvf DPO_MT7601U_LinuxSTA_3.0.0.4_20130913.tar.bz2   编译前的准备 编辑源码包下的common/rtusb_dev_id.c #ifdef MT7601U {USB_DEVICE(0x148f,0x6370)}, /* Ralink 6370 */ {USB_DEVICE(0x148f,0x7601)}, /* MT 6370 */ {USB_DEVICE(0x2717,0x4106)}, /* Xiaomi Wifi */ #endif /* MT7601U */  把上面这段代码修改成下面这段，实际上就是添加上360Wifi、小度Wifi、小米Wifi等的设备ID\n#ifdef MT7601U {USB_DEVICE(0x148f,0x6370)}, /* Ralink 6370 */ {USB_DEVICE(0x148f,0x7601)}, /* MT 6370 */ {USB_DEVICE(0x2717,0x4106)}, /* Xiaomi Wifi */ {USB_DEVICE(0x148f,0x760b)}, /* 360 Wifi */ {USB_DEVICE(0x2a5f,0x1000)}, /* Tencent Wifi */ {USB_DEVICE(0x2955,0x0001)}, /* XiaoDu Wifi */ {USB_DEVICE(0x2955,0x1001)}, /* XiaoDu Wifi */ {USB_DEVICE(0x2955,0x1003)}, /* NuoMi Wifi */ #endif /* MT7601U */  如果不确定你的设备ID在不在这上面，可以把你的usb无线网卡连上你的香蕉派，然后终端执行lsusb命令，根据显示的结果大概推测一下就能找到你的设备ID。如果不确定哪个是usb无线网卡的话，可以先拔掉usb无线网卡，执行lsusb命令，再插上usb无线网卡，然后执行lsusb命令。对比两次执行的结果，多出的那一行应该就是了。 比如下面Bus 001 Device 003: ID 2955:1001这一行，后面没有描述的，就是小度Wifi。万恶的百度啊，改了设备ID就算了，连描述信息也删了。\nnono@pibox ~ % lsusb Bus 004 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub Bus 003 Device 002: ID 0bda:8176 Realtek Semiconductor Corp. RTL8188CUS 802.11n WLAN Adapter Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 001 Device 004: ID 0bc2:ab00 Seagate RSS LLC Bus 001 Device 003: ID 2955:1001 Bus 001 Device 002: ID 1a40:0101 Terminus Technology Inc. 4-Port HUB Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub   编译安装 回到源码主目录，执行make，不出意外的话应该能编译成功。 如果编译成功了，就可以执行sudo make install，把驱动模块安装到系统里去。 接着运行以下命令载入驱动 sudo depmod sudo modprobe mt7601Usta  我也不清楚驱动模块的生效要不要重启系统，然而事实上重启了也不能解决问题。请接着往下看。\n  Debug 重启系统前，我执行了一下sudo ifconfig -a，查看所有网络设备，然后并没有发现多出的设备。于是，我重启了系统，再次执行该命令，然并卵。\n 发现问题 于是我dmesg查看了一下开机信息，找到一点思路。 [ 14.243002] Freeing init memory: 228K [ 15.309721] systemd-udevd[159]: starting version 215 [ 15.927477] rtusb init rt2870 ---\u0026gt; [ 15.938697] ===\u0026gt;rt2870_probe()! [ 15.944676] --\u0026gt; RTMPAllocAdapterBlock [ 15.952575] sd 1:0:0:0: Attached scsi generic sg0 type 0 [ 15.974653] === pAd = f02f9000, size = 851128 === [ 15.977963] --\u0026gt; RTMPAllocTxRxRingMemory [ 15.988743] ERROR: 256 KiB atomic DMA coherent pool is too small! [ 15.988752] Please increase it with coherent_pool= kernel parameter! [ 16.022431] \u0026lt;-- ERROR in Alloc Bulk buffer for HTTxContext! [ 16.025672] ---\u0026gt; RTMPFreeTxRxRingMemory [ 16.030100] \u0026lt;--- RTMPFreeTxRxRingMemory [ 16.037726] ERROR!!! Failed to allocate memory - TxRxRing [ 16.066348] \u0026lt;-- RTMPAllocAdapterBlock, Status=3 [ 16.084313] rt2870: probe of 1-1.3:1.0 failed with error -1 [ 16.129699] usbcore: registered new interface driver rt2870   解决思路 搜索这些错误代码，顺藤摸瓜，找到了几篇相关的文章。知道了驱动加载失败的原因ERROR: 256 KiB atomic DMA coherent pool is too small!。对应的解决方法是在启动代码uEnv.txt中添加coherent_pool=2M。然而，bananian-1508的启动分区（第一个分区）下并没有uEnv.txt这个文件。仅有的类似的文件是boot.cmd和boot.scr。查看了一下boot.cmd的具体内容，发现跟uEnv.txt的内容非常相似。（之前我有编辑过uEnv.txt这个文件。） 下面这是boot.cmd的具体内容 #-------------------------------------------------------------------------------------------------------------------------------- # Boot loader script to boot with different boot methods for old and new kernel # Credits: https://github.com/igorpecovnik - Thank you for this great script! #-------------------------------------------------------------------------------------------------------------------------------- if load mmc 0:1 0x00000000 uImage-next then # mainline kernel \u0026gt;= 4.x #-------------------------------------------------------------------------------------------------------------------------------- setenv bootargs console=ttyS0,115200 console=tty0 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait load mmc 0:1 0x49000000 dtb/${fdtfile} load mmc 0:1 0x46000000 uImage-next bootm 0x46000000 - 0x49000000 #-------------------------------------------------------------------------------------------------------------------------------- else # sunxi 3.4.x #-------------------------------------------------------------------------------------------------------------------------------- setenv bootargs console=ttyS0,115200 console=tty0 console=tty1 sunxi_g2d_mem_reserve=0 sunxi_ve_mem_reserve=0 hdmi.audio=EDID:0 disp.screen0_output_mode=EDID:1680x1050p60 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait setenv bootm_boot_mode sec load mmc 0:1 0x43000000 script.bin load mmc 0:1 0x48000000 uImage bootm 0x48000000 #-------------------------------------------------------------------------------------------------------------------------------- fi   编辑配置 boot.scr的内容与上面几乎完全相同，但是文件头部有一部分“乱码”。实际上boot.scr是由boot.cmd经过编译得到的。因此可以直接编辑boot.cmd而不可以编辑boot.scr。另外，编辑之前一定要备份文件。这都是我血的教训啊。 在boot.cmd中有两段关于启动参数的配置，保险起见，这两段我们都修改一下。找到setenv bootargs，在这行代码的最末尾，也就是在rootwait后面添加参数coherent_pool=2M。编辑后的代码如下所示 #-------------------------------------------------------------------------------------------------------------------------------- # Boot loader script to boot with different boot methods for old and new kernel # Credits: https://github.com/igorpecovnik - Thank you for this great script! #-------------------------------------------------------------------------------------------------------------------------------- if load mmc 0:1 0x00000000 uImage-next then # mainline kernel \u0026gt;= 4.x #-------------------------------------------------------------------------------------------------------------------------------- setenv bootargs console=ttyS0,115200 console=tty0 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait coherent_pool=2M load mmc 0:1 0x49000000 dtb/${fdtfile} load mmc 0:1 0x46000000 uImage-next bootm 0x46000000 - 0x49000000 #-------------------------------------------------------------------------------------------------------------------------------- else # sunxi 3.4.x #-------------------------------------------------------------------------------------------------------------------------------- setenv bootargs console=ttyS0,115200 console=tty0 console=tty1 sunxi_g2d_mem_reserve=0 sunxi_ve_mem_reserve=0 hdmi.audio=EDID:0 disp.screen0_output_mode=EDID:1680x1050p60 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait coherent_pool=2M setenv bootm_boot_mode sec load mmc 0:1 0x43000000 script.bin load mmc 0:1 0x48000000 uImage bootm 0x48000000 #-------------------------------------------------------------------------------------------------------------------------------- fi   生成配置 boot.cmd编辑完成，接下来就是要生成boot.scr文件。这里需要用到u-boot的工具mkimage，一般都可以直接安装软件源里的u-boot-tools软件包。或者可以下载u-boot的源代码自己编译。然后就可以用以下命令生成boot.scr了。当然，要在boot.cmd的目录下执行。 mkimage -A arm -O linux -T script -C none -name 'mt7601usta_debug' -d boot.cmd boot.scr   重启生效 这两个文件都有了以后就可以把它们复制到启动分区里了。然后就可以重启了。这一步比较危险，所以要做好文件备份和恢复。 不出意外的话，重启后dmesg，可以看到以下信息 [ 14.181600] Freeing init memory: 228K [ 15.276835] systemd-udevd[158]: starting version 215 [ 15.916705] rtusb init rt2870 ---\u0026gt; [ 15.918658] ===\u0026gt;rt2870_probe()! [ 15.926758] --\u0026gt; RTMPAllocAdapterBlock [ 15.931477] === pAd = f04b4000, size = 851128 === [ 15.943277] sd 1:0:0:0: Attached scsi generic sg0 type 0 [ 15.945815] --\u0026gt; RTMPAllocTxRxRingMemory [ 15.951554] \u0026lt;-- RTMPAllocTxRxRingMemory, Status=0 [ 15.961370] \u0026lt;-- RTMPAllocAdapterBlock, Status=0 [ 15.962873] NumEndpoints=8 [ 15.965844] BULK IN MaxPacketSize = 512 [ 15.967630] EP address = 0x84 [ 15.970259] BULK IN MaxPacketSize = 512 [ 15.978693] EP address = 0x85 [ 15.981879] BULK OUT MaxPacketSize = 512 [ 15.984206] EP address = 0x 8 [ 15.987348] BULK OUT MaxPacketSize = 512 [ 15.989690] EP address = 0x 4 [ 15.992892] BULK OUT MaxPacketSize = 512 [ 15.995274] EP address = 0x 5 [ 16.000232] BULK OUT MaxPacketSize = 512 [ 16.007318] EP address = 0x 6 [ 16.014121] BULK OUT MaxPacketSize = 512 [ 16.020883] EP address = 0x 7 [ 16.039724] BULK OUT MaxPacketSize = 512 [ 16.051070] EP address = 0x 9 [ 16.058408] RTMP_COM_IoctlHandle():pAd-\u0026gt;BulkOutEpAddr=0x8 [ 16.069071] RTMP_COM_IoctlHandle():pAd-\u0026gt;BulkOutEpAddr=0x4 [ 16.078986] RTMP_COM_IoctlHandle():pAd-\u0026gt;BulkOutEpAddr=0x5 [ 16.114469] RTMP_COM_IoctlHandle():pAd-\u0026gt;BulkOutEpAddr=0x6 [ 16.136199] RTMP_COM_IoctlHandle():pAd-\u0026gt;BulkOutEpAddr=0x7 [ 16.143712] RTMP_COM_IoctlHandle():pAd-\u0026gt;BulkOutEpAddr=0x9 [ 16.146738] STA Driver version-3.0.0.3 [ 16.153618] --\u0026gt;MT7601_Init(): [ 16.158935] Chip specific bbpRegTbSize=0! [ 16.177183] Chip VCO calibration mode = 0! [ 16.178912] NVM is EFUSE [ 16.181888] Efuse Size=0x1d [Range:1e0-1fc] [ 16.185028] Endpoint(8) is for In-band Command [ 16.187749] Endpoint(4) is for WMM0 AC0 [ 16.190283] Endpoint(5) is for WMM0 AC1 [ 16.192815] Endpoint(6) is for WMM0 AC2 [ 16.195369] Endpoint(7) is for WMM0 AC3 [ 16.197901] Endpoint(9) is for WMM1 AC0 [ 16.200433] Endpoint(84) is for Data-In [ 16.203311] Endpoint(85) is for Command Rsp [ 16.207599] Allocate a net device with private data size=0! [ 16.210633] Allocate net device ops success! [ 16.214475] The name of the new ra interface is ra0... [ 16.216773] RtmpOSNetDevAttach()---\u0026gt; [ 16.220685] \u0026lt;---RtmpOSNetDevAttach(), ret=0 [ 16.224509] \u0026lt;===rt2870_probe()! [ 16.230934] usbcore: registered new interface driver rt2870   测试使用 然后可以sudo ifconfig -a，看看有没有ra0这个设备。如果有的话，恭喜你，成功了！这个设备就是你的小度Wifi。然后配置使用方法就跟设备wlan0一样咯。 执行以下命令可以使ra0设备生效 sudo ip link set ra0 up  再执行以下命令，可以扫描无线网络。如果有结果的话，一般来说就正常了。\nnono@pibox ~ % sudo iwlist ra0 scan ra0 Scan completed : Cell 01 - Address: 96:74:2A:AC:23:F3 Protocol:11b/g/n BW20 ESSID:\u0026quot;HHUCAN\u0026quot; Mode:Managed Frequency:2.412 GHz (Channel 1) Quality=13/100 Signal level=-85 dBm Noise level=-80 dBm Encryption key:off Bit Rates:65 Mb/s Cell 02 - Address: 96:74:2A:AC:25:D2 Protocol:11b/g/n BW20 ESSID:\u0026quot;HHUCAN\u0026quot; Mode:Managed Frequency:2.412 GHz (Channel 1) Quality=94/100 Signal level=-53 dBm Noise level=-92 dBm Encryption key:off Bit Rates:65 Mb/s Cell 03 - Address: 84:74:2A:AC:25:D2 Protocol:11b/g/n BW20 ESSID:\u0026quot;CMCC-EDU\u0026quot; Mode:Managed Frequency:2.412 GHz (Channel 1) Quality=89/100 Signal level=-55 dBm Noise level=-92 dBm Encryption key:off Bit Rates:65 Mb/s  不知道是不是个bug。第一次扫描时只能扫描到公开网络，第二次扫描时才能显示全部的网络。 按照格式要求配置/etc/wpa_supplicant/wpa_supplicant.conf，然后执行以下命令测试连接无线网\nsudo wpa_supplicant -d -Dwext -ira0 -c/etc/wpa_supplicant/wpa_supplicant.conf    进阶 设备名称是ra0，肯定是有些不习惯。这是有办法修改的。 编辑驱动源码目录下的include/rtmp_def.h，把下面这段代码\n#define INF_MAIN_DEV_NAME \u0026quot;ra\u0026quot; #define INF_MBSSID_DEV_NAME \u0026quot;ra\u0026quot;  改成\n#define INF_MAIN_DEV_NAME \u0026quot;wlan\u0026quot; #define INF_MBSSID_DEV_NAME \u0026quot;wlan\u0026quot;  然后重新编译，安装，载入驱动就行了。 由于我的香蕉派上原来就有个usb无线网卡，所以新的设备名是wlan1。随之而来又有了网络配置的问题，重启后我的香蕉派连接不上网络了。幸好第一个usb无线网卡设置了热插拔，把两个网卡都拔掉，然后插上第一个usb无线网卡，就重新连了上来。 网络配置的问题，暂时还没有研究透。于是我使用的设备名依然是ra0，这样好像没有冲突，重启后两个网卡都能连上网络。\n文件下载  DPO_MT7601U_LinuxSTA_3.0.0.4_20130913.tar.bz2  参考文章  MT7610U USB - MediaTek 【L】小米随身WiFi，Linux下AP热点驱动（开源） 树莓派编译小度wifi驱动要多久 arm-linux移植MT7601Uusb无线网卡（小度wifi，360随身WIFI 2代） [求助] 无线网卡驱动编译安装 出错！！！！！ Rico Board上编译USB WiFi RT3070驱动 [TI DSP+ARM] DM8168 SD启动卡的快速制作 ","date":"2015-11-11","permalink":"https://www.maoxuner.cn/post/2015/11/bpi-bananian-xiaoduwifi/","tags":["bpi","linux"],"title":"香蕉派BPIbananian1508编译小度Wifi mt7601u驱动"},{"content":"钢琴的声音实在是太好听了，这演奏者的指法真的逆天了！\n利用IE缓存来提取视频文件是屡试不爽啊，只要视频不是经过加密的，均能提取成功。\n 打开IE浏览器，关闭所有标签，仅留下一个空白标签，并打开Internet选项  删除浏览历史记录\n点设置，查看文件，打开缓存文件夹，删除文件夹内的所有内容\n 在IE中打开视频播放的地址，正常播放视频，等视频缓冲完全结束 把缓存文件夹里面的视频全部复制出来，然后依次打开筛选一下就好了  ","date":"2015-08-03","permalink":"https://www.maoxuner.cn/post/2015/08/piano-unravel/","tags":["acg"],"title":"东京食尸鬼主题曲《Unravel》钢琴版 顺带讲解利用IE提取未加密的视频"},{"content":"准确说，《人间失格》（动画）不是一部动漫，而是一部作品集，拥有着几个相对独立的小故事，括号内的是绘制作者。它是太宰治的作品《人间失格》的动画化。\n 人间失格（小畑健《死亡笔记》）  镰仓殉情 怪物 世间 新世界   盛开的樱花林下（久保带人《死神》/坂口安吾）  盛开的樱花林下 盛开的樱花林下【最终回】   心（小畑健/夏目漱石） 奔跑吧！梅乐斯（许斐刚《网球王子》）  奔跑吧！梅乐斯 奔跑吧！梅乐斯【最终回】   蜘蛛之丝（久保带人《死神》/芥川龙之介） 地狱变（久保带人《死神》/芥川龙之介）  总得来说，动画（原作）的主题有点阴暗，看起来有点压抑，这并不是我常看的动漫的风格。不过，这几个故事还是挺不错的。\n我最喜欢的是《奔跑吧！梅乐斯》。这讲述的是友情，信任与等待的故事。\n这个故事有两条线：老师以及他的友人，梅乐斯以及其友人。\n友人“背弃”约定，结果自己孤身一人来到东京打拼。在事业有成的时候，被请求改编《奔跑吧！梅乐斯》的剧本。自己的曾经的遭遇与梅乐斯之间有太多相似，以至于影响到剧本的构思，老师为此饱受折磨。最终在得知友人只是因为病重而不能赴约时，老师终于释然，也将《奔跑吧！梅乐斯》写成了完美的结局。\n","date":"2015-06-08","permalink":"https://www.maoxuner.cn/post/2015/06/%E4%BA%BA%E9%97%B4%E5%A4%B1%E6%A0%BC2009%E5%B9%B4%E9%9B%86%E8%8B%B1%E7%A4%BE%E6%8E%A8%E5%87%BA%E5%8A%A8%E7%94%BB/","tags":["acg"],"title":"《人间失格》（2009年集英社推出动画）"},{"content":"「拜託你，假裝當我的未婚夫四天吧！」\n小磯健二受到心儀的學姊筱原夏希拜託，與她一起前往長野縣的鄉村小鎮。\n企圖努力達成任務的健二，周旋在以夏希的外曾祖母為中心的眾多親戚之中；\n這時，他收到一串神秘的數列。擅長數學的他，興奮的計算出答案，隔天卻世界大亂！\n為了拯救世界的危機，健二和夏希以及所有親戚挺身而出！\n這是一個教人熱血沸騰，卻又親切溫柔的夏日故事。\n电影开场描述的是OZ系统中虚拟信息网络的场景，有点像素风格，跟传统动漫那种细腻唯美的画风完全不一样。也许会想，我勒个去，这是什么鬼？是不是下错片儿了。 我最初也是这样觉得的，慢慢看来，才发现，这部片子就是酱紫。\n虚拟和现实 温馨的夏日闹剧 这是两条并行的世界\n一个车水马龙，城市笼罩在电车引擎、喇叭、各式各样杂音之下。\n一个奇幻虚拟，蔚蓝的天空下住着不计其数俏皮的公民。它们依托互联网而存在，又与外在世界有着神经末梢般复杂的联系。\n依旧是和往日任何挥汗如雨的夏天一样，已经在物理社打工的健二，本来以为，这个暑假会平凡不堪、毫无意义。可谁也没想到，因为夏希学姐的闯入，自己稀里糊涂地被拉进了乡村小镇的一个百年大家庭里。\n老实说，看电影版夏日大作战的时候，就有一种很清新的感觉。\n在夏末这个绿意盎然的日本乡村，没有了林立的高楼外墙玻璃反射出来的刺眼光芒，取而代之的是蔓延的绿意和蝉鸣。\n这个热热闹闹、充满喜感的一大家子人，竟然很奇妙地来了个电玩大作战，甚至在泪水、汗水中有些离奇地拯救了世界。友情、亲情、爱情水乳交融。一大家子人，加入OZ世界热血地战斗，甚至还可以爆笑又紧张地用花牌拯救世界。\n健二的夏天，陪伴着夏希学姐经历了亲人离合的悲欢，温馨、感动、悲伤、愉悦，读起来，心情就仿佛坐上了春日里的过山车，紧张、刺激，但又无比温暖。\n按理说，本片的女主是夏希。不过，我觉得，作为这个家族的核心骨，祖母的光环更胜一筹。\n故事的大背景就是这个年迈开朗知理善良的祖母大寿之喜。祖母作为家族的核心，将家族的每个成员紧密和谐的联系在一起。\n夏希祖母和健二的对话，起初只是让人觉得这个让缅甸的健二脸红到变成关公的老祖母是个封建固执的老人家。然而当故事越往后发展，越让人体会到老祖母的慈爱、坚强、宽容……特别是当黑客入侵OZ系统，让现实时间一片混乱的时候，老祖母毅然挺身而出，发动身边的老朋友力挽狂澜于即倒。她武士一般这样坚强的黄金配角形象立刻跃然纸上啊。就如有人说说：你可以软弱卑微，可以不是个有多优秀的人。可是只要你在她的身边，你仿佛就能获得力量和救赎。这力量会指引你前进的方向。我们能在这里能体会到的，就是这股家庭的力量，爱的力量吧。\n她死后被夏希发现的那封信的内容让人回味无穷。“\u0026hellip;还有，如果宅住回来的话，虽然十年前离家不知什么时候回来，但回来的时候肯定饥肠辘辘，让他尽情的吃田里种的蔬菜、葡萄还有梨，我一直记得第一次见到那孩子的情景\u0026hellip;”她是个宽厚的老人，家中二十几口人都信服她，宅住叔叔也把她当作最亲的亲人，只是还来不及表达。\n男主人公健二是害羞属性，头脑很好却没什么自信。因为经常一个人生活，很少与家人相处，刚刚来到夏希家很不适应，当夏希向奶奶介绍他时还一个劲地抓自己的后脑勺，后来很喜欢夏希的家人，最后和夏希的家人齐心协力化解了危机。\n加主马是剧中比较重要的一个男性角色，有些自闭的一个小孩，头发把一只眼睛挡住了，很少与家人一起活动，爱坐在电脑前，因为小时候被人欺负，所以学习了格斗技巧，并且是OZ世界擂台赛的冠军。在虚拟世界中他与LOVE MECHINE的打斗比较多。故事最后有个情节是他害羞地摸妈妈肚中的妹妹，说明他前后发生了改变。\n宅住叔叔，一个不羁的男人，携带了家产逃跑，东京大学毕业，美国留学，人工智能方面的专家。他设计的LOVE MECHINE被美国军部偷偷使用，被家人误会了也不解释，他其实非常喜欢祖奶奶，从美国赶回来也是为了给祖奶奶贺寿，制作LOVE MECHINE也是为了把它卖掉把钱还给祖奶奶。\n 喜欢这部片子，是因为喜欢这个设定：老家。喜欢一个人，就应该去他的老家看看。看看他走过的路，看看他住过的房子，看看他家里的人，甚至看看他成长的这些过程。你的过去我不曾参与，但是我想知道那每一点每一滴。你的未来我会奉陪到底，我会珍惜拥有的每一分每一秒。\n参考文章  穿行在两个世界里的爱 温情美意夏日热闹剧 ","date":"2015-06-08","permalink":"https://www.maoxuner.cn/post/2015/06/%E5%A4%8F%E6%97%A5%E5%A4%A7%E4%BD%9C%E6%88%98/","tags":["acg"],"title":"《夏日大作战》"},{"content":"圣诞夜，退役自行车选手Gin，性倒错患者花，离家出走的少女美由纪三人在东京的雪夜中无所事事。这是，他们发现垃圾堆中有一位哭泣的弃婴。孩子的襁褓中仅有一个酒吧的名片与照片。婴儿的父母身份成了谜团。\n花想收留孩子，并将孩子取名清子。但另外2人表示反对。于是三人开始了寻找清子的父母的旅程。圣诞夜幸福的气氛，伴随的却是怀中清子的哭泣。无家可归的三个人，开始为同样无家可归的清子找寻属于她的家。这一队流浪者，在一夜经历了诸多奇妙的事件。他们能找到清子的父母吗？\n在日本无数的漫画家里，今敏显得独树一帜。我只看过他两部作品，2010年《盗梦空间》大热，我第一次发现了《红辣椒》这部电影，它所展现出的诡奇的想象力令人叹为观止，可惜今敏的溘然长逝让这部佳作竟成了他的遗作。其实，对这个导演我并没有太多了解，只记得当时看到他写下的遗书情真意切，充满人味儿，而今重拾起《东京教父》这部旧作，才发现他是那么的可爱，他就像一个雪夜里的拾荒人，翻开城市里最阴暗的角落，寻找被散落的温情，他已寻着月光走远，身后还留下一串洁白的脚印，等待着太阳再次出现，将雪慢慢融化……\n《东京教父》这部电影从类型上来说应该是一部公路片，不过公路的两边没有乡野、小镇、异国、风情，高高的水泥和冷冷的钢架将观众的眼睛始终囚禁在东京这座大都市里。故事的主人公就是每天都要穿梭于城市不同地方的拾荒人，当然他们还有更直观的身份——醉鬼大叔金、人妖阿花、不良少女美由纪，这三个都算不上漂亮的人物我相信一开始没有观众会对他们产生好感。\n随着一声啼哭，一个弃婴来到了他们的世界，人妖的可爱之处最先被展现出来，在“母性”的驱使下他决定收养这个孩子，不过最终三人还是决定根据留下的线索将婴儿送回家，于是“冒险”开始了。\n一部好的公路片一定是展现人物成长的，借由公路突出的是寻找的概念。本片借由寻找婴儿父母为线索，展现出了极其庞大的故事容量，并且通过精巧的叙事结构削弱了传统公路片较为明显的单线条感，将主人公们的足迹巧妙地穿插进了城市的各个角落。\n东京的轻轨就像北京的地铁，里面挤满了上班族，他们是一座城市里的工蚁，忙碌而有秩序，而三个拾荒者带着一个啼哭不止的婴儿进入列车时，车厢里呈现出的是上班族们一张张掩鼻而吸、避之不及的面孔，联想起前一段的一则社会新闻，有人因农民工身上的气味儿太大而将其赶下公交车，实在是让人心寒。电影的这一细节看似不经意，其实饱含深意，作为一座城市里数量最为庞大的一群人，面对弱者反而呈现出这样一种冷暴力，只能说明这座城市已经得病。电影在旅程刚刚开始的第一站，就已经将大多数可能的施救者变成了旁观者甚至是迫害者，将主人公推入了无助中。\n三个人孤独地在路上走着，没有食物，婴儿的食物也没有，又一处神来之笔出现了，他们在墓地里找到了吃的东西，但这一段并没有拍出那种看到食物特别惊喜的感觉，而是很从容，转念一想就会明白像他们这种拾荒者一定已经习惯了这种觅食环境，死人救了活人的命，不得不说是一种莫大的讽刺。更让人意外的是找到了婴儿喝的牛奶，这时我真不知是该喜、还是该悲，那一方摆放着牛奶的小小坟墓下也是一个早夭的生命啊！这短短的一场戏也传达出了导演今敏对于生命无常的悲悯。\n三人偶然救了黑社会老大，故事于是开始展开向另一个社会层面，后面杀手出现刺杀黑老大、劫持美由纪让三人分开了，在电影进行到三分之一的地方，导演巧妙地将线索拆成了三条，对人物进行了分别展现：美由纪并有像预料的遇到危险，杀手好心的妻子还喂奶给婴儿吃，美由纪刺伤父亲不能回家的事第一次呈现了出来；阿花和金分开后紧紧找到了美由纪，而金扮演了懦夫的角色，是该找个机会让他自己去历练了。历练过后，三人又聚在了一起，我不是很清楚阿花口中的“妈妈”真是他的妈妈还是妈妈桑一类的角色，不过阿花的故事观众也明白了，此处唯一觉得不妥的是，金也正好出现在这儿也未免太巧了吧。\n故事进行到这会儿，三个拾荒者的形象相较之前有了深入的展示。美由纪的故事最为明了，因为刺伤父亲的罪恶感而无法面对家人，她在等一个救赎的机会。阿花是冒险的主角，虽然是性别错置的男性，但导演在其身上倾入了一个坚强女性的品质，是她始终坚持着这项使命，维护着团体的完整，从这个人物的塑造上也可以看出导演对这类边缘人所持的一种同情和理解的态度。看似最应该扮演领导者的金此时还是一个需要找回自我的男孩子，牢骚不休，害怕责任，遇事就退缩。阿花和金之间若有若无的爱情并没有展开，导演也并没有试图呈现对这种禁忌之恋的态度，而只是简单摆在观众面前，我颇为赞同这种处理，没有态度就是最好的态度。\n三人又上路了，他们根据线索找到了照片里的房子，可惜房子已经拆的不成样子，自然人去屋空，三人不得不再次踏上旅程。这里有一段对日本邻里关系的生动展示，“邻居协会费”？我们这儿这种东西幸好不需要用钱来维系吧。更有趣的是那些家庭主妇们的议论，乍一听他们都跟这家挺熟似的，其实都是些嚼舌根子的话，这里告诉我们一个道理：不要以为会有多少人真正关心你的生活，你只是他们口中的谈资。\n一次意外让三人进了医院，金掏出积攒多年的钱为阿花治了病，这时金竟意外地找到了失散多年的女儿，此处同样觉得过于巧合。金在和女儿交谈后解开心结，而这时阿花却在抛下一顿狠话后离开了，其实他是不想成为金重回家庭的障碍，这段还是很让人动容的。\n三人组又一次分开了，阿花和美由纪救下了想要跳楼的女人，竟然就是婴儿的母亲佐智子；而另一边，金找到了婴儿的父亲，但令人惊讶的是，婴儿是被佐智子偷来的，并不是他们的孩子。最后一段是因为佐智子的发疯而引发的一场追逐，金以动作英雄的形象承担了雄性主角的功能，以证明这一角色的蜕变，不过在最后还是阿花的纵身一跃挽回了孩子的性命。最后这个画面也可以说是全片最美的部分，一阵风吹起，阿花怀抱着婴儿，拉着帷幔，荡秋千般从空中缓缓落下，太阳透过楼群照了进来，放佛天堂降下的圣光，电影借助阿花这个角色终于让观众在最后看到了一丝光明。\n最后的结局皆大欢喜，但如果没有那么多巧合和浪漫色彩的话，结局一定不会是这样，这是一部讲给成人的童话，唏嘘各自知。其实看完《东京教父》之后，我很难将其和《红辣椒》的导演联系起来，一个能从容游走与虚幻与现实的今敏，他的才情确实让人赞叹。不过从他遗书中流露出的个人气质来看，《东京教父》似乎更能体现出他本人的一些创作态度，他试图给这个世界以温暖，但他同时他不忘揭露这个世界的丑恶。悲悯众生，这是每一个艺术家都应有的态度。\n 今敏先生遗书\n再見了。 今年的5月18日，是我忘不了的日子。 這一天，武藏野紅十字醫院心臟內科的醫師作出如下的宣告： 「你是脾臟癌末期，癌細胞已經轉移至全身各處骨頭，最多只能再活半年。」 我跟內人一起聽到這番話。命運實在太過唐突、太過沒有道理，使我們倆幾乎無法 獨力承受。 我平常心裡就在想： 「隨時都有可能會死掉，這也是沒辦法的。」 但這未免太過突然了。 不過，或許真的可以說是有事先徵兆。2～3個月前，我整片背部各處，以及我的腳跟等 部位都出現劇烈疼痛，右腳也使不上力，走路更出現了很大的困難。我有找過針灸師與 整脊師，但狀況並未改善。經過MRI（核磁共振）與PET-CT（正子斷層掃描）等等精密 儀器檢查的結果，就是剛剛那段「只能再活半年」的宣告。 這簡直像是回過神來，死神就站在背後似的，我實在也是束手無策。 宣告後，我與內人一同摸索活下去的辦法。真的是拚了老命。 我們得到了可靠的友人以及無比強力的支援。我拒絕抗癌劑，想要相信與世間普遍觀念 略略不同的世界觀活下去。感覺拒絕「普通」這點，倒還挺有我的風格的。反正多數派 當中也沒有我的容身之處，即使是醫療方面也一樣。同時這次也讓我體認到，現代醫療 的主流派背後，究竟有著什麼樣的機制。 「就在自己選擇的世界觀當中活下去吧！」 可惜，光靠一股氣力是沒有用的，這點跟製作作品時一樣。 病情確實一天天的惡化。 同時我也算是一個社會人，因此平常的我也大約接受了一半的世間普遍世界觀。畢竟我 也會乖乖的繳納稅金。就算不足以自傲，我也夠資格算是日本社會的成員。 所以在與我「活下去」的世界觀作準備的同時，我也打算著手 「替我的死亡作準備」。 雖然完全沒有就緒就是了。 準備之一，就是找來兩個值得信賴的朋友協助，成立一間公司，負責管理今敏微不足道 的著作權。 另外一項準備就是，寫好遺囑好讓我並不算多的財產能順利地讓內人繼承。當然了，我 死後應該是不會發生遺產爭奪戰，但我也想替獨活在世界上的妻子盡可能除去不安，這 樣我才能稍微安心地離開。 各種手續，我與內人都很頭痛的事務處理、事先調查等等，由於超棒的朋友相助，進行 得十分迅速。 後來我併發肺炎的危急情況當中，意識矇矓地在遺囑上簽下最後的名字時，我心裡總算 是覺得：這樣死掉應該也可以了吧。 「唉…總算能死了。」 畢竟在兩天前就被救護車送到武藏野紅十字，過了一天又被救護車送到同一間醫院。也 因此住院作了詳細檢查。檢查結果是併發了肺炎，肺部也有嚴重積水。我跟醫生問了個 究竟，他的回答倒是挺官腔的。就某方面而言，也挺感謝他的。 「頂多只能撐個一兩天……就算熬了過去，最多月底就不行了吧。」 聽著聽著我心想「怎麼講得跟天氣預報一樣…」不過事態確實越來越緊急了。 那是7月7日的事。這年七夕也未免太殘忍了。 所以我很快地下了決定： 我要死在家裡。 或許對我身邊的人而言，最後仍然給他們添了很大的麻煩，好不容易才找到能讓我離開 醫院回到家裡的方法。 一切都多虧了我妻子的努力，醫院那看似放棄卻又真的有幫到我的實際協助，外部醫院 的莫大支援，以及屢屢令人只能認為是「天賜」的偶然，甚至讓我無法相信現實當中的 偶然與必然，竟然能這麼巧合地環環相扣。畢竟這又不是「東京教父」啊。 在我妻子替我設法離開醫院奔走時，我則是對醫生說「就算一天也好、半天也好，只要 我留在家裡就一定還有辦法！」說完後我就一個人留在陰暗的病房內等死。 當時很寂寞，但我心裡想的卻是： 「死或許也不算壞。」 這想法不是出於什麼特別的理由，或許是因為如果不這麼想我就撐不下去了吧，但總之， 當時我的心情是連我自己都非常驚訝的平穩。 只有一天讓我說什麼都無法接受。 「我說什麼都不想死在這種地方……」 此時眼前掛在牆壁上的月曆開始晃動，房間看起來越來越大。 「傷腦筋……怎麼是從月曆裡跑出來接我走呢。我的幻覺真是不夠充滿個性。」 此時我的職業意識仍然在運作，令我忍不住想笑。但此時或許是我最接近「死亡」的一 刻吧。我真正感覺到死亡的逼近。 在「死亡」與床單的包裹之下，加上許多人的盡力而為，我奇蹟似地逃出了武藏野紅十 字，回到自己家中。 死也是很痛苦的。 我先聲明，我並不是批評或是討厭武藏野紅十字醫院，請各位不要誤會。 我只是想要回自己家而已。 回到那個我生活的地方。 有一點讓我略為吃驚。就是當我被送到家中客廳時，居然還附帶了臨死體驗中最常聽到 的體驗：「站在高處看著自己被搬到房間內的模樣」。 大概是站在地面上數公尺的地方，用有點廣角的鏡頭俯瞰著包含著自己的風景。房間中 央的床鋪的四角形，給了我特別大的印象。被裹在床單內的自己，放在那塊四角形上。 感覺並不怎麼小心翼翼，不過也沒什麼好抱怨的。 我本來應該是在家裡等死的。 沒想到。 我似乎是輕輕鬆鬆地翻過了肺炎這難關。 哎呀？ 我居然這麼想： 「竟然會沒死成啊（笑）」 後來滿腦子都只有「死」的我，覺得只有一次真正死掉。 在朦朧的意識深處，「reborn」這個詞彙晃動了數次。 不可思議地，第二天起我的氣力再度啟動了。 我覺得這一切，都是我妻子、來探我的病分我一份元氣的那些人、來替我加油的朋友、 醫師、護士、看護等等所有人的功勞。我打從心裡這麼想。 既然活下去的氣力都再度啟動了，我就不能繼續模模糊糊地下去。 我謹記這是多分到的一段壽命，所以我更得好好運用。 同時我也想要至少多還一份人情。 其實我罹患癌症這件事，我只告訴了身邊極少數的人，連我雙親都不知道。特別是這會 替我的工作製造許多麻煩，所以我說也說不出口。 我本來也想上網宣布我得了癌症，每天跟大家報告我剩餘的人生，但因為我擔心今敏即 將死亡這事說來雖小，卻也會造成許多影響，也因此非常對不起身邊的親朋好友。真的 是非常抱歉。 死前，我還想再見許多人一面，跟他們說幾句話。 這段人生當中，我有家人，親戚，從國小國中開始交往的朋友，高中同學，大學認識的 同伴，在漫畫的世界當中結識並交換許多刺激的人們，在動畫的世界中一同工作、一同 喝酒、用同樣的作品刺激彼此的技術、同甘共苦的眾多同伴，由於擔任動畫導演得以認 識的無數人們，以及世界各地願意自稱是我的影迷的許多貴人。還有透過網路認識的朋 友。 如果可以，我還想見很多人一面（當然也有不想見到的人）。但是見了面後，感覺我腦 子裡「我再也見不到這個人了！」的想法會累積得越來越多，讓我沒有辦法乾脆地赴死。 同時即使略為恢復，我所剩的氣力也不多了，要見別人的面需要莫大的決心。越想見面 的人，見到面卻越痛苦，真是太諷刺了。 再加上，由於癌細胞轉移到骨頭上，下半身開始麻痺，我幾乎無法下床。我不想讓別人 看到我瘦成皮包骨的模樣。我希望許許多多的朋友記得的能是那個還充滿元氣的今敏。 不知道我病情的親氣、所有朋友、所有認識的人，我要藉這個場合跟你們道歉。但我真 的很希望你們可以理解今敏的這份任性。 因為今敏本來就是「這樣的傢伙」嘛。 想到你們的臉，我的腦子裡就湧現許多美好的回憶與笑容。 真的非常感謝大家給了我這麼棒的回憶。 我好愛自己生活的這個世界。 這樣的想法，本身就是一種幸福。 在我的人生當中認識的不算少的人們，無論影響是正面或是負面，都是構成「今敏」這 個人的必要成分，我要感謝所有的邂逅。雖然結果是我四十幾歲就早逝了，但我也認為 這是無可取代的我的命運。同時我也有過十分多的美好經驗。 現在我對於死，只有這個想法： 「也只能說遺憾了。」 是真的。 雖然我可以把這麼多的虧欠想成是無可奈何的，並且放棄，還是有件事讓我說什麼都過 意不去。 就是我的雙親，以及MAD HOUSE丸山先生。 一方是今敏的親生父母，另一方則是動畫導演方面的再造父母。 雖然是有點遲了，除了坦白相告，我也沒有其他方法可選。 當時我真的希望獲得原諒。 看到丸山先生來到家裡探望我時，我控制不了我的淚，也控制不了自慚形穢的想法。 「對不起，我居然變成這樣……」 丸山先生什麼話也沒說，只是搖搖頭，握住我的雙手。 讓我的心裡充滿了感激。 能夠跟這位先生一起工作的感激之情，化為無法訴諸言語的歡喜，怒濤般地席捲而來。 這話聽起來或許十分誇張，但我真的只能這麼形容。 或許只是我個人妄想，但我真的覺得有一舉獲得原諒的感覺。 我最放不下的，就是電影「做夢機械」。 電影本身固然如此，所有參與的工作人員也讓我非常的掛心。因為搞不好，一路上含辛 茹苦畫出來的畫面，是非常可能再也無法被任何人看到的。 因為原作、腳本、角色與世界觀的設定、分鏡、印象音樂……等等所有的想法都在今敏 一個人的心中。 當然了，有很多部分也是作畫監督、美術監督等等許多工作人員所共有的，但基本上這 部作品只有今敏知道是在搞什麼，也只有今敏做的出來。如果說會變成這樣全都是今敏 的責任，那我也無話可說；但是我自認我也是付出了不少的努力，希望能跟大家一起分 享這個世界觀的。事到如今，我的不對實在令我椎心刺骨地痛。 我真的覺得很對不起各位工作人員。 但我希望你們稍微理解。 因為今敏就是「這樣的人」，也才有辦法作出濃縮了許多與其他人不一樣成分的動畫。 這說法或許十分傲慢，但請各位看在癌症的面子上就原諒我吧。 我並不是茫然地等死，我也在拼命地絞盡腦汁，好讓今敏亡後作品也能繼續存續。但這 想法也太單純了。 我跟丸山先生提到我對「做夢機械」的掛念， 他只說了： 「放心，我會替你想辦法的，不用擔心。」 我哭了 我真的痛哭了。 過去在製作電影時、在編列預算時，都欠了他不少人情，最後總是丸山先生在替我收拾 善後。 這次也一樣，我一點進步都沒有。 我跟丸山先生有很多時間長壇。也因此，我才稍微實際體會到，今敏的才能與技術在現 在的動畫業界當中是十分珍貴的。 我好惋惜這些才能。我說什麼都想要留下來。 不過既然The MADHOUSE丸山先生都這麼說了，我總算能帶點自信，安心地走了。 確實，不用別人說我也單純地覺得，這怪點子以及細部描寫的技術就這麼消失了真的很 可惜，但也沒辦法了。 我衷心地感謝給了我站在世人面前機會的丸山先生。我真的很感謝你。 以動畫導演身分而言，今敏也夠幸福的了。 告訴雙親時真的非常的痛苦。 其實我也想趁著還能自由行動時，自己前往札幌，跟雙親報告我得了癌症這件事，但病 情惡化的速度實在快得可惡，最後我只能在最接近死亡的病房內，打了通唐突至極的電 話告訴他們。 「我得了脾臟癌，末期了，馬上就會死。能當爸爸媽媽的孩子我真的很幸福。謝謝你們。 」 突然說出口的話，並沒有醞釀很久，畢竟當時我已經被將死的預感給包圍了。 直到我回到家，好不容易度過肺炎難關時。 我下了很大的決心，才決定與雙親見面。 雙親也很想見我。 見面反倒痛苦，我也沒有氣力見面……但我說什麼都想看看他們的臉。我想當面跟他們 說，我很感謝他們生下我。 我真的很幸福。 雖然說我的生命走的比別人快了一點……這點讓我對妻子、對雙親、對我喜歡的人們都 很不好意思。 他們很快地就回應了我的任性。第二天，我的雙親就從札幌趕到我家。 剛看到我躺在床上，我媽脫口而出的那句話我畢生難忘。 「對不起！我沒有把你生成一個健康的孩子！」 我說不出第二句話。 跟雙親生活的日子並不算長，但已經夠了。 我覺得他們看到我的臉，就能明白一切，事實上也是如此。 謝謝你們，爸爸，媽媽。 能夠以你們兩人的孩子的身分誕生在這個世界上，是無比的幸福。 數不盡的回憶以及感謝，充滿了我的胸膛。 幸福本身也很可貴，但我更感激不盡的是，他們讓我培養出能感受到幸福的能力。 真的很謝謝你們。 早父母一步先走非常不孝，不過這十幾年當中，我以動畫導演的身分充分施展自己的本 領，達成了我的目標，也得到了相當的評價。唯一遺憾的是不算很賣座，但我覺得已經 足以報答他們。 特別是這十幾年來，我的生命密度是別人的好幾倍。這一點我相信雙親跟我一定都知道。 能夠跟雙親與丸山先生直接對話，讓我卸下了肩頭上的重擔。 最後，是比誰都讓我掛念，卻又直到最後都極力支撐我的妻子。 接受醫生的宣告後，我們兩個人對泣數次。這段日子，每天對我們的身心都是煎熬。甚 至無法用言詞形容。 可是，我之所以能夠熬過這些痛苦又無奈的日子，全都是因為醫生的宣告後，妳說的那 番強而有力的話： 「我會陪你走到最後。」 妳這話一點都沒有錯。彷彿是要擺脫我的擔心似的，面對那些怒濤般從各處湧來的要求、 請求，妳整理得井然有序，同時妳一下子就學會了如何照顧自己的丈夫。妳精明幹練的 模樣，讓我非常感動。 「我的妻子好厲害啊！」 都到這個地步就別說這些了？不不，是因為我深切體會到，妳比我一直以來所認為的都 還要厲害。 我相信在我死了以後，妳一定也能很順利地將今敏送走。 回想起來，結婚後我每天都忙著工作工作，現在想想唯一悠閒地待在家裡的日子，就是 罹癌之後，也真是太過分了。 可是，我身旁的妳非常明白，忙於工作的人就是有所才能的人。我真的很幸福，真的。 無論是活著的日子，還是迎接死亡的日子，我對妳的感謝都無法訴盡。謝謝妳。 還有很多事情讓我掛心的，但是一一細數就沒完沒了了。萬事都需要一個結束。 最後，是我想現在應該很難接受的……答應讓我在家裡接受癌末照護的主治醫師H醫師， 以及他的太太護理師K女士，我要對你們致上深深的謝意。 雖然在家裡進行醫療是非常不方便的，但你們仍頑強地替我想出各種方法緩解癌症帶來 的疼痛，在死亡逼近時你們也極力設法讓我過的更舒服一點，這真的幫了我很多。 不光是如此，面對這個不光是麻煩，態度也異常高傲的病患，你們跨越了工作的框框， 用更人性化的方式幫助我們。真不知道該說是你們支撐著我們夫妻，還是拯救了我們。 同時醫師賢伉儷的人品也不時地給了我們鼓勵。 真的非常非常感謝你們。 這篇文章也到了最後了。在5月半知道我壽命所剩無幾時起，不分公私給了我們異乎尋常 的盡力協助以及精神支援的兩位朋友，株式會社KON’STONE的成員、同時也是我高中時 起的好朋友T先生，以及製作人H，我要衷心感謝你們。 真的很感謝你們。從我貧乏的語彙庫當中，很難找出適當的感謝詞，但我們夫妻都深受 你們的照顧。 如果沒有你們倆，我的死恐怕會更加痛苦，同時在一旁照顧我的妻子也恐怕會我吞噬吧。 真的一切都受你們的照顧了。 儘管一直承蒙照顧，但不好意思，能夠請你們協助我的妻子，一直到我死後出殯嗎？ 這樣一來，我也能安心地「上飛機」了。 我衷心地拜託你們。 最後，感謝一路閱讀這篇落落長文章的讀者，謝謝你們。 我要懷著對世上所有美好事物的謝意，放下我的筆了。 我就先走一步了。 今 敏  （翻译by kinnsan 转自网络）\n本文转自：纪念今敏——雪夜里的拾荒人\n 看到《东京教父》这个标题，我以为会是像《教父》那样打打杀杀却又充满人情味的故事，结果完全就不是那个样子。\n一部好的作品，总会有让他发光的地方。正如上面影评里面说到的，三位主人公，醉鬼，人妖，不良少女，刚看的时候并没有什么好感，看起来都是坏坏的。然而，一个人的好坏根本不能由他的外在所决定。他们这样最渺小，最卑微的人，却有着不一般的善良。也许是遭受着苦难的人，更懂得对别人温柔。\n他们领养了被抛弃在垃圾堆中的婴儿，顶着巨大的压力，努力的照顾好这个孩子，给她找家人。在一串串巧合中，他们经历了许多奇妙的事情，找到了孩子的家人，也找到了他们自己的归宿。完美结局~\n也说不上为什么我会这么喜欢动漫（还没到疯狂喜欢的地步），可能是现实中活得太累，而动漫中的美好刚好能让自己解脱出来。动漫在我的心里，它就是一片净土，没有坏人。就算有坏人，他们也会被正义的使者擒拿住。动漫的世界，永远会那么美好。有人说，大人只分对错，小孩子才分好坏。我能想一直当个小孩子吧，我不要什么对错，我只要好。就算有坏的地方，也可以改正。\n","date":"2015-05-26","permalink":"https://www.maoxuner.cn/post/2015/05/tokyo-godfathers/","tags":["acg"],"title":"《东京教父》雪夜里的拾荒人——纪念今敏"},{"content":"故事以一名出身最底层的少年佣兵飞行员与一位身为未来皇妃的少女而展开——从小被当作政治筹码来培养而封闭了心灵的少女法娜在小时候一位名叫查尔斯的少年，少年因为与少女那次邂逅而使得自己没有走上歪路。时时光飞逝，少女成为了未来皇妃，而少年实现了自己的梦想成为了飞行员。某天，然而在某一天，上司下达了任务让查尔斯去完成，而这个任务就是用水上侦察机搭载法娜从敌人中突破飞过中央海……\n一万两千公里的旅程、一段无法实现的恋情、一个感人的故事就此开幕……\n简单的影评 实在是不会写影评，就盗别人的评论吧。\n剛剛關掉播放器, 還心有餘悸. 好像那場金色的雨還沒有停下來, 好像螺旋槳的轟鳴還在耳畔. 給這個寒冷季節帶來一點暖意. 法娜的短髮在風中招展著, 泛著銀色的光澤, 好像故事結束后王子和王妃幸福地生活在一起了一樣. 然而, 這本來就註定了不是一個幸福的故事, 真正關於幸福的故事, 都沒有甜蜜的結局, 對某個飛行員的追憶就是如此. 伴隨查魯魯的黃金雨, 心中不禁一陣陣痛楚……\n耐人回味的细节 从看到查尔斯在司令部接受任务开始，我就大概猜到了故事的内容。种族歧视什么的，在动漫中甚至在现实生活中早就习以为常了。英雄救美，然后美女替英雄包扎治疗，然后派生出一段感情的桥段也屡见不鲜。除此之外，其中有几个细节，其实还是挺喜欢的。\n超重的行李 法拉家的仆人强烈要求带上好多箱的行李，工作人员无可奈何，然后查尔斯就先答应了。待他们在另一处降落后，便请求法拉挑选出必备的物品，而扔掉其他的。法拉开始非常迷惑，然后查尔斯便耐心的讲解缘由。感觉查尔斯非常的善良呢，当然法拉也挺好，并没有富家小姐的傲娇。\n诱弹脱险时的歉意，对美好的渴望 被敌军包围时，驾机诱导导弹误打敌机，致使敌机人员丧命时说的一声“对不起”。很多动漫都是这样，身为“劣等”种族的主人公，虽然饱受“高等”种族的欺侮，却依然善良不记恨。他们都太善良，不希望别人也受到他们自己曾经经受过的痛苦。\n查尔斯向法拉吐露接受任务的原因：我才不是为了报酬，因为这是能，不是像往常那样杀人的任务，至少想做一次，能让我挺起胸膛的任务。\n有时候也想，赚上好多钱，然后到一个没有纷扰的地方，度过余生。其实，这些都可以抛弃，只要过得值，就好了。\n决斗胜利时的敬礼 这个桥段其实也挺老套了，但是在两个同样优秀的飞行员之间，在这个迫不得已的时代，这一点显得特别感人。身不由己，英雄相惜。若不是在战乱时代的不同阵营，他们也许会成为很好的朋友吧。\n黄金雨，很假，很唯美 电影的标题中有“追忆”两个字，我还以为查尔斯在护送过程中牺牲了呢。所幸，并没有。要说完美的话，当然是希望两个相恋的人能够终成眷属。但是，本着理性，为了对方的幸福，查尔斯并没有这么做，或者说法拉也并没有这么做。挥挥手，在对方的记忆里留下最美的自己。这才最唯美。或许，最好的疼爱是手放开。\n要说假，就出在黄金雨这一点上了。诚然，我是被这场景美到了。然而，又细想一下，这飘着的可是金币诶！那种状态下不应该刷刷刷的抛物线往下落么。要是砸中机翼了，不得坠机咩~ 动漫美，美就美在生活中没有。\n","date":"2015-05-20","permalink":"https://www.maoxuner.cn/post/2015/05/%E5%AF%B9%E6%9F%90%E9%A3%9E%E8%A1%8C%E5%91%98%E7%9A%84%E8%BF%BD%E5%BF%86/","tags":["acg"],"title":"《对某飞行员的追忆》"},{"content":"讲的是二战期间的纳粹德国，商人奥斯卡·辛德勒对战争中无辜受到屠杀的犹太人感到痛心，利用他圆滑的手段，与纳粹官员们周旋，编纂犹太人名单，救助犹太人的故事。商人本以利为重，但是跟千万人的性命相比，金钱可有可无。\n战争中每个人都是受害者 抛开电影不谈，战争让我感到痛心，最最痛心的是战争中无辜的孩子。战争一旦开始，每个人都是输家，任何一方都会遭受无尽的伤害。战争中，每个人都是受害者，不管是小孩、大人还是士兵。\n我看过的战争题材的电影中，有三部电影让我印象深刻。《辛德勒的名单》、《美丽人生》和《拯救大兵瑞恩》。\n《辛德勒的名单》 这部电影中让我印象最深刻的就是一个小孩，独自一人，为了避免被抓去做实验，到处躲藏，最终跳进粪坑的情节。隔着屏幕，我似乎都闻到了恶心的臭味。然而这些无辜的生命，提醒吊胆着，在这样恶劣的地方寻求安全。\n《美丽人生》 《美丽人生》虽然是战争的题材，却没有《辛德勒的名单》那么凄凉。也许是因为这个伟大的爸爸吧，他努力的表演着，让自己的儿子误以为这个残酷的世界只是在玩一个游戏。 我记得最深刻的却似乎是个不重要的情节：爸爸跟妈妈表白时说了一句话，我想一辈子跟你做爱。很难说这就是最好的爱情，但是我知道，这一定是很爱很爱对方。 另外还有个印象深刻的就是，成堆的尸体，阴森森的恐怖。我常常会做这样一个梦，或是战争前线、或是僵尸来袭，我在满地的尸体中逃跑。跑得久了，累了，死亡越来越近，我好想就地一躺，混在这堆尸体中，逃过一劫。然而，战争中会被扫射，僵尸也能闻到活物的气息。终究是逃不过伤害。\n《拯救大兵瑞恩》 电影的前半段相对比较轻松，后半段阻碍敌军、坚守阵地的情节就异常的紧张了。最深刻的是弹尽粮绝之时，两方士兵拼刺刀的情景。为什么呢，两个素未平生的人，只因为所穿的服装不同，在那一刻就要拼尽力量，分出你死我活。当刺刀刺进另一个士兵的胸膛的时候，我的心似乎也跟着停止了跳跃。细思极恐。幸好我出生在和平年代。\n严谨的态度正视历史 要说印象深刻，南京大屠杀纪念馆也让人触目惊心，300000。记得前阵子，村上春树因为这件事推上了风口浪尖。他的新书《刺杀骑士团长》中提到南京大屠杀的人数有400000。后来看到一则评论说，300000跟400000之间有什么区别呢，哪怕是200000甚至是100000，都不可否认这一事件的性质：屠杀。精确的数据已经不可考，然而血淋淋的事实摆在这里：这是一场惨绝人寰的屠杀！重要的不是有多少人受难，重要的是这个事件的性质，是这个事件的加害者和受害者。\n日本右翼一直在否认南京大屠杀，甚至把歪曲的事件写入了教科书。更有甚者，APA酒店将这些歪曲的观念编纂成书籍，在酒店里发放，潜移默化，给全世界的人洗脑。他们机关算尽地美化甚至否认侵华的种种罪行。\n相比之下，我们国内又好到哪里去呢？一个词，抗日神剧。“手撕鬼子”、“裤裆藏雷”、“包子炸弹”等等，屡见不鲜，简直“创意非凡”。宣传这一惨痛的历史很重要，但这些神剧似乎在以一种嬉笑的态度在编纂历史。倘或几十年后的小孩，同时看到了APA的宣传书籍，以及这些抗日神剧，他会觉得这样一个嬉笑怒骂的神剧才是历史的真传么？写出这种剧本的主编简直是败类，而让这些神剧审核通过的广电总局简直是汉奸。不，他们连汉奸都不如。汉奸在跟鬼子打交道时至少还说了真话，这些主编，这个广电总局，尽胡说八道。\n低调的向以上被我喷了的对象道个歉。\n正视历史，接受历史。铭记历史，展望未来。\n未来 虽然说我出生在和平年代，然而，动荡的中东，第三世界依然战争频发。好多小孩在战火中担惊受怕，饱受饥饿。希望所有人童年的记忆中不再有战争\n","date":"2015-04-13","permalink":"https://www.maoxuner.cn/post/2015/04/schindler-list/","tags":["movie"],"title":"《辛德勒的名单》愿童年的记忆中不再有战争"},{"content":"阿甘（汤姆·汉克斯 饰）于二战结束后不久出生在美国南方阿拉巴马州一个闭塞的小镇，他先天弱智，智商只有75，然而他的妈妈是一个性格坚强的女性，她常常鼓励阿甘“傻人有傻福”，要他自强不息。\n阿甘像普通孩子一样上学，并且认识了一生的朋友和至爱珍妮（罗宾·莱特·潘 饰），在珍妮和妈妈的爱护下，阿甘凭着上帝赐予的“飞毛腿”开始了一生不停的奔跑。\n阿甘成为橄榄球巨星、越战英雄、乒乓球外交使者、亿万富翁，但是，他始终忘不了珍妮，几次匆匆的相聚和离别，更是加深了阿甘的思念。 有一天，阿甘收到珍妮的信，他们终于又要见面……\n相信美好 永远相信美好的事情即将发生。\n看完这部电影，突然觉得：活着，总会有好事发生。不管你是否历经着各种坎坷，要善良、乐观，还有一点，要活着，终有一天会有好事发生。\n要说的话，阿甘真的是非常非常不幸。我觉得妈妈非常了不起，她的教育让阿甘勇敢善良乐观。先天智障，也许阿甘也因此而幸运。智力缺陷，因此他也不会想得太多。很傻很天真，傻人有傻福吧。\n让我觉得最催泪的片段是，阿甘得知小福雷斯特是他儿子时，又激动，又担忧。他颤抖着、不知所措地问小福雷斯特是否也有智力问题。这里，我觉得很辛酸。阿甘清楚自己有智力障碍，也知道这给自己带来了很多很多苦难。还好，小福雷斯特很聪明。\n Life is a box of chocolate,you never know what you are gonna get.\n 突然想到这句台词，是妈妈给阿甘解释生活的各种磨难和幸福的话。我想，这句话最能体现出我的感觉了：活着，总会有好事发生。也许你现在吃到的是一颗苦涩的黑巧克力，但只要活着，你总会吃到香甜的白巧克力。\n接受苦难  Death is a part of life.\n 这句台词在电影中出现了两次，一次是妈妈，另一次是珍妮。 自己长得越大，也越来越担心亲人的离去。看到这句话，稍释然。有一天，我也会的，虽然我很害怕。\n喜欢一个人 喜欢着一个人，总会不经意的在生活的各个方面提及她的名字。正如，阿甘给渔船命名Jenny。\n有时我也这样，发着呆，不知不觉，就在草稿纸上写下了她的名字。\n","date":"2015-04-09","permalink":"https://www.maoxuner.cn/post/2015/04/forrest-gump/","tags":["movie"],"title":"《阿甘正传》活着，总会有好事发生"},{"content":"如果有可能，我倒是希望做个山顶野人。居住的小屋，休憩的树屋，神秘的山洞。花草树木，专猎野猪。\n故事的主人公，名叫云天河。在遇到伶俐的盗墓贼韩菱纱之前，他是个彻头彻尾的山顶野人。云天河算是第一次见到女人这种生物。在韩菱纱的带领下，云天河下山了，寻觅往事、求仙问道。漂泊的路上，结识了天仙般美貌的官家千金柳梦璃、拥有剑仙般浩然正气的慕容紫英。随着那掩埋在岁月风沙之下的往事日渐清晰，山野少年尝尽红尘俗世的喜怒哀乐与悲欢离合。\n我想，每个宅男的记忆里都有一个影音贩卖小店吧。第一次去这家店，是哥哥带我去的。后来，我也来了好多次。买了很多系统光盘，很多游戏光盘，甚至还有小霸王的游戏卡。仙4大概就是这段时间买的吧。刷怪确实是挺无聊的，死了N次，终于是到了柳州，找到了梦璃。后来便不了了之了。\n09年，我初中毕业，电视剧仙剑3上映。长卿与紫萱几世轮回让我心痛，一首《偏爱》让我偏爱了好久。学过了很多古文，最最喜欢的是《邹忌讽齐王纳谏》。吾妻之美我者，私我也。私，偏爱。愿许一人以偏爱，尽此生之慷慨。\n仙剑系列的口碑都很不错。感人至深的情节，荡气回肠的结局，不绝于耳的配乐。点点滴滴都极致完美。推荐主题曲《回梦游仙》,凄凉中透着希望。\n","date":"2015-04-02","permalink":"https://www.maoxuner.cn/post/2015/04/pal4/","tags":["acg"],"title":"《仙剑奇侠传4》游戏"},{"content":"喜欢上一首歌，或因为旋律，萦绕不绝，或因为歌词，触动心弦。\n情人最后难免沦为朋友。《十年》\n在有生的瞬间能遇到你，竟花光所有运气。《明年今日》\n神剪辑 突发奇想，将陈奕迅唱的《十年》和《明年今日》，以及中孝介唱的日文版《明年今日》混插到一个音频里面了。听起来效果一级棒。\n 陈奕迅 十年  明年今日  中孝介 明年今日 ","date":"2015-03-30","permalink":"https://www.maoxuner.cn/post/2015/03/decade/","tags":["music"],"title":"《十年》《明年今日》 陈奕迅中孝介"},{"content":"如果说有一只眼能让我们理解《超能陆战队》所有走心之处的话，那这只眼就是Baymax与他的发明者Tadashi实际上是同一个人。或者说，那张写有Tadashi名字的绿色芯片，承载的不仅仅是哥哥所编写的治愈程序，而且继承了哥哥那充满治愈色彩的灵魂。\n所以你会看到当Hiro坐在哥哥的摩托车上和坐在Baymax的后背上时，面对玻璃中转瞬即逝的自己显露出相同的兴奋；所以你会看到当Tadashi面对烈火燃烧的学院和Baymax面对即将崩溃的星门时，显露出如出一辙的救人信念；所以你会看到明明只设定了治愈弟弟一个人的程序，Baymax也依然会对暴走后误伤的同学们显露出关爱；更所以你会知道在星门里Baymax用那超越程序的智慧完成对Hiro的奋力一推，实际上并没有超越哥哥对弟弟的深切关怀。\n影片最感人的地方不是Tadashi牺牲自我投身火场的那场戏，而是他通过在Baymax上的录像设备重新在Hiro面前出现的那场戏。虽然这段录像仅仅是记录了制作Baymax的80多次失败经历，但它足以证明，Tadashi已经为Baymax献出了所有的精力，他把自己对弟弟的所有爱都融在了这个自己一生的发明之中。正像Baymax一直说的那样，Tadashi并没有死，他一直就在这里。\nBaymax是Tadashi对关爱与治愈理解的具象化呈现。这样的治愈需要可以信赖的结实筋骨，这样的治愈需要一个柔软且永不会伤人的外在，这样的治愈需要一个让人看着心里就觉得舒服的可爱外表，这样的治愈需要一个听上去永远不会腻烦的动人声音，这样的治愈需要在你寒冷的时候能给你温暖，这样的治愈需要在你擦伤的时候能给你涂药，这样的治愈需要随时询问你情况的关切，这样的治愈还需要兼具治疗身体和治疗心灵的双重能力。\n影片讲述了一个人如何在另一个人心中、如何在世人的心中永存的故事。Hiro一直在努力希望通过编程让Baymax成为他想让其成为的机器人，而Baymax则通过自己永不改变的底层程序，将Hiro治愈并且改变。\n《超能陆战队》看上去像是又一个英雄联盟行使英雄职能的正篇故事的前传，不过显然这一前传的前半部分比后半部分更加走心。因为《超能陆战队》中涉及兄弟情谊并通过Baymax完美体现的这条心灵线索，要比几个学生组队成为新的英雄联盟的任务线索要有价值意义得多。英雄联盟组建时的那张剧照，在遇到Hiro和Baymax生活照的时候，可以说在情感上一无所有。英雄联盟靠科技和武力击败了强大敌人这个任务线索的终结，在面对Hiro继承了Tadashi的博爱精神去救助一个陌生女孩这个心灵线索的终结之时，也会显得那么不值一提。\n值得一提的是，这种感觉和《机器人总动员》似乎有异曲同工之处，两个机器人所代表的程序化生命的世界，都比他们加入世俗世界后所做的事情要更加有趣。在复杂现实世界生活的人们，其实更希望看到机器生命那简单的逻辑和纯朴的诉求，并乐于被其治愈。而让他们加入自己的复杂生活嘛，还是算了吧。\ninside\n 转自【萌系】《超能陆战队》：化身成Baymax的哥哥\n","date":"2015-03-11","permalink":"https://www.maoxuner.cn/post/2015/03/big-hero-6/","tags":["movie"],"title":"《超能陆战队》影评：化身成Baymax的哥哥"},{"content":"上映第二天，去了电影院。\n开播之前，放眼望去不是带小孩子的家庭组合就是情侣or女子组合。我还在心想我一个男的来看到底合适不合适。\n可是剧情过半之后，泪腺完全崩溃，直到最后结尾，止都止不住。\n 这真的是一部完全不同于普通哆啦A梦剧场版的作品。\n剧情来说，几乎完全没有新的内容，就是拣了重要的几段重新描述了一遍。方便老朋友们回忆，方便新小朋友理解剧情。\n对于孩子们来说，这只是一部还不错的动画片电影。\n对于那些在黑暗中抹泪的大朋友们来说，我想，是勾起了很多的回忆吧。不单单是那些哆啦A梦漫画电视电影陪伴的日子，还有那些在成长中消失在你身边的人们。\n8月9号，刚好又是一个好友结婚的大喜日子。很遗憾，我依然无法出席。\n看到未来的大雄对着睡着的多啦轻轻一笑，对年轻的大雄说：不，还是算了吧。哆啦a梦是你的，也是我小时候的朋友。你要好好珍惜和哆啦a梦在一起的时间哦。\n我就开始忍不住。\n有多少人，在你成长的路上一路相伴，给你带来欢笑和力量，又在你成长的路上，渐渐消失。\n听到多啦要走了之后，大雄独自一人面对胖虎被打到不成人样依然坚持直到最后胖虎认输。\n我们又何尝不是，失去了庇护，直面了软弱，最终一个人，在这个社会变的坚强而勇敢。\n到最后大雄可以靠着多啦留下的道具召回自己的小伙伴，可是我们的青春，就这样随风而去不见了。而在那些记忆里可爱的人儿们，也终究只剩下了记忆。\n再也回不去了。\nStand by me，哆啦A梦。谢谢你们，我曾经的小伙伴们。\n岚山下\n 转自每个人，终究要学会一个人独自长大\n","date":"2015-03-10","permalink":"https://www.maoxuner.cn/post/2015/03/stand-by-me/","tags":["acg"],"title":"《哆啦a梦：伴我同行》影评：每个人，终究要学会一个人独自长大"},{"content":"《帕丁顿熊》是一部很有趣的电影，这种有趣既体现在以一直蠢萌的动物做主角所带给观众的疗愈感，同时也体现在英国人在影片中所呈现的那种一本正经式的幽默，再加上十分轻松过无害的剧情以及时而出现的冷笑话，当然还有围绕家庭核心的叙述方式，都让这部《帕丁顿熊》成为这个阴冷的3月最能让人感到暖意十足的电影。\n很有意思的对比是，《帕丁顿熊》以伦敦为故事背景，这个以阴冷、雾气、多雨著称的地方，看上去似乎并不那么温暖。但实际上在影片中，当一只来自异域的小熊在经常下雨的伦敦无家可归时，善良的布朗家庭便收留了它。《帕丁顿熊》用很明显的色调对比来凸显了这种感觉，室外场景多以阴雨等暗色调为主，室内场景则以暖色、代表生命力的细节来强调和凸显了家庭的力量。于是，在一个整体的冷峻环境之下，布朗一家和小熊帕丁顿为观众奉上的，正是一出合家欢的温情戏码。\n显然，家是作为一个核心概念贯穿着整部影片。电影开始，帕丁顿的叔叔、阿姨就和年幼的帕丁顿组成了逗趣、温暖的家庭，可惜好景不长，一场地震摧毁了象征着家的树上巢穴。房子的毁灭象征了家庭的解体，于是年幼的帕丁顿只能踏上自己的公路之旅，从秘鲁来到叔叔和婶婶口中的那个伦敦。伦敦在影片一开始，就作为一个意象存在，由地理学会的探险家远道带来，成为熊一家的遥远梦想。于是地震结束，无家的小帕丁顿就漂洋过海，偷渡到了伦敦。此时，将帕丁顿看成是一个都市的流浪儿也未尝不可，在都市街道的游走、地铁站的迷茫等等，影片都在描绘帕丁顿的孤独与无助，这种与无家所捆绑起来的情感刺激，正好铺垫从地铁中走出的布朗一家人，尽管看上去斗嘴和混乱，但家庭的温馨和紧密却是由内而外散发出来的，这也正是帕丁顿熊所缺少的。于是，无家的小熊和有爱的家庭，就天然的产生了联系，走在了一起。影片在此贡献了不少有趣的段子，帕丁顿熊与文明的冲突正是产生影片中笑料的基本原因，而从叙事节奏来看，这一段插科打诨式的情节，也恰切的让人们感受到了这头小熊的萌态和布朗一家人奇趣的随和。\n正是得益于布朗一家人的奇怪，才让他们收留一个无家可归的小熊显得非常自然。看看表演阵容，《唐顿庄园》里的老爷饰演一个爱叨叨、一切以数据说话的一家之主，扮演妻子的莎莉·霍金斯更是以演神经质的角色出名，甚至给帕丁顿配音的本·维肖也是英国的另类演员，包括布朗夫妇的两个孩子，女儿遭遇青春期，儿子则似乎是个科技怪咖。怪而不诡异，这一家人似乎就是注定要组成一个家庭，再加上一个更是异于人类的帕丁顿熊，简直就是怪异之家。但是近年来越来越多的作品都乐意于从边缘、怪异出发，却描绘存在于人类身上的温情的人文关怀。与本片而言，亦是如此，布朗一家从最开始对帕丁顿熊的排斥到最后欣然认可，整个过程衔接顺畅并且情绪自然，观众也得以感受到这种人类对宠物善意的释放。\n于是，小熊帕丁顿从无家到有家，短暂的由分到合之后，又遭遇了妮可·基德曼饰演的“坏巫婆”式角色的捣乱，小熊帕丁顿重新成为一个被遗弃的“孤儿”。\n影片的这个段落，能够让人感伤的联想到很多家庭曾经遭遇过的宠物丢失的情境，帕丁顿走了，布朗一家失落的感受到这个小动物对自己的重要性，在爱情和家庭“团圆”的感召之下，一家人得以铤而走险，与女魔头展开了对抗，最终也得以赢回了帕丁顿和家庭的圆满。\n显然，这是一部相当合家欢的作品，融合了公路、冒险等元素，增添了影片的可看度，但整体故事通俗易懂，节奏轻快，表演也充满了谐趣，很是适合全家老小上阵观看，是一部相当无害，同时又宣扬了家庭、友爱这样的价值观，成功的跻身成合家欢电影的典范之作。\n当然，如果将影片不单纯看做是一部合家欢的商业电影的话，那么这部《帕丁顿熊》显然充溢着一些意识形态的色彩，白人冒险家来到南美洲的原始森林，恰巧探访到地球上的濒危动物，出于人道主义的精神，白人冒险家选择将这段往事保密。但他西式的日常生活显然影响了原初的熊一家，于是伦敦和伦敦的生活才得以成为他们日夜憧憬的对象。当家园毁灭，他们来到了伦敦，在这里经受着文化的洗礼和礼教的熏陶，那只彬彬有礼的小熊既让人感到开心，同样其过于英国化的绅士风度显然也说明这显然也暗含着一种意识形态的指涉，再考虑到英国本身日不落的自尊式想象，那么这部《帕丁顿熊》所体现的政治色彩也并非是空穴来风。\n当然，《帕丁顿熊》总是还差了一些什么，比如虽然以帕丁顿的眼睛去呈现了伦敦这座城市，但似乎除了那几个街头艺人之外，就没有其他让人印象深刻的地方。再比如冲突太淡，缺了点让人提心吊胆的惊喜……但是，在这个卖萌的三月，前有大白，后有帕丁顿这头蠢萌又无公害的小熊，能够在《帕丁顿熊》中感受到这个世界的暖意，就够了。\n文/达达先生\n 转自《帕丁顿熊》影评：一只小熊的公路片 暖意十足\n","date":"2015-03-10","permalink":"https://www.maoxuner.cn/post/2015/03/paddington/","tags":["movie"],"title":"《帕丁顿熊》影评：一只小熊的公路片 暖意十足"},{"content":"在折腾树莓派/香蕉派的时候，想直接复制img镜像中的文件。烧录到SD又太麻烦，就想找找有没有能直接挂载img的方式。这一找，果然还真有。\n大体上分手动分配loop设备和自动分配loop设备两种方法。\n手动创建loop设备  先查看第一个空闲loop设备 sudo losetup -f /dev/loop0   使用上一步得到的设备名，第一次创建loop设备 sudo losetup /dev/loop0 bananian-1501.img   查看信息 sudo fdisk -lu /dev/loop0  输出内容\nDisk /dev/loop0: 1.9 GiB, 2032664576 bytes, 3970048 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x6c70c806 Device Boot Start End Sectors Size Id Type /dev/loop0p1 2048 43007 40960 20M 83 Linux /dev/loop0p2 43008 3970047 3927040 1.9G 83 Linux  可以看到，这个镜像有两个分区（loop0p1和loop0p2）。从第2048扇区开始（Start列），每扇区512字节(Units = sectors of 1 * 512 = 512 bytes)，我们算出offset，下面mout命令会用到。\n2048*512=1048576 43008*512=22020096   挂载 mkdir boot root sudo losetup -o 1048576 /dev/loop1 bananian-1501.img sudo mount -o loop /dev/loop1 boot sudo losetup -o 22020096 /dev/loop3 bananian-1501.img sudo mount -o loop /dev/loop3 root ls boot root  输出结果\nboot: fex script.bin uEnv.txt uEnv.txt.video-acc-off uEnv.txt.video-acc-on uImage root: bin boot dev etc home lib lost+found media mnt opt proc root run sbin selinux srv swapfile1 sys tmp usr var    自动创建loop设备 fdisk可以直接查看img文件，mount可以自动创建loop设备，所以上面步骤可以简化\n 查看信息 sudo fdisk -lu bananian-1501.img  输出结果\nDisk bananian-1501.img: 2032 MB, 2032664576 bytes 255 heads, 63 sectors/track, 247 cylinders, total 3970048 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk identifier: 0x6c70c806 Device Boot Start End Blocks Id System bananian-1501.img1 2048 43007 20480 83 Linux bananian-1501.img2 43008 3970047 1963520 83 Linux  同样的方法计算出offset\n2048*512=1048576 43008*512=22020096   直接mount mkdir boot root sudo mount -o offset=1048576 bananian-1501.img boot sudo mount -o offset=22020096 bananian-1501.img root ls boot root  输出结果\nboot: fex script.bin uEnv.txt uEnv.txt.video-acc-off uEnv.txt.video-acc-on uImage root: bin boot dev etc home lib lost+found media mnt opt proc root run sbin selinux srv swapfile1 sys tmp usr var  手动计算offset略微有点麻烦，可以利用expr命令。将挂载命令中offset后面的数值替换成expr命令的运算值即可，注意用反引号`。例如上面两条挂载命令可以改成以下命令。\nsudo mount -o offset=`expr 512 \\* 2048` bananian-1501.img boot sudo mount -o offset=`expr 512 \\* 43008` bananian-1501.img root    参考文章  [教程]挂载archlinux的img文件 ","date":"2015-02-24","permalink":"https://www.maoxuner.cn/post/2015/02/mount-raw-img/","tags":["linux"],"title":"Linux挂载Raw格式的img文件"},{"content":"很多强迫症患者想要给U盘设置个小写的卷标，可是在windos里面修改后，总是被改成大写的了。本文将教你怎么设置小写或者大小写混合的卷标。\n本文以Diskgenius做演示，其他分区软件大概也可以吧。\n 删除U盘的盘符 设置你想要的卷标 重新分配盘符 安全卸载U盘，并重新插上U盘  OK，大功告成。新技能 get √。具体看下图演示的方法\n","date":"2015-02-03","permalink":"https://www.maoxuner.cn/post/2015/02/u-label/","tags":["windows","usb"],"title":"Fat32格式优盘设置小写卷标"},{"content":"想必，大多数人都是跟我一样玩树莓派的，把树莓派作为一台服务器，接入路由器下的局域网。没有显示器，也没有用TTL。树莓派的控制可以用SSH。然而，要是路由器死机重启，树莓派就失去控制了。另外，树莓派运行多天后好像也有断网的情况。遇到这种情况，就只能暴力的拔电源了。有木有一种和平一点的方式呢。自然，这是有的。搜罗了整个互联网，总算是找了两个挺不错的解决方案。\n方案一（爱板网 树莓派教程三——自动断网重连） 这是我找到的第一个方案，它需要两个定时任务，一个用于网络不通时重启网络，另一个用于长时间网络不通时重启系统。原理是获得预设网站连接后返回的参数，如果正常访问则计数器加1，当计数器记录的个数等于0时，就重启网络。长时间网络不通，则重启树莓派。\n下面正式讲述该方案的具体内容\n 该方案的脚本中调用了curl命令，因此需要安装curl工具 sudo apt-get install curl   在/etc/network/if-down.d/目录创建检测网络重启网络的脚本net_restart.sh sudo nano /etc/network/if-down.d/net_restart.sh  然后在该文件中写入以下代码\n#!/bin/bash #value define urls=(\u0026quot;www.baidu.com\u0026quot; \u0026quot;www.2345.com/?kuwait\u0026quot;) http_code=(\u0026quot;200\u0026quot; \u0026quot;301\u0026quot; \u0026quot;302\u0026quot; \u0026quot;404\u0026quot;) count=${#urls} connected=0 echo \u0026quot;now start to check net is on or not!\u0026quot; echo \u0026quot;bash file in /etc/network/if-down.d/net_restart.sh\u0026quot; #check net is conneted or not for ((i=0; i \u0026lt; $count; i++)) do url=${urls[$i]} result=$(curl -o /dev/null -s -m 10 -w %{http_code} $url) for flag in ${http_code} do if [ $flag = $result ];then connected=$(expr $connected + 1) fi done done #if net is down then restart if [ $connected -eq 0 ];then echo \u0026quot;network is not very well !\u0026quot; echo \u0026quot;now restart net !\u0026quot; /etc/init.d/networking restart /sbin/ifup wlan0 /sbin/ifup eth0 fi  然后ctrl+o保存，ctrl+x退出 给net_restart.sh添加可执行权限\nsudo chmod +x /etc/network/if-down.d/net_restart.sh   同理在/etc/network/if-down.d/目录创建检测网络重启系统的脚本net_reboot.sh sudo nano /etc/network/if-down.d/net_restart.sh  然后在该文件中写入以下代码\n#!/bin/bash #value define urls=(\u0026quot;www.baidu.com\u0026quot; \u0026quot;www.2345.com/?kuwait\u0026quot;) http_code=(\u0026quot;200\u0026quot; \u0026quot;301\u0026quot; \u0026quot;302\u0026quot; \u0026quot;404\u0026quot;) count=${#urls} connected=0 echo \u0026quot;now start to check net is on or not!\u0026quot; echo \u0026quot;bash file in /etc/network/if-down.d/net_restart.sh\u0026quot; #check net is conneted or not for ((i=0; i \u0026lt; $count; i++)) do url=${urls[$i]} result=$(curl -o /dev/null -s -m 10 -w %{http_code} $url) for flag in ${http_code} do if [ $flag = $result ];then connected=$(expr $connected + 1) fi done done #if net is down then reboot if [ $connected -eq 0 ];then echo \u0026quot;network is not very well !\u0026quot; echo \u0026quot;now start to reboot !\u0026quot; killall motion reboot fi  然后ctrl+o保存，ctrl+x退出 再同样给net_reboot.sh添加可执行权限\nsudo chmod +x /etc/network/if-down.d/net_reboot.sh   试运行脚本 sudo /etc/network/if-down.d/net_restart.sh sudo /etc/network/if-down.d/net_reboot.sh   测试脚本是否能正常工作 sudo ip link set eth0 down \u0026amp;\u0026amp; sudo ip link set wlan0 down \u0026amp;\u0026amp; sudo /etc/network/if-down.d/net_restart.sh \u0026amp;\u0026amp; sudo /etc/network/if-down.d/net_reboot.sh   最后添加定时任务 sudo crontab -e  在文末添加以下代码\n*/20 * * * * /etc/network/if-down.d/net_restart.sh 0 17 */1 * * /etc/network/if-down.d/net_reboot.sh  该定时任务的意思是，每隔20分钟，执行net_restart.sh脚本，每天17:00执行net_reboot.sh脚本\n 最后，重启定时任务程序，让定时任务生效 sudo /etc/init.d/cron restart  仔细对比上面两个脚本的代码，会发现代码的主体部分都是一样的，只是最终激发的动作不同而已：一个是重启网络，一个是重启系统。我觉得该方案稍微有点繁琐了，不能及时解决问题，并且还一定要连上外网才行。不过，不管黑猫白猫，抓到老鼠就是好猫，这个方案能用就行了。 至此，方案一的内容就结束了。下面你就可以人为断开网络试试咯。\n  方案二（hugozhu） 好东西是要用来压轴的，这个方案是我前不久找到的，代码简洁，易用，我非常喜欢。一般而言，该方案是针对树莓派连接路由器的情况。其实，我觉得这个方法更通用。只要能指导路由器所连网络上游的服务器的ip即可。假设路由器的ip是192.168.1.1\n该方案的原理是，每隔15分钟检查一下，树莓派能否ping通路由器，如果不能，则重启网络。重启网络后再次检测，如果还不通，则重启系统。同时在指定目录生成日志文件。\n下面开始该方案的具体讲述\n 首先，和第一个方案一样，在/etc/network/if-down.d/目录创建检测网络的脚本checknetwork.sh 然后在该文件中写入以下代码 #!/bin/bash #export PATH=/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin ping_count() { count=0 `timeout 5 ping 192.168.1.1 | while read LINE; do { if [[ \u0026quot;${LINE}\u0026quot; =~ \u0026quot;64 bytes from\u0026quot; ]]; then let \u0026quot;count = $count + 1\u0026quot; echo \u0026quot;export count=$count\u0026quot; fi } done` echo $count } #echo $(ping_count) if [[ $(ping_count) \u0026lt; 1 ]]; then #ifconfig wlan0 #ifconfig wlan0 down #sleep 1 #ifconfig wlan0 up #sleep 1 #netcfg -r wlan0 #sleep 5 echo \u0026quot;Error: network is down , restarting network now...\u0026quot; /etc/init.d/networking restart /sbin/ifup wlan0 /sbin/ifup eth0 sleep 5 if [[ $(ping_count) \u0026lt; 1 ]]; then echo \u0026quot;Fatal error: wifi is down , rebooting now...\u0026quot; reboot fi fi  然后ctrl+o保存，ctrl+x退出 同样，给checknetwork.sh添加可执行权限\nsudo chmod +x /etc/network/if-down.d/checknetwork.sh   试运行脚本 sudo /etc/network/if-down.d/checknetwork.sh   测试脚本是否能正常工作 sudo ip link set eth0 down \u0026amp;\u0026amp; sudo ip link set wlan0 down \u0026amp;\u0026amp; sudo /etc/network/if-down.d/checknetwork.sh   接下来创建定时任务 sudo crontab -e  在文末添加以下内容\n*/20 * * * * /etc/network/if-down.d/checknetwork.sh \u0026gt;\u0026gt; /home/pi/checknetwork.log 2\u0026gt;\u0026amp;1   最后，重启定时任务程序，让定时任务生效 sudo /etc/init.d/cron restart  至此，方案二讲述结束。可以愉快的玩耍了。\n  参考文章  树莓派教程三——自动断网重连 使用Ping来检查网络连通性 ","date":"2015-02-03","permalink":"https://www.maoxuner.cn/post/2015/02/rpi-check-network/","tags":["rpi","linux"],"title":"树莓派断网检测自动重连"},{"content":"本文年代久远，可能已经不适用。仅供参考！\n创建UD隐藏引导分区的好处是，可以随意修改U盘课件存储的文件，而不会影响U盘上安装的启动分区。制作UD隐藏分区，我推荐FbinstTool这个软件，小而精悍。\n制作教程 插上你的U盘（TF卡也行啊）记得要备份原来U盘上的数据哦，下面的操作要格式化磁盘的 打开FbinstTool.exe，这时候U盘上还没有ud隐藏分区。\n打开菜单“启动设置”然后选择“格式化”然后按照下图的提示设置。\n然后点“格式化”，然后依次点“是 是 确定” 接着在桌面创建ISO文件夹，把wowpc.iso TangoPE.iso Win7PE.iso三个文件放到这个文件夹（启动镜像也可以换成自己喜欢的，但是注意要使用英文文件名，不能有特殊字符和空格！） 然后在下图“（ud）”处右击，选择导入文件夹，然后导入桌面的ISO文件夹，直到提示成功\n接着，单击下图标记的“ISO”文件夹，会发现“wowpc.iso”存放区域是主数据区 在右边窗口右击“wowc.iso”，然后选择“移到扩展数据区”，完成后，存放区域也会变为扩展数据区为什么要移动呢？具体的自己测试吧，諾小豬没有移动的时候，变色龙引导就用不了了。\n至此，点击菜单栏中的“工具”，然后“更新grldr”，接着是“(ud)/grldr”这样就进入了下面的窗口 接下来的过程需要连接互联网，先点“获取版本”，然后下面出现这些日期，接着点“更新”\n更新完毕就会出现成功窗口，点击“确定”即可\n下面编辑grub引导菜单，先复制下文的代码（注意只要选择代码部分，前面的行号不需要选择）\npxe detect configfile default 2 timeout 5 title TangoPE map (ud)/ISO/TangoPE.iso (0xff) map --hook chainloader (0xff) title Win7 PE map (ud)/ISO/Win7PE.iso (0xff) map --hook chainloader (0xff) title Win8_PE_x86_x64_v19.911_SP2 root (hd0,0) map /Boot/ISO/Win8_PE_x86_x64_v19.911_SP2.iso (0xff) map --hook chainloader (0xff) title /Boot/Boot.iso map (hd0,0)/Boot/Boot.iso (0xff) map --hook chainloader (0xff) title Chameleon root (ud) map /ISO/wowpc.iso (0xff) map --hook chainloader (0xff) title Advanced configfile (hd0,0)/boot/menu.lst commandline  如下图，单击“Grldr菜单”按钮，在下文代码框处右击鼠标，然后选择“全选”，接着在选择后的文本上右击弹出菜单，选择“粘贴”，最后按住键盘组合键“ctrl+s”保存编辑的Grldr菜单\n至此，你的（ud）隐藏分区的PE维护系统就做好了，如果操作过程中没有出现任何错误，那么就可以正常使用了。 这时，你可以单击“Qemu测试”菜单，进入Qemu虚拟机测试引导是否成功。由于这个虚拟机尚不完善，只能用来测试引导是否成功。 下面是我的演示\n为了方便拓展引导其他系统，所以设置了以下两个选项\n/Boot/Boot.iso Advanced  使用方法 懒人法\n在U盘储存分区下（非（ud）分区）创建/Boot文件夹，把需要引导的ISO镜像文件改名为Boot.iso并复制到/Boot，引导时选择/Boot/Boot.iso\n手动法\n在U盘储存分区下（非（ud）分区）创建/Boot文件夹，复制menu.lst文件到/Boot（注意：本文提供的menu.lst文件仅供参考，可能要根据实际情况稍作修改），创建/Boot/ISO文件夹，并把ISO镜像复制到该文件夹（推荐，其实只要在U盘储存分区即可）比如我引导的Win8PE就在这个文件夹下面，在menu.lst文件中添加相应的引导项，引导时选择“Advanced”，再选择相应的启动项\n当然啦，有了强大的Grub，自然还能添加其他引导项啦。在此不赘述了。\n文件下载  FbinstTool_1.607.2014.826.zip ","date":"2015-02-03","permalink":"https://www.maoxuner.cn/post/2015/02/fbinsttool-ud/","tags":["usb"],"title":"FbinstTool制作U盘隐藏启动分区 ud隐藏分区 U盘多维护系统 引导ISO镜像"},{"content":"本文适用于树莓派1B+。其它板子未经过测试，可参考ArchlinuxARM官方文档。 首先，需要一个linux环境，系统的安装需要用linux环境复制文件，把sd或tf连接到装有linux环境的电脑上。\n详细步骤 未说明的情况下，默认以root用户执行所有命令\n 打开终端，对sd分区，把下文中的sdX换成sd在系统中实际显示的名称，如sda或者sdb fdisk /dev/sdX   然后使用fdisk命令进行分区操作，步骤如下： 输入 o 并回车，这将会删除所有分区 输入 p 并回车，这将会列出所有分区，此时应该没有任何分区 输入 n 并回车，创建新分区，引导分区 输入 p 并回车，新分区为主分区 输入 1 并回车，分区序号是1 按键盘回车，默认初始扇区 输入 +100M 并回车，设置终止扇区 输入 t 并回车，再输入 c 并回车，设置该分区文件系统格式为Fat32 输入 n 并回车，创建新分区，根分区 输入 p 并回车，新分区为主分区 输入 2 并回车，分区序号是2 按键盘回车，默认初始扇区 按键盘回车，默认终止扇区 输入 w 并回车，写入设置   格式化分区 mkfs.vfat /dev/sdX1 mkfs.ext4 /dev/sdX2   创建挂载位置，并挂载刚刚的两个分区 mkdir boot root mount /dev/sdX1 boot mount /dev/sdX2 root  分区操作可以使用图形分区软件如gparted，我用的发行版中就自带了，更加直观。删除sd上的所有分区，新建一个100M空间的主分区，分区文件系统Fat32，再把剩余的空间创建一个分区，分区文件系统为Ext4，然后格式化保存即可。\n 下载系统文件，并解压 wget http://archlinuxarm.org/os/ArchLinuxARM-rpi-latest.tar.gz tar -xf ArchLinuxARM-rpi-latest.tar.gz -C root sync  官方镜像站下载速度慢的话，可以把下载地址替换为中科大的镜像，即把上述wget一行替换成以下内容\nwget http://mirrors.ustc.edu.cn/archlinuxarm/os/ArchLinuxARM-rpi-latest.tar.gz   然后把boot中的文件复制到第一个分区 mv root/boot/* boot   有linux环境，顺便修改一下软件源吧 nano root/etc/pacman.d/mirrorlist  在最顶行添加以下内容\nServer = http://mirrors.ustc.edu.cn/archlinuxarm/armv6h/$repo  然后 ctrl+x ，y，回车\n 卸载两个分区 umount boot root   弹出sd，至此，就可以把sd插到树莓派上了，第一次使用需要用有线连接才能连接网络。 ssh登陆用户名：root，密码：root。  参考文章  Raspberry Pi | Arch Linux ARM ","date":"2015-02-03","permalink":"https://www.maoxuner.cn/post/2015/02/rpi-archlinuxarm/","tags":["rpi","linux"],"title":"树莓派安装ArchLinuxARM系统"},{"content":"首先说一下，双系统并不会影响两个系统各自的速度。两个系统都是独立的，分别位于硬盘的不同位置，独立运行。也就是说，当一个系统在运行时，另一个系统只是储存在硬盘上的文件，这自然不会对系统的速度有影响。\n另外，安装双系统是有好处的。需要看这篇文章的人即使不是linux的新手，那至少也是ubuntu的新手。那我建议，你还是装双系统的好。因为，linux系的软件什么的支持还不是很好，若不是高手的话，遇到问题往往无从下手。安装双系统的话，即使linux系统不能很快适应或者完美配置，那还能切回windows系统进行日常操作。\n本教程适用于使用mbr分区硬盘\n好了，下面开始正式解说已有windows系统，如何再安装ubuntu，构成双系统。自行备份文件，本文不讲述文件备份的过程。 假设已有的系统的系统盘为C，安装ubuntu 14.10 64位桌面版系统，安装方式为硬盘安装（这意味着你不需要制作启动U盘了，教程后也会给出启动U盘的制作方法）\n1.下载ubuntu系统镜像 可以从官方网站下载，也可以从国内的镜像源下载，点不同的日期，就能下载对应的发行版。如当前最新的ubuntu 14.10，就点击14.10这个目录，然后就看到各个版本的镜像，一般的，我们下载名称如ubuntu-14.10-desktop-amd64.iso的64位桌面版镜像文件，或者名称如ubuntu-14.10-desktop-i386.iso的32位桌面版镜像文件 这是官方镜像站\nhttp://releases.ubuntu.com  这是国内镜像站\nhttp://mirrors.163.com/ubuntu-releases http://mirrors.ustc.edu.cn/ubuntu-releases  比如我这次是下载的网易镜像源的文件\nhttp://mirrors.163.com/ubuntu-releases/14.10/ubuntu-14.10-desktop-amd64.iso  复制ubuntu所需要的安装文件 用压缩软件打开下载的系统镜像文件ubuntu-14.10-desktop-amd64.iso，把其中的casper文件夹解压到c:\\\n创建grub4dos引导 复制grub4dos引导所需要的文件gldr gldr.mbr menu.lst到C盘根目录 打开menu.lst（可以用windows自带的记事本notepad.exe打开）并将文件内容替换成以下代码\ndefault 0 timeout 3 #引导Ubuntu系统# #title Ubuntu 14.10 #root (hd0,7) #kernel /boot/vmlinuz-3.16.0-23-generic root=UUID=eb3a4ffb-db80-42d4-a206-5c91fa0f5b28 ro quiet splash $vt_handoff #initrd /boot/initrd.img-3.16.0-23-generic #引导安装Ubuntu系统# #操作方法，将Ubuntu的iso镜像文件中的casper文件夹解压到C盘根目录 #注意64位操作系统vmlinuz.efi有.efi后缀，32位没有后缀（简单的方法就是去看casper文件夹下的文件是vmlinuz还是vmlinuz.efi） title Install Ubuntu find --set-root /casper/vmlinuz.efi kernel /casper/vmlinuz.efi boot=casper ro ignore_uuid initrd /casper/initrd.lz #引导硬盘上的Win系统# title Microsoft Windows 7 Ultimate root (hd0,0) chainloader +1  接下来的引导创建步骤要分两种\n①WinXP 右击“我的电脑”选择“属性”，然后选择“高级”标签，然后点“启动和故障恢复”选项中的“设置”按钮，接着点击“编辑”。此时会打开一个文本文件，在文本文件的末尾添加一行，并添加代码C:\\grldr=\u0026quot;Grub4Dos\u0026quot;\n[boot loader] timeout=3 default=multi(0)disk(0)rdisk(0)partition(1)\\WINDOWS [operating systems] multi(0)disk(0)rdisk(0)partition(1)\\WINDOWS=\u0026quot;Microsoft Windows XP Professional\u0026quot; /noexecute=optin /fastdetect C:\\grldr=\u0026quot;Grub4Dos\u0026quot;  ②Win7/Win8 运行bootice.exe然后按下图提示操作，打开“BCD编辑”标签，再选择“系统BCD”，接着点“查看/修改”。\n在新的窗口中点击右上方的“添加”，然后选择“实模式启动项（Grub4dos等）”，然后点右下角的“保存当前系统设置”\n4.给ubuntu系统留出足够的空闲磁盘空间 用无损分区软件如Diskgenius给ubuntu系统腾出一块空闲磁盘空间，暂时不需要创建分区\n5.确定一下图片中的文件都有。确认无误重启系统，选择启动项的时候选择“Grub4dos” 至此，就能进入ubuntu的预操作环境了，跟windows的pe系统类似，点击桌面上的Install运行系统安装程序 此处略过系统的部分安装步骤，主要是配置什么的，自己摸索吧，很简单。 这里重点讲一下安装过程的分区过程。 如下图，先单击之前空出来的空闲磁盘空间，然后单击左下方的“+”，创建新的分区，并分配挂载点。安装系统的话，至少要分配/挂载点，相当于系统盘目录。如图所示。如果还要分配/home（相当于windows“我的文档”目录）等其他挂载点，那就要调节上面的“大小”值，并在下面挂载相应的挂载点。\n另外，安装启动引导器的设备这一项可以保持默认。这样，系统的引导会替换成grub引导，并同时生成ubuntu以及windows的引导。如果仍然想用windows的引导，请把这边选成ubuntu系统所安装的那个盘。确认无误，点击“现在安装”。因为没有分“swap”分区，安装器会提示，不过没关系，忽略即可。（本文保留默认设置） 然后还有一部分配置内容，很简单，就不赘述了。安装完成后，系统会提示是否继续体验系统，还是重启。此时选择重启就行了。 对于“安装启动引导器的设备”这一项保留了默认值的，重启后就能进入刚刚安装的ubuntu系统了。 “安装启动引导器的设备”选择了ubuntu系统的分区，或者保留了默认值，想换回windows的引导器的情况，请继续往下看 重启时重启到windows的系统，如果windows的引导器被替换了的要先在WinPE系统中修复windows引导。\n重启到windows分区后，先打开bootice.exe查看原来的grub4dos引导项还在不在，如果不在的话，按照上文方法重新创建，如果在的话，则进行下一步。 打开Diskgenius，找到ubuntu分区的序号并记住，比如我的是7，如下图所示\n打开LinuxReader.exe，根据容量、盘符、卷标等信息，找到ubuntu所在的盘\n然后打开，进入/boot/grub/目录，右击grub.cfg文件，选择“Preview in New Window”\n找到menuentry 'Ubuntu'所在的行\n将隔几行下面linux以及initrd后面的文字复制到menu.lst的kernel以及initrd后面，并去掉对应位置前面的# 下图红框root (hd0,7)中的7就是刚刚在Diskgenius中看的序号\n至此，保存，重启时进入Grub4dos启动项就可以进入ubuntu系统了\n","date":"2015-02-03","permalink":"https://www.maoxuner.cn/post/2015/02/windows-with-ubuntu/","tags":["linux"],"title":"实体机已有windows安装ubuntu系统 双系统"},{"content":"Typecho自带的文字编辑器太简陋了，于是换用了之前一直很喜欢的KindEditor。 然而，使用KindEditor上传图片或者文件时却出现了找不到上传路径的错误提示\nFatal error: Undefined class constant 'UPLOAD_DIR' in /var/www/defualt/usr/plugins/KindEditor/Upload.php on line 75  解决方法 Typecho官方常见问题中给出了相应的解决办法，即 在config.inc.php里新增一行下列代码即可，\n/** 自定义文件上传路径 */ define('__TYPECHO_UPLOAD_DIR__', 'your_upload_dir');  其中your_upload_dir是你要上传的目录，例如\n/** 自定义文件上传路径 */ define('__TYPECHO_UPLOAD_DIR__', '/usr/uploads/');  参考文章  常见问题 ","date":"2015-02-03","permalink":"https://www.maoxuner.cn/post/2015/02/typecho-kindeditor-upload-dir/","tags":["php","typecho"],"title":"Typecho使用KindEditor插件上传 找不到上传路径UPLOAD_DIR错误 解决办法"},{"content":"XMBC是我们最喜欢的媒体中心解决方案之一。Raspberry Pi使得打造一台豪华的XMBC机器仅需35$。有三个为Pi定制的版本，但是，你该选择哪一个呢？这些版本略有差异，各有长短。本文将介绍如何选择一个合适的版本。\n在这里，用于Pi的XMBC系统，你有三大选择：Raspbmc（我们之前已经介绍过），OpenELEC以及XBian。这三者操作起来与安装了XMBC的PC差不多，并且都拥有相似的基本功能。但是他们在某些小的方面略有不同，使得他们各自在Pi上的配置方法也不同。让我们来了解了解这三者的差异以及优缺点。\nRaspbmc使得一切开箱即用 在此之前，我们已经带着你用Raspbmc来设置你的Raspberry Pi，它的安装和运行过程都非常容易。只需要下载相应的安装器，10-15分钟后，它就安装到你的SD上面了。从这开始，你几乎可以与其他任何XBMC安装一样设置Raspbmc。这里的用户界面也正如XBMC用户所期待的一样。如果你之前用过XBMC，你将会很容易就完成设置。 Raspbmc运行在一个完整版本的Linux后台中，因而启动起来费点时间，并且占据了你的SD的很大一部分空间。相比于更轻量级的发行版，如OpenELEC，感觉上它的用户界面反应有点迟缓。也就是说，唯一的真正与媒体中心有关的视频播放功能，在Raspbmc上运行良好。你也不需要做任何工作，来让它能正常运行。流媒体音乐也能开箱即用，Airplay和PVR也不需要任何特殊设置。在开始时，你也能接触到加载项，并且大多数加载项开箱即能良好运行。 Raspbmc给你提供了一个高级设置菜单，你可以在那里设置你的网络、安装更新、调整超频、关闭服务如SSH等等。并且，由于是运行在一个完整版本的Linux中，对于那些想要在后台使用命令行、深度挖掘的人，这再熟悉不过了。基本上，Raspbmc有你从一开始，安装和设置媒体中心所需要的一切。\n 优点：安装简单、开箱即用、很大调整空间 缺点：运行慢\n Raspbmc适合人群：Raspbmc作为最受欢迎的XBMC发行版有个原因：它无所不包、易于设置、自动更新（所以你总能拥有新功能）并且开箱即用。如果你是Raspberry Pi之XBMC或者一般媒体中心的新手，Raspbmc是一个很好的开始。它也毫无大问题，因为它有一个活跃的社区。\nOpenELEC是个精简优化过的XBMC版本 OpenELEC与Raspbmc有着相同的目标：为你的Raspberry Pi提供一个简单的媒体中心。这两者的主要区别在于OpenELEC与底层的Linux发行版无关，完整安装后大约100MB（Raspbmc大约是它的两倍）。OpenELEC为一个目的而生：成为一个独立的轻量级XBMC盒子。既然OpenELEC更加小巧，因而启动更快，感觉比Raspbmc迅速一点。尽管OpenELEC没有像前者那么多的调节性和扩展性，然而，这两者的功能几乎相同。OpenELEC有它自己的安装和设置界面，并且你也不能在Linux终端进行任何设置。视频、音频播放用起来正如你期待XBMC的样子。相似的，扩展、皮肤以及其他一切都能开箱即用。 但是，OpenELEC致力于简单，你确实损失了一些功能。如果你想增加驱动文件的类型，你将不得不从头开始完全重建OpenELEC。它的安装过程完全不似Raspbmc那样简单，这意味着它比Raspbian更难定制。然而，你也不需要大量技术能力才能开始。由于它不是个自动的过程，你需要注意你在做什么。\n 优点：很快 缺点：更难安装、调节空间较小\n OpenELEC适合人群：让OpenELEC运行起来要比Raspbmc多耗费一些精力。也就是说，一旦安装完成，OpenELEC能比Raspbmc快一点。如果你不需要大量疯狂的设置或者驱动，只是想要个简单的媒体中心，OpenELEC很可能是你想要的XBMC版本。但是，OpenELEC不能当做操作系统或者用于其他任何作用。一旦SD上安装上了OpenELEC，它就只能运行XBMC了。\nXBian一直处于新功能的最前沿 XBian大概只有两个特征：持续更新以及新功能。像OpenELEC一样，XBian简单而小巧。这使得XBian启动迅速、安装简单、使用容易。 XBian基于Raspberry Pi的主要操作系统Raspbian而制作。正因为如此，几乎兼容Raspbian的一切，这意味着不需要大量设置既可以安装包和扩展到XBian上面。也因为相同的原因，XBian的启动过程比Raspbmc快，但比OpenELEC慢。然而，一旦你进入用户界面，XBian的响应就很迅速了。就像Raspbmc，XBian一开箱就像你想要的一样良好运行，并且能支持Airplay，无线适配以及一切你希望XBMC所能够的。就外观而言，XBian和Raspbmc几乎一致。 像Raspbmc一样，XBian的安装容易程度令人难以置信，并且配备有安装器。你不需要忙于制作传统SD镜像，这使得第一次入手Raspberry Pi项目和之前从未接触过Linux的人有一个很好的选择。与Raspbmc相比，XBian倾向于更多的增量更新，这意味着小功能一直在增加到XBian当中。Raspbmc通常也能得到相同的更新，只不过在登陆你的Raspberry Pi之前会要耗费几个月的时间。 XBian还支持包安装器，你只需轻轻一点即可下载整套软件。这意味着你可以很简单就安装Samba，Couch Potato或者Sick Beard。对于一个迷你家庭服务器，这太完美了。\n 优点：迅速、高度配置性、安装简单、比其他任何版本先获得新功能 缺点：最前沿可能有的漏洞\n XBian适用人群：XBian的主要目标是让你处于XBMC上一切的最前沿。这意味着经常有新功能，同时也意味着漏洞。所以，你必须愿意一遍又一遍的处理问题。总而言之，XBian处于Raspbmc和OpenELEC之间。它灵活迅速，却不像OpenELEC一样呆板简单。要是一个金发女孩想要为Raspberry Pi找个XBMC,她有可能从XBian入手。 最后，这确实关系到个人爱好以及你愿意投入到媒体中心安装的时间。测试完这三者后，我的选择是OpenELEC，因为它感觉上更快速、稳定，并且比Raspbmc和XBian更加顺滑，但你的见解也许不同。总的说来，它们都是免费的，既然你有装有多种操作系统的多个SD。出于兴趣，把它们都测试一遍也无伤大雅。 上面三个选择不是Raspberry Pi上家庭影院的终结，但它们是迄今为止优化的最好的。Plex家庭影院端口、RasPlex前景都不错，尽管还在公测阶段。（你可以在这里查看XMBC和Plex的区别）。PiCast是另一个把你的Raspberry Pi变成一个开源的类似Chromecast设备的公测版。\n 参考文章  Raspberry Pi XBMC Solutions Compared: Raspbmc vs OpenELEC vs XBian 谷歌翻译 Raspberry Pi的XBMC解决方案相比：Raspbmc与OpenELEC与XBian Raspbian直装XBMC ","date":"2015-02-02","permalink":"https://www.maoxuner.cn/post/2015/02/rpi-xbmc/","tags":["rpi"],"title":"Raspberry Pi之XBMC解决方案比较：Raspbmc OpenELEC XBian"},{"content":"往往越是这种娓娓道来的片子越能戳中人的泪腺。\n时长两个多小时的剧情片。无论是故事本身还是叙事手法，镜头剪辑或是配乐方面，都能够做得如此完美以至每一个画面，每一处伏笔，每一分钟都极富有分量的佳作，实为少见。\n是使人在看的过程中对生命不得不生出几分敬畏，对人生不能不悟出几分感慨的。然而在剧终的大提琴曲响起的时候，闭上眼睛，顿感胸中是一种沉甸甸，也许不看上个两三遍是无法精准并完整地整理并描述出这种感受的。\n关于梦想 其实，这个寻常却又不寻常的入殓师的故事是由始至终贯穿着另一条线索的。那就是大提琴。故事由大提琴开始（小林面临“乐团解散”的噩耗与购买乐器的高昂债务偶然得到入殓师的工作），过渡（在迷惘彷徨屡遭不顺与误解的时候以演奏大提琴抚慰自己），并且由大提琴告终（寻得久未逢面的父亲，重拾亲情，最终在大提琴的曲子中得到心灵的成熟与升华）。\n练习与演奏大提琴是父亲一手督促的，也成为了主人公一度的“梦想”所在。然而人生很多的设定其实有时只是自己的一厢情愿，当走到了一个分岔路口面临选择的时候，除了坚持最初的选择，更要有勇气迈出新的一步，否则“梦想”，也只会徒然变为牵绊梦想的赘物。\n正如主人公自己所说“明明是面临人生最大的转折点，不过一旦决定放弃，突然觉得好轻松。因为一直被大提琴束缚着，反而有种得到解脱的感觉。一直深信是梦想的东西，事实上并非如此。\n关于死亡 生命是值得敬畏的。死可能是一道门，逝去并不是终结，而是超越，走向下一程。影片想要传达的，是这样一种超脱释然的对死亡的理解。相信入殓师那一套娴熟的纳棺技巧抑或说程序，定会给观影者留下深刻的印象。作为送行者，怀着对亡者亲人悲痛的理解与对亡者的尊敬与悼念，满富感情地为其擦拭、整理妆容。让未亡者得以见到逝者生前的妆容，目送逝者以最美的姿态进入轮回。敢问世间还有什么比这种工作更为神圣而伟大的？\n我喜欢日本人称逝者为往生者的习惯。这种称呼同样饱含着温温的柔情与祝福，赋予冰冷的死亡以温暖的希望。\n突然想起同样作为日本人的村上在《挪威的森林》中写出的观点：“死，并非生的对立面，而作为生的一部分永存。”\n我想，流行在日本的这种葬礼文化，以及由此体现出的日本人的生死观，也是值得我们观影过后深深思忖的吧。\n关于爱情 130分钟的影片中，夫妻之间的描写并没有占据太多的篇幅。但是寥寥几笔几段细节的刻画，几个场景的铺陈，却十分立体并深刻地渲染出真爱的含义。\n爱是包容，是倾听，是理解，是坚定的支持，是不离不弃的守候。\n从广末凉子温柔的眼神中，我读出的是爱。\n从火葬场大叔嘴角的微笑中，我读出的是爱。\n小林事业不顺，遭到挫败，面对梦想，濒临放弃，妻子没有满脸的责怪抱怨，而是默默地去厨房准备好晚餐，这是爱。\n小林深夜要出去接手工作，妻子假装熟睡，第二天清晨为丈夫披上外衣上班，这是爱。\n陪同丈夫参加澡堂婆婆的纳棺礼，用心地看着丈夫工作，摒弃偏见与他人非议，用心去谅解然后理解丈夫的工作与信仰，这是爱。\n爱是你困难的时候，不被理解的时候，我默默地陪在你身边，手心握着你送我的鹅卵石，然后贴到自己胸口。\n爱是手心石文的重量。\n关于亲情 整个影片的重中之重，极力宣扬并崇尚的，便是至亲之情了。\n表面来看，小林充满了对父亲的怨愤。埋怨他为何抛下母亲抛下儿子不管，埋怨他为何如此地不负责任，埋怨他为何只在自己的生命中出现了那么短暂的一段光阴，以至自己都无法忆起自己父亲的脸，哪怕就在面前也无法辨认。\n但其实，对父亲，真的是恨么？\n那又如何会一直保持对大提琴的热爱，如何会在深夜一次次地想起一家三口共度的难得的那个江边的夜晚，如何会保存父亲送给自己的石文，如何记得父亲讲给自己的典故，如何在看到父亲遗体遗物的时候感叹，这个人的人生到底是怎样，难道不是一种深深的思念？难道这些不是对父亲另一种形式的怀念么？\n如果真的是恨，为何看到父亲临死手中握着自己送他的石文，瞬间泪流满面，为何父亲的面容越来越清晰，为何最后泣不成声，坚定地说，没错，这就是我的父亲……\n影片前半部分铺设的重重谜题，似乎最后答案都一一浮出水面。然而真相凸出的那一刻，眼泪又如何能控制住不掉下来。\n最后的一句，爸爸，当真诠释了一切。多少年的怨恨，多少年的委屈，全部消融在这一刻。如果真的有灵魂，也许父亲的灵魂，可以安心地随着天鹅飞远。再无牵挂，了无遗憾了。\n片子很长，看完的时候已经凌晨1点半了。如此好的片子，实在不忍心不记录下此刻的感慨就匆匆睡去。于是稀里糊涂地敲下这些东西。其实要表达的还很多，比如老的入殓师，比如澡堂婆婆，太多东西值得咀嚼值得品味了。也许等第二次看，会补充上来新的体悟与感慨。\n我是相信宿命与轮回这种东西的。\n安。\n风信子\n 转自生命的石文\n","date":"2015-02-02","permalink":"https://www.maoxuner.cn/post/2015/02/departures/","tags":["movie"],"title":"《入殓师》影评：生命的石文 - 风信子"},{"content":"本文年代久远，可能已经不适用。仅供参考！\n总有一些强迫症的奇葩，看到安卓手机在路由器里面的主机名称示诸如android-515------**23b22之类的名称，感到不爽，非常不方便识别自己的手机。\n一般情况下，安卓手机的主机名为类似于android-515------**23b22这样的字符串，在路由器下的显示不够友好，不方便管理。针对root过的手机，可以按照本文的方法修改主机名。\n首先，要有一定的动手能力。然后，一部root过的安卓手机。最后，就是本篇教程啦。\n方法一：用命令修改主机名 需要的安卓应用：终端模拟器 （或者其他可以执行命令操作的应用）\n在终端模拟器中输入以下命令\nsu getprop net.hostname setprop net.hostname Cupid getprop net.hostname  过程如图\n代码解释\nsu获得root权限，这一步，授权管理要设置允许\ngetprop net.hostname查看此时的主机名\nsetprop net.hostname Cupid设置主机名为Cupid，可以替换成你想要名称，只能是英文或者数字，不能有空格\n 优点 简单，安全 弊端 重启手机后，设置失效，需要重新设置主机名。不过，我们一般很少重启手机，这个办法也可以用一用。\n 方法二：修改系统配置文件/system/build.prop 需要的安卓应用：R.E.管理器 （或者其他带有root功能的文件管理器）\n用R.E.管理器挂载/system目录为可写，然后打开/system/build.prop文件，并在最后一行加入以下內容\nnet.hostname=Cupid  等号后面是自己想设置的主机名，根据实际情况替换，要求同样是只能是英文或者数字，不能有空格。R.E.管理器会自动备份原文件。保存以后重启手机就可以了。该方法能够永久生效，一劳永逸。过程如下所示\n展示一下设置成功后的效果图\n參考文章  Andriod WIFI手机名称怎么更改 请问如何更改android手机在无线路由里显示的客户端名字 [A750]修改安卓手机在路由中显示的主机名 ","date":"2015-02-02","permalink":"https://www.maoxuner.cn/post/2015/02/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D/","tags":["android"],"title":"安卓手机修改主机名"},{"content":"故事呢，就是勉强凑足了四个人，组建了一个部门，一个乐队~主人公全是妹纸，吉他手平泽唯、贝司手秋山澪、鼓手田井中律以及键盘手琴吹䌷。\n平泽唯，真的就是天然呆了、神经大条。长得也很可爱，讨人喜欢。小唯是个吉他手，刚好我也开始学吉他。 平泽忧，平泽唯的妹妹。全能，温柔贤惠~ 秋山澪，女神一般的存在。摔跤露出胖次那段，简直福利。 井田中律，女汉子，跟我老妹一样。 琴吹䌷，温柔的蛇精病千金，跟我那个二逼朋友差不多。 中野梓，后来入部的一个小学妹，吉他手，技艺远比小唯高超。梓喵~人物设定跟五更琉璃有点像。\n好吧，我就是靠着看妹子看完整部剧的。\n《ふわふわ时间》\n","date":"2015-01-17","permalink":"https://www.maoxuner.cn/post/2015/01/%E8%BD%BB%E9%9F%B3%E5%B0%91%E5%A5%B3/","tags":["acg"],"title":"轻音少女"},{"content":" 《未闻花名》全称《我们仍未知道那天所看见的花的名字》。我觉得这是部经典的不能再经典了的动漫吧，应该很多人都看过才对。不得不说，中文翻译的名称未闻花名真的是太赞了，比日文字面的意思我们仍未知道那天所看见的花的名字增添了几分意境。\n 好像日本动漫中的季节永远是夏天。木底板，窗，绿树，知了，烈阳。穿短袖的汉子，以及穿短裙的妹纸。\n主人公，面码~跟火影忍者里面一个怪兽的昵称一样一样的。这部动漫，我想得最多的一个词是，羁绊。面码，是连接着幼时玩伴的纽带，是小伙伴之间的红线。顺着这根红线，小伙伴们又找回了当初亲密的感觉。原来，我们曾经是这么要好的朋友。\n看了这部动漫，我也想到了自己当孩子王的时代。小院，屋檐，秋千，小伙伴。我们用砖块、易拉罐，搭起简单的小灶，以废旧的作业本作为燃料，胡乱的煮着东西。如今，我们散落在世界的各个角落，各自安好。\n早就看过这部动漫了，后来忘记了，结果又看了一遍。于是，自己又被感动了一遍。不过，相比之下，我还是更喜欢安鸣。安鸣刚好是我喜欢的样子，腼腆而又热情，身材比面码好太多呀。\n片尾曲Secret Base ~君がくれたもの~很好听，请看下面的视频。另外这个视频剪辑的也很棒！但是听到这首歌，我会莫名其妙的伤感，也许是也怀念我的小时候，怀念我的玩伴吧。\n 原视频链接：【MAD】我们仍未知道那天所看见的花的名字\n","date":"2015-01-10","permalink":"https://www.maoxuner.cn/post/2015/01/%E6%9C%AA%E9%97%BB%E8%8A%B1%E5%90%8D/","tags":["acg"],"title":"未闻花名"},{"content":" 《白兔糖》是日本漫画家宇仁田由美创作的漫画作品，有同名根据漫画改编的动画以及真人电影版。讲述了30岁的单身男子河地大吉收养了其祖父的\u0026quot;私生女\u0026quot;——6岁的鹿贺凛，两人在同一屋檐下的生活的故事。\n 本来是想像写影评一样，介绍介绍自己看过的ACG作品。无奈没啥文笔，也就简单做些记录吧。\n我观看的是由漫画改编成的动漫，总共11集。主人公为小女孩鹿贺凛，以及富有爱心的监护人河地大吉。 在大吉祖父的葬礼上，大吉遇到了这个小女孩，是祖父的私生女。可能是觉得羞耻、麻烦，亲戚们都不愿意照顾鹿贺凛。这遭遇感觉有点像夏目贵志啊。然后，大吉一时爱心泛滥，决定照顾这个小女孩了。 一个单身汉，突然有了一个需要照顾的小孩，仿佛一瞬间变成了爸爸的角色。大吉一边努力的工作着，一边像爸爸一样，摸索着，照顾这个姑娘。总之，这个小姑娘也像夏目一样，被幸运之神眷顾了。同时，也温暖了我们大家。\n这部动漫，我看过两遍了吧。一来，情节比较短，二来，故事的展开非常轻松，而且富有爱心，很治愈。\n","date":"2015-01-03","permalink":"https://www.maoxuner.cn/post/2015/01/%E7%99%BD%E5%85%94%E7%B3%96/","tags":["acg"],"title":"白兔糖"},{"content":"这些因为迷路而走过的路，看到的风景，遇到的人，这辈子，也许就只有这一次。\n那天好像是最后一次骑我的自行车出远门，从学校，沿着虎踞北路，去火车站取车票的。路过了好几个学校，看见了好多往日都不会看到的风景。现在想来，虽然在南京待了4年，好多地方都没有去过，好多景致也都没有看过。不得不说，蛮遗憾的。感觉自己就匆匆过了四年，然后又匆匆离开了，似乎就是个过客。也好像就是过客吧，每年南京都会迎来青涩的面孔，然后又送走一批稚气未脱的年轻人。\n","date":"2014-07-17","permalink":"https://www.maoxuner.cn/post/2014/07/%E8%84%9A%E4%B8%8B%E7%9A%84%E5%8D%97%E4%BA%AC/","tags":null,"title":"脚下的南京"},{"content":"这是打包的最后一批东西。再贱，江宁。再贱，7-316，这个我生活了2年的窝。\n","date":"2014-07-15","permalink":"https://www.maoxuner.cn/post/2014/07/bye-hhu/","tags":null,"title":"再见，江宁"},{"content":"Hello, World! N种语言的Hello, World!\n  Shell\n#!/bin/sh echo \u0026quot;Hello, World!\u0026quot;    Fortran\nprogram main implicit none print *,\u0026quot;Hello, World!\u0026quot; end program main    C\n#include \u0026lt;stdio.h\u0026gt; int main() { printf(\u0026quot;Hello, World\u0026quot;); return 0; }    Python\nprint(\u0026quot;Hello, World!\u0026quot;)    JavaScript\nconsole.log(\u0026quot;Hello, World!\u0026quot;);    PHP\necho 'Hello, World!';    Go\npackage main import \u0026quot;fmt\u0026quot; func main(){ fmt.Print(\u0026quot;Hello, World!\u0026quot;); }    setTimeout(function(){ console.log(\"I Love Young!\"); alert(\"Hello, World!\"); }, 5000); ","date":"2014-06-28","permalink":"https://www.maoxuner.cn/post/2014/06/hello-world/","tags":["shell","fortran","c","python","javascript","php","go"],"title":"Hello, World!"}]